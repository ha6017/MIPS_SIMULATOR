Hello, Starting the simulator
Opening file tests/bin/add1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430003
Fetched 268435460 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231020
Fetched 268435464 0b 000000 00001 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 6 = 3 + 3
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 6
Hello, Starting the simulator
Opening file tests/bin/add2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2043fffd
Loading instruction to memory: 10000008 0b 001000 00010 00011 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2043fffd
Fetched 268435460 0b 001000 00010 00011 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0xfffffffd  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231020
Fetched 268435464 0b 000000 00001 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967290 = -3 + -3
0: 0x0  0xfffffffd  0xfffffffa  0xfffffffd  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0xfffffffa  0xfffffffd  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0xfffffffa  0xfffffffd  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 250
Hello, Starting the simulator
Opening file tests/bin/add3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001ffff
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20067fff
Loading instruction to memory: 10000008 0b 001000 00000 00110 01111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61c00
Loading instruction to memory: 1000000c 0b 000000 00000 00110 00011 10000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x612824
Loading instruction to memory: 10000010 0b 000000 00011 00001 00101 00000 100100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0xa51020
Loading instruction to memory: 10000014 0b 000000 00101 00101 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001ffff
Fetched 268435456 0b 001000 00000 00001 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20067fff
Fetched 268435460 0b 001000 00000 00110 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61c00
Fetched 268435464 0b 000000 00000 00110 00011 10000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 01111111111111110000000000000000 = 00000000000000000111111111111111 << 16
0: 0x0  0xffffffff  0x0  0x7fff0000  0x0  0x0  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x612824
Fetched 268435468 0b 000000 00011 00001 00101 00000 100100
Decoding: op, func -> AND
Instruction decoded.
AND 0x7fff0000 = 0x7fff0000 & 0xffffffff
0: 0x0  0xffffffff  0x0  0x7fff0000  0x0  0x7fff0000  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0xa51020
Fetched 268435472 0b 000000 00101 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294836224 = 2147418112 + 2147418112
Add overflow. 
Arithmetic exception occured. Terminating with code -10
Hello, Starting the simulator
Opening file tests/bin/add4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c038000
Loading instruction to memory: 10000008 0b 001111 00000 00011 10000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c038000
Fetched 268435460 0b 001111 00000 00011 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231020
Fetched 268435464 0b 000000 00001 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = -2147483648 + -2147483648
Add overflow. 
Arithmetic exception occured. Terminating with code -10
Hello, Starting the simulator
Opening file tests/bin/add5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2401ffff
Loading instruction to memory: 10000004 0b 001001 00000 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x10842
Loading instruction to memory: 10000008 0b 000000 00000 00001 00001 00001 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x24067fff
Loading instruction to memory: 1000000c 0b 001001 00000 00110 01111 11111 111111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x61c00
Loading instruction to memory: 10000010 0b 000000 00000 00110 00011 10000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x612825
Loading instruction to memory: 10000014 0b 000000 00011 00001 00101 00000 100101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0xa01020
Loading instruction to memory: 10000018 0b 000000 00101 00000 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2401ffff
Fetched 268435456 0b 001001 00000 00001 11111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967295 = 0 + 4294967295
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x10842
Fetched 268435460 0b 000000 00000 00001 00001 00001 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 01111111111111111111111111111111 = 11111111111111111111111111111111 >> 1
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x24067fff
Fetched 268435464 0b 001001 00000 00110 01111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 32767 = 0 + 32767
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x61c00
Fetched 268435468 0b 000000 00000 00110 00011 10000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 01111111111111110000000000000000 = 00000000000000000111111111111111 << 16
0: 0x0  0x7fffffff  0x0  0x7fff0000  0x0  0x0  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x612825
Fetched 268435472 0b 000000 00011 00001 00101 00000 100101
Decoding: op, func -> OR
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0x7fffffff
0: 0x0  0x7fffffff  0x0  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0xa01020
Fetched 268435476 0b 000000 00101 00000 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2147483647 = 2147483647 + 0
0: 0x0  0x7fffffff  0x7fffffff  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x7fffffff  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x7fffffff  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/add6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x201020
Loading instruction to memory: 10000008 0b 000000 00001 00000 00010 00000 100000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x201020
Fetched 268435460 0b 000000 00001 00000 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2147483648 = -2147483648 + 0
0: 0x0  0x80000000  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/add7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2003ffff
Loading instruction to memory: 10000008 0b 001000 00000 00011 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010001
Fetched 268435456 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2003ffff
Fetched 268435460 0b 001000 00000 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231020
Fetched 268435464 0b 000000 00001 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 1 + -1
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/addi1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20020003
Loading instruction to memory: 10000004 0b 001000 00000 00010 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20020003
Fetched 268435456 0b 001000 00000 00010 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/addi2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2002fffd
Loading instruction to memory: 10000004 0b 001000 00000 00010 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2002fffd
Fetched 268435456 0b 001000 00000 00010 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 253
Hello, Starting the simulator
Opening file tests/bin/addi3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c027fff
Loading instruction to memory: 10000004 0b 001111 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3442ffff
Loading instruction to memory: 10000008 0b 001101 00010 00010 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20420001
Loading instruction to memory: 1000000c 0b 001000 00010 00010 00000 00000 000001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c027fff
Fetched 268435456 0b 001111 00000 00010 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3442ffff
Fetched 268435460 0b 001101 00010 00010 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20420001
Fetched 268435464 0b 001000 00010 00010 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 2147483648 = 2147483647 + 1
Add overflow. 
Arithmetic exception occured. Terminating with code -10
Hello, Starting the simulator
Opening file tests/bin/addi4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c028000
Loading instruction to memory: 10000004 0b 001111 00000 00010 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2042ffff
Loading instruction to memory: 10000008 0b 001000 00010 00010 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c028000
Fetched 268435456 0b 001111 00000 00010 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2042ffff
Fetched 268435460 0b 001000 00010 00010 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 2147483647 = -2147483648 + -1
Add overflow. 
Arithmetic exception occured. Terminating with code -10
Hello, Starting the simulator
Opening file tests/bin/addi5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2042f0f0
Loading instruction to memory: 10000004 0b 001000 00010 00010 11110 00011 110000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x21602
Loading instruction to memory: 10000008 0b 000000 00000 00010 00010 11000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2042f0f0
Fetched 268435456 0b 001000 00010 00010 11110 00011 110000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963440 = 0 + -3856
0: 0x0  0x0  0xfffff0f0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x21602
Fetched 268435460 0b 000000 00000 00010 00010 11000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000011111111 = 11111111111111111111000011110000 >> 24
0: 0x0  0x0  0xff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/addi6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20427f60
Loading instruction to memory: 10000004 0b 001000 00010 00010 01111 11101 100000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1c400002
Loading instruction to memory: 10000008 0b 000111 00010 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2003fc54
Loading instruction to memory: 10000014 0b 001000 00000 00011 11111 10001 010100
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x4600002
Loading instruction to memory: 10000018 0b 000001 00011 00000 00000 00000 000010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000028 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000030
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20427f60
Fetched 268435456 0b 001000 00010 00010 01111 11101 100000
Decoding: op -> ADDI
Instruction decoded.
ADD 32608 = 0 + 32608
0: 0x0  0x0  0x7f60  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1c400002
Fetched 268435460 0b 000111 00010 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0x0  0x7f60  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x7f60  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x2003fc54
Fetched 268435472 0b 001000 00000 00011 11111 10001 010100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294966356 = 0 + -940
0: 0x0  0x0  0x7f60  0xfffffc54  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x4600002
Fetched 268435476 0b 000001 00011 00000 00000 00000 000010
Decoding: op, rt -> BLTZ
Instruction decoded.
JB taken 268435480 -> 268435480 + 00000000000000000000000000001000 = 268435488
0: 0x0  0x0  0x7f60  0xfffffc54  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x7f60  0xfffffc54  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x7f60  0xfffffc54  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x2002ffff
Fetched 268435492 0b 001000 00000 00010 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x0  0xffffffff  0xfffffc54  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffffff  0xfffffc54  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x8
Fetched 268435500 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffffff  0xfffffc54  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/addiu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24020003
Loading instruction to memory: 10000004 0b 001001 00000 00010 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24020003
Fetched 268435456 0b 001001 00000 00010 00000 00000 000011
Decoding: op -> ADDUI
Instruction decoded.
ADDU 3 = 0 + 3
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/addiu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2402ffff
Loading instruction to memory: 10000004 0b 001001 00000 00010 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24420001
Loading instruction to memory: 10000008 0b 001001 00010 00010 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2402ffff
Fetched 268435456 0b 001001 00000 00010 11111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967295 = 0 + 4294967295
0: 0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24420001
Fetched 268435460 0b 001001 00010 00010 00000 00000 000001
Decoding: op -> ADDUI
Instruction decoded.
ADDU 0 = 4294967295 + 1
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/addiu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2442f0f0
Loading instruction to memory: 10000004 0b 001001 00010 00010 11110 00011 110000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x21602
Loading instruction to memory: 10000008 0b 000000 00000 00010 00010 11000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2442f0f0
Fetched 268435456 0b 001001 00010 00010 11110 00011 110000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294963440 = 0 + 4294963440
0: 0x0  0x0  0xfffff0f0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x21602
Fetched 268435460 0b 000000 00000 00010 00010 11000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000011111111 = 11111111111111111111000011110000 >> 24
0: 0x0  0x0  0xff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/addu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24410003
Loading instruction to memory: 10000004 0b 001001 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24430003
Loading instruction to memory: 10000008 0b 001001 00010 00011 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231021
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24410003
Fetched 268435456 0b 001001 00010 00001 00000 00000 000011
Decoding: op -> ADDUI
Instruction decoded.
ADDU 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24430003
Fetched 268435460 0b 001001 00010 00011 00000 00000 000011
Decoding: op -> ADDUI
Instruction decoded.
ADDU 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231021
Fetched 268435464 0b 000000 00001 00011 00010 00000 100001
Decoding: op, func -> ADDU
Instruction decoded.
ADDU 6 = 3 + 3
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 6
Hello, Starting the simulator
Opening file tests/bin/addu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2401ffff
Loading instruction to memory: 10000004 0b 001001 00000 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x10842
Loading instruction to memory: 10000008 0b 000000 00000 00001 00001 00001 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x24067fff
Loading instruction to memory: 1000000c 0b 001001 00000 00110 01111 11111 111111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x61c00
Loading instruction to memory: 10000010 0b 000000 00000 00110 00011 10000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x612825
Loading instruction to memory: 10000014 0b 000000 00011 00001 00101 00000 100101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0xa51021
Loading instruction to memory: 10000018 0b 000000 00101 00101 00010 00000 100001
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2401ffff
Fetched 268435456 0b 001001 00000 00001 11111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967295 = 0 + 4294967295
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x10842
Fetched 268435460 0b 000000 00000 00001 00001 00001 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 01111111111111111111111111111111 = 11111111111111111111111111111111 >> 1
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x24067fff
Fetched 268435464 0b 001001 00000 00110 01111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 32767 = 0 + 32767
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x61c00
Fetched 268435468 0b 000000 00000 00110 00011 10000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 01111111111111110000000000000000 = 00000000000000000111111111111111 << 16
0: 0x0  0x7fffffff  0x0  0x7fff0000  0x0  0x0  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x612825
Fetched 268435472 0b 000000 00011 00001 00101 00000 100101
Decoding: op, func -> OR
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0x7fffffff
0: 0x0  0x7fffffff  0x0  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0xa51021
Fetched 268435476 0b 000000 00101 00101 00010 00000 100001
Decoding: op, func -> ADDU
Instruction decoded.
ADDU 4294967294 = 2147483647 + 2147483647
0: 0x0  0x7fffffff  0xfffffffe  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0xfffffffe  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0xfffffffe  0x7fff0000  0x0  0x7fffffff  0x7fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 254
Hello, Starting the simulator
Opening file tests/bin/addu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x211021
Loading instruction to memory: 10000008 0b 000000 00001 00001 00010 00000 100001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x211021
Fetched 268435460 0b 000000 00001 00001 00010 00000 100001
Decoding: op, func -> ADDU
Instruction decoded.
ADDU 0 = 2147483648 + 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/and1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2043ffff
Loading instruction to memory: 10000004 0b 001000 00010 00011 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2004cc20
Loading instruction to memory: 10000008 0b 001000 00000 00100 11001 10000 100000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x641024
Loading instruction to memory: 1000000c 0b 000000 00011 00100 00010 00000 100100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2043ffff
Fetched 268435456 0b 001000 00010 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2004cc20
Fetched 268435460 0b 001000 00000 00100 11001 10000 100000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294954016 = 0 + -13280
0: 0x0  0x0  0x0  0xffffffff  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x641024
Fetched 268435464 0b 000000 00011 00100 00010 00000 100100
Decoding: op, func -> AND
Instruction decoded.
AND 0xffffcc20 = 0xffffffff & 0xffffcc20
0: 0x0  0x0  0xffffcc20  0xffffffff  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffcc20  0xffffffff  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffcc20  0xffffffff  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 32
Hello, Starting the simulator
Opening file tests/bin/and2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20437777
Loading instruction to memory: 10000004 0b 001000 00010 00011 01110 11101 110111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2004cc20
Loading instruction to memory: 10000008 0b 001000 00000 00100 11001 10000 100000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x641024
Loading instruction to memory: 1000000c 0b 000000 00011 00100 00010 00000 100100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20437777
Fetched 268435456 0b 001000 00010 00011 01110 11101 110111
Decoding: op -> ADDI
Instruction decoded.
ADD 30583 = 0 + 30583
0: 0x0  0x0  0x0  0x7777  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2004cc20
Fetched 268435460 0b 001000 00000 00100 11001 10000 100000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294954016 = 0 + -13280
0: 0x0  0x0  0x0  0x7777  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x641024
Fetched 268435464 0b 000000 00011 00100 00010 00000 100100
Decoding: op, func -> AND
Instruction decoded.
AND 0x4420 = 0x7777 & 0xffffcc20
0: 0x0  0x0  0x4420  0x7777  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x4420  0x7777  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x4420  0x7777  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 32
Hello, Starting the simulator
Opening file tests/bin/and3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2004cc20
Loading instruction to memory: 10000004 0b 001000 00000 00100 11001 10000 100000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x801024
Loading instruction to memory: 10000008 0b 000000 00100 00000 00010 00000 100100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2004cc20
Fetched 268435456 0b 001000 00000 00100 11001 10000 100000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294954016 = 0 + -13280
0: 0x0  0x0  0x0  0x0  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x801024
Fetched 268435460 0b 000000 00100 00000 00010 00000 100100
Decoding: op, func -> AND
Instruction decoded.
AND 0x0 = 0xffffcc20 & 0x0
0: 0x0  0x0  0x0  0x0  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0xffffcc20  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/and4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20437777
Loading instruction to memory: 10000004 0b 001000 00010 00011 01110 11101 110111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x631024
Loading instruction to memory: 10000008 0b 000000 00011 00011 00010 00000 100100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20437777
Fetched 268435456 0b 001000 00010 00011 01110 11101 110111
Decoding: op -> ADDI
Instruction decoded.
ADD 30583 = 0 + 30583
0: 0x0  0x0  0x0  0x7777  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x631024
Fetched 268435460 0b 000000 00011 00011 00010 00000 100100
Decoding: op, func -> AND
Instruction decoded.
AND 0x7777 = 0x7777 & 0x7777
0: 0x0  0x0  0x7777  0x7777  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x7777  0x7777  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x7777  0x7777  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 119
Hello, Starting the simulator
Opening file tests/bin/andi1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2043f956
Loading instruction to memory: 10000004 0b 001000 00010 00011 11111 00101 010110
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3062ffff
Loading instruction to memory: 10000008 0b 001100 00011 00010 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2043f956
Fetched 268435456 0b 001000 00010 00011 11111 00101 010110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294965590 = 0 + -1706
0: 0x0  0x0  0x0  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3062ffff
Fetched 268435460 0b 001100 00011 00010 11111 11111 111111
Decoding: op -> ANDI
Instruction decoded.
AND 0xf956 = 0xfffff956 & 0xffff
0: 0x0  0x0  0xf956  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xf956  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xf956  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 86
Hello, Starting the simulator
Opening file tests/bin/andi2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c037ff6
Loading instruction to memory: 10000004 0b 001111 00000 00011 01111 11111 110110
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3062ffff
Loading instruction to memory: 10000008 0b 001100 00011 00010 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c037ff6
Fetched 268435456 0b 001111 00000 00011 01111 11111 110110
Decoding: op -> LUI
Instruction decoded.
LUI 2146828288
0: 0x0  0x0  0x0  0x7ff60000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3062ffff
Fetched 268435460 0b 001100 00011 00010 11111 11111 111111
Decoding: op -> ANDI
Instruction decoded.
AND 0x0 = 0x7ff60000 & 0xffff
0: 0x0  0x0  0x0  0x7ff60000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x7ff60000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x7ff60000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/andi3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2003f956
Loading instruction to memory: 10000004 0b 001000 00000 00011 11111 00101 010110
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3062ff45
Loading instruction to memory: 10000008 0b 001100 00011 00010 11111 11101 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2003f956
Fetched 268435456 0b 001000 00000 00011 11111 00101 010110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294965590 = 0 + -1706
0: 0x0  0x0  0x0  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3062ff45
Fetched 268435460 0b 001100 00011 00010 11111 11101 000101
Decoding: op -> ANDI
Instruction decoded.
AND 0xf944 = 0xfffff956 & 0xff45
0: 0x0  0x0  0xf944  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xf944  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xf944  0xfffff956  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 68
Hello, Starting the simulator
Opening file tests/bin/beq1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10230002
Loading instruction to memory: 1000000c 0b 000100 00001 00011 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20450005
Loading instruction to memory: 10000014 0b 001000 00010 00101 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 10000018 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430003
Fetched 268435460 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10230002
Fetched 268435464 0b 000100 00001 00011 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x251020
Fetched 268435476 0b 000000 00001 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 3 = 3 + 0
0: 0x0  0x3  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 6 = 3 + 3
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 6
Hello, Starting the simulator
Opening file tests/bin/beq2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410001
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10230002
Loading instruction to memory: 1000000c 0b 000100 00001 00011 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440004
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20450005
Loading instruction to memory: 10000014 0b 001000 00010 00101 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 10000018 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 1000001c 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000020 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410001
Fetched 268435456 0b 001000 00010 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430003
Fetched 268435460 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x1  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10230002
Fetched 268435464 0b 000100 00001 00011 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB not taken
0: 0x0  0x1  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20440004
Fetched 268435468 0b 001000 00010 00100 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x1  0x0  0x3  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20450005
Fetched 268435472 0b 001000 00010 00101 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x1  0x0  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x251020
Fetched 268435476 0b 000000 00001 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 6 = 1 + 5
0: 0x0  0x1  0x6  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x441020
Fetched 268435480 0b 000000 00010 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 10 = 6 + 4
0: 0x0  0x1  0xa  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x431020
Fetched 268435484 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 13 = 10 + 3
0: 0x0  0x1  0xd  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0xd  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0xd  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 13
Hello, Starting the simulator
Opening file tests/bin/beq3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2043fffd
Loading instruction to memory: 10000008 0b 001000 00010 00011 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10230002
Loading instruction to memory: 1000000c 0b 000100 00001 00011 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440001
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20450005
Loading instruction to memory: 10000014 0b 001000 00010 00101 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 10000018 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 1000001c 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000020 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2043fffd
Fetched 268435460 0b 001000 00010 00011 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0xfffffffd  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10230002
Fetched 268435464 0b 000100 00001 00011 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0xfffffffd  0x0  0xfffffffd  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20440001
Fetched 268435468 0b 001000 00010 00100 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xfffffffd  0x0  0xfffffffd  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x251020
Fetched 268435476 0b 000000 00001 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967293 = -3 + 0
0: 0x0  0xfffffffd  0xfffffffd  0xfffffffd  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x441020
Fetched 268435480 0b 000000 00010 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967294 = -3 + 1
0: 0x0  0xfffffffd  0xfffffffe  0xfffffffd  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x431020
Fetched 268435484 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967291 = -2 + -3
0: 0x0  0xfffffffd  0xfffffffb  0xfffffffd  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0xfffffffb  0xfffffffd  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0xfffffffb  0xfffffffd  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 251
Hello, Starting the simulator
Opening file tests/bin/beq4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1023fffc
Loading instruction to memory: 1000000c 0b 000100 00001 00011 11111 11111 111100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440001
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20450005
Loading instruction to memory: 10000014 0b 001000 00010 00101 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 10000018 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 1000001c 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000020 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430003
Fetched 268435460 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1023fffc
Fetched 268435464 0b 000100 00001 00011 11111 11111 111100
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 11111111111111111111111111110000 = 268435452
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20440001
Fetched 268435468 0b 001000 00010 00100 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x3  0x0  0x3  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/beq5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410001
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430001
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10230007
Loading instruction to memory: 1000000c 0b 000100 00001 00011 00000 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 10000014 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000020 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x20440002
Loading instruction to memory: 1000002c 0b 001000 00010 00100 00000 00000 000010
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x20450002
Loading instruction to memory: 10000030 0b 001000 00010 00101 00000 00000 000010
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x1085fffa
Loading instruction to memory: 10000034 0b 000100 00100 00101 11111 11111 111010
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000038 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000003c 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000003c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410001
Fetched 268435456 0b 001000 00010 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430001
Fetched 268435460 0b 001000 00010 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10230007
Fetched 268435464 0b 000100 00001 00011 00000 00000 000111
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000011100 = 268435496
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x20440002
Fetched 268435496 0b 001000 00010 00100 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0x1  0x2  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x20450002
Fetched 268435500 0b 001000 00010 00101 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0x1  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x1085fffa
Fetched 268435504 0b 000100 00100 00101 11111 11111 111010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435508 -> 268435508 + 11111111111111111111111111101000 = 268435484
0: 0x0  0x1  0x0  0x1  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x0
Fetched 268435508 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x1  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x851020
Fetched 268435484 0b 000000 00100 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4 = 2 + 2
0: 0x0  0x1  0x4  0x1  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x4  0x1  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x4  0x1  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 4
Hello, Starting the simulator
Opening file tests/bin/beq6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410001
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430001
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10230007
Loading instruction to memory: 1000000c 0b 000100 00001 00011 00000 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 10000014 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000020 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x20440000
Loading instruction to memory: 1000002c 0b 001000 00010 00100 00000 00000 000000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x20450002
Loading instruction to memory: 10000030 0b 001000 00010 00101 00000 00000 000010
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x1085fffa
Loading instruction to memory: 10000034 0b 000100 00100 00101 11111 11111 111010
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000038 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0xa41020
Loading instruction to memory: 1000003c 0b 000000 00101 00100 00010 00000 100000
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000040 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000044 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000048 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000048
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410001
Fetched 268435456 0b 001000 00010 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430001
Fetched 268435460 0b 001000 00010 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10230007
Fetched 268435464 0b 000100 00001 00011 00000 00000 000111
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000011100 = 268435496
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x20440000
Fetched 268435496 0b 001000 00010 00100 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x20450002
Fetched 268435500 0b 001000 00010 00101 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0x1  0x0  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x1085fffa
Fetched 268435504 0b 000100 00100 00101 11111 11111 111010
Decoding: op -> BEQ
Instruction decoded.
JB not taken
0: 0x0  0x1  0x0  0x1  0x0  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x0
Fetched 268435508 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x1  0x0  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000038 from segment @ offset 0x10000000  0xa41020
Fetched 268435512 0b 000000 00101 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = 2 + 0
0: 0x0  0x1  0x2  0x1  0x0  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x1000003c from segment @ offset 0x10000000  0x8
Fetched 268435516 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x2  0x1  0x0  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000040 from segment @ offset 0x10000000  0x0
Fetched 268435520 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x2  0x1  0x0  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 2
Hello, Starting the simulator
Opening file tests/bin/bgez1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4210002
Loading instruction to memory: 10000008 0b 000001 00001 00001 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4210002
Fetched 268435460 0b 000001 00001 00001 00000 00000 000010
Decoding: op, rt -> BGEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x241020
Fetched 268435472 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 3 = 3 + 0
0: 0x0  0x3  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x431020
Fetched 268435476 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 6 = 3 + 3
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x6  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 6
Hello, Starting the simulator
Opening file tests/bin/bgez2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4210002
Loading instruction to memory: 10000008 0b 000001 00001 00001 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4210002
Fetched 268435460 0b 000001 00001 00001 00000 00000 000010
Decoding: op, rt -> BGEZ
Instruction decoded.
JB not taken
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0xfffffffd  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20440005
Fetched 268435468 0b 001000 00010 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0xfffffffd  0x0  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x241020
Fetched 268435472 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = -3 + 5
0: 0x0  0xfffffffd  0x2  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x431020
Fetched 268435476 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 5 = 2 + 3
0: 0x0  0xfffffffd  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 5
Hello, Starting the simulator
Opening file tests/bin/bgez3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4210002
Loading instruction to memory: 10000008 0b 000001 00001 00001 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4210002
Fetched 268435460 0b 000001 00001 00001 00000 00000 000010
Decoding: op, rt -> BGEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x241020
Fetched 268435472 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x431020
Fetched 268435476 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/bgez4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x421fffd
Loading instruction to memory: 10000008 0b 000001 00001 00001 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x421fffd
Fetched 268435460 0b 000001 00001 00001 11111 11111 111101
Decoding: op, rt -> BGEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 11111111111111111111111111110100 = 268435452
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/bgez5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410002
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x421fffd
Loading instruction to memory: 10000008 0b 000001 00001 00001 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410002
Fetched 268435456 0b 001000 00010 00001 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x2  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x421fffd
Fetched 268435460 0b 000001 00001 00001 11111 11111 111101
Decoding: op, rt -> BGEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 11111111111111111111111111110100 = 268435452
0: 0x0  0x2  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x2  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/bgez6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430001
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x4210003
Loading instruction to memory: 1000000c 0b 000001 00001 00001 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x631020
Loading instruction to memory: 10000014 0b 000000 00011 00011 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x461fffc
Loading instruction to memory: 10000020 0b 000001 00011 00001 11111 11111 111100
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430001
Fetched 268435460 0b 001000 00010 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x0  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x4210003
Fetched 268435464 0b 000001 00001 00001 00000 00000 000011
Decoding: op, rt -> BGEZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001100 = 268435480
0: 0x0  0x0  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x461fffc
Fetched 268435484 0b 000001 00011 00001 11111 11111 111100
Decoding: op, rt -> BGEZ
Instruction decoded.
JB taken 268435488 -> 268435488 + 11111111111111111111111111110000 = 268435472
0: 0x0  0x0  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x631020
Fetched 268435472 0b 000000 00011 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = 1 + 1
0: 0x0  0x0  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 2
Hello, Starting the simulator
Opening file tests/bin/bgezal1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310004
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20620005
Loading instruction to memory: 10000010 0b 001000 00011 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310004
Fetched 268435460 0b 000001 00001 10001 00000 00000 000100
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000010000 = 268435480
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x23e20000
Fetched 268435480 0b 001000 11111 00010 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0x3  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Exiting with code: 12
Hello, Starting the simulator
Opening file tests/bin/bgezal2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310004
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20020005
Loading instruction to memory: 10000010 0b 001000 00000 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310004
Fetched 268435460 0b 000001 00001 10001 00000 00000 000100
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c not taken
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20020005
Fetched 268435468 0b 001000 00000 00010 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0xfffffffd  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Exiting with code: 5
Hello, Starting the simulator
Opening file tests/bin/bgezal3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310004
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20620005
Loading instruction to memory: 10000010 0b 001000 00011 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310004
Fetched 268435460 0b 000001 00001 10001 00000 00000 000100
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000010000 = 268435480
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x23e20000
Fetched 268435480 0b 001000 11111 00010 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0x0  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Exiting with code: 12
Hello, Starting the simulator
Opening file tests/bin/bgezal4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x431fffc
Loading instruction to memory: 10000008 0b 000001 00001 10001 11111 11111 111100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20620005
Loading instruction to memory: 10000010 0b 001000 00011 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x431fffc
Fetched 268435460 0b 000001 00001 10001 11111 11111 111100
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 11111111111111111111111111110000 = 268435448
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/bgezal5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010003
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310005
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x23e50000
Loading instruction to memory: 10000010 0b 001000 11111 00101 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000014 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x23e40000
Loading instruction to memory: 10000020 0b 001000 11111 00100 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x431fffa
Loading instruction to memory: 10000024 0b 000001 00001 10001 11111 11111 111010
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010003
Fetched 268435456 0b 001000 00000 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310005
Fetched 268435460 0b 000001 00001 10001 00000 00000 000101
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000010100 = 268435484
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x23e40000
Fetched 268435484 0b 001000 11111 00100 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0x3  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x431fffa
Fetched 268435488 0b 000001 00001 10001 11111 11111 111010
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x10000028 taken 268435492 -> 268435492 + 11111111111111111111111111101000 = 268435468
0: 0x0  0x3  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 4
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 5
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x23e50000
Fetched 268435468 0b 001000 11111 00101 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435496 = 268435496 + 0
0: 0x0  0x3  0x0  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 6
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x851020
Fetched 268435472 0b 000000 00100 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 536870964 = 268435468 + 268435496
0: 0x0  0x3  0x20000034  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 7
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x20000034  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x20000034  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Exiting with code: 52
Hello, Starting the simulator
Opening file tests/bin/bgezal6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010003
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310005
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x23e50000
Loading instruction to memory: 10000010 0b 001000 11111 00101 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000014 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x23e40000
Loading instruction to memory: 10000020 0b 001000 11111 00100 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x2003ffff
Loading instruction to memory: 10000024 0b 001000 00000 00011 11111 11111 111111
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x471fffb
Loading instruction to memory: 10000028 0b 000001 00011 10001 11111 11111 111011
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0xa41020
Loading instruction to memory: 1000002c 0b 000000 00101 00100 00010 00000 100000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000034
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010003
Fetched 268435456 0b 001000 00000 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310005
Fetched 268435460 0b 000001 00001 10001 00000 00000 000101
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000010100 = 268435484
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x23e40000
Fetched 268435484 0b 001000 11111 00100 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0x3  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x2003ffff
Fetched 268435488 0b 001000 00000 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x3  0x0  0xffffffff  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x471fffb
Fetched 268435492 0b 000001 00011 10001 11111 11111 111011
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000002c not taken
0: 0x0  0x3  0x0  0xffffffff  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Cycle: 5
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0xa41020
Fetched 268435496 0b 000000 00101 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435468 = 0 + 268435468
0: 0x0  0x3  0x1000000c  0xffffffff  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Cycle: 6
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x8
Fetched 268435500 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x1000000c  0xffffffff  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Cycle: 7
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x8
Fetched 268435504 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x1000000c  0xffffffff  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Exiting with code: 12
Hello, Starting the simulator
Opening file tests/bin/bgezal7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310001
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x23e30000
Loading instruction to memory: 10000010 0b 001000 11111 00011 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2005fffd
Loading instruction to memory: 10000014 0b 001000 00000 00101 11111 11111 111101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x4b10001
Loading instruction to memory: 10000018 0b 000001 00101 10001 00000 00000 000001
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x7f1020
Loading instruction to memory: 10000020 0b 000000 00011 11111 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0xa21020
Loading instruction to memory: 10000024 0b 000000 00101 00010 00010 00000 100000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010001
Fetched 268435456 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310001
Fetched 268435460 0b 000001 00001 10001 00000 00000 000001
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000000100 = 268435468
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x23e30000
Fetched 268435468 0b 001000 11111 00011 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0x1  0x0  0x1000000c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x2005fffd
Fetched 268435472 0b 001000 00000 00101 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0x1  0x0  0x1000000c  0x0  0xfffffffd  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x4b10001
Fetched 268435476 0b 000001 00101 10001 00000 00000 000001
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000001c not taken
0: 0x0  0x1  0x0  0x1000000c  0x0  0xfffffffd  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000001c  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x1000000c  0x0  0xfffffffd  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000001c  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x7f1020
Fetched 268435484 0b 000000 00011 11111 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 536870952 = 268435468 + 268435484
0: 0x0  0x1  0x20000028  0x1000000c  0x0  0xfffffffd  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000001c  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0xa21020
Fetched 268435488 0b 000000 00101 00010 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 536870949 = -3 + 536870952
0: 0x0  0x1  0x20000025  0x1000000c  0x0  0xfffffffd  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000001c  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x20000025  0x1000000c  0x0  0xfffffffd  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000001c  
Cycle: 9
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x20000025  0x1000000c  0x0  0xfffffffd  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000001c  
Exiting with code: 37
Hello, Starting the simulator
Opening file tests/bin/bgtz1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010003
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1c200002
Loading instruction to memory: 10000008 0b 000111 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20030003
Loading instruction to memory: 10000010 0b 001000 00000 00011 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 10000014 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000018 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010003
Fetched 268435456 0b 001000 00000 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1c200002
Fetched 268435460 0b 000111 00001 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20040005
Fetched 268435472 0b 001000 00000 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x3  0x0  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x241020
Fetched 268435476 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 3 + 5
0: 0x0  0x3  0x8  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 8 + 0
0: 0x0  0x3  0x8  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x8  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x8  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 8
Hello, Starting the simulator
Opening file tests/bin/bgtz2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1c200002
Loading instruction to memory: 10000008 0b 000111 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000010 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000014 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000018 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1c200002
Fetched 268435460 0b 000111 00001 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB not taken
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20430003
Fetched 268435468 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0xfffffffd  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20440005
Fetched 268435472 0b 001000 00010 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0xfffffffd  0x0  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x241020
Fetched 268435476 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = -3 + 5
0: 0x0  0xfffffffd  0x2  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 5 = 2 + 3
0: 0x0  0xfffffffd  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 5
Hello, Starting the simulator
Opening file tests/bin/bgtz3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1c200002
Loading instruction to memory: 10000008 0b 000111 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000010 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000014 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000018 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1c200002
Fetched 268435460 0b 000111 00001 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB not taken
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20430003
Fetched 268435468 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20440005
Fetched 268435472 0b 001000 00010 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x0  0x0  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x241020
Fetched 268435476 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x0  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 5 + 3
0: 0x0  0x0  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 8
Hello, Starting the simulator
Opening file tests/bin/bgtz4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1c20fffd
Loading instruction to memory: 10000008 0b 000111 00001 00000 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1c20fffd
Fetched 268435460 0b 000111 00001 00000 11111 11111 111101
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 11111111111111111111111111110100 = 268435452
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/bgtz5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030002
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1c200003
Loading instruction to memory: 1000000c 0b 000111 00001 00000 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x611020
Loading instruction to memory: 10000014 0b 000000 00011 00001 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x1c60fffc
Loading instruction to memory: 10000020 0b 000111 00011 00000 11111 11111 111100
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010001
Fetched 268435456 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030002
Fetched 268435460 0b 001000 00000 00011 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1c200003
Fetched 268435464 0b 000111 00001 00000 00000 00000 000011
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001100 = 268435480
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x1c60fffc
Fetched 268435484 0b 000111 00011 00000 11111 11111 111100
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435488 -> 268435488 + 11111111111111111111111111110000 = 268435472
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x611020
Fetched 268435472 0b 000000 00011 00001 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 3 = 2 + 1
0: 0x0  0x1  0x3  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x3  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x3  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/bgtz6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410001
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2043ffff
Loading instruction to memory: 10000008 0b 001000 00010 00011 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1c200003
Loading instruction to memory: 1000000c 0b 000111 00001 00000 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x611020
Loading instruction to memory: 10000014 0b 000000 00011 00001 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x1c60fffd
Loading instruction to memory: 10000020 0b 000111 00011 00000 11111 11111 111101
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x631020
Loading instruction to memory: 10000028 0b 000000 00011 00011 00010 00000 100000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000034
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410001
Fetched 268435456 0b 001000 00010 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2043ffff
Fetched 268435460 0b 001000 00010 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1c200003
Fetched 268435464 0b 000111 00001 00000 00000 00000 000011
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001100 = 268435480
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x1c60fffd
Fetched 268435484 0b 000111 00011 00000 11111 11111 111101
Decoding: op -> BGTZ
Instruction decoded.
JB not taken
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x631020
Fetched 268435492 0b 000000 00011 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967294 = -1 + -1
0: 0x0  0x1  0xfffffffe  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0xfffffffe  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x0
Fetched 268435500 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0xfffffffe  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 254
Hello, Starting the simulator
Opening file tests/bin/blez1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x18200002
Loading instruction to memory: 10000008 0b 000110 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x18200002
Fetched 268435460 0b 000110 00001 00000 00000 00000 000010
Decoding: op -> BLEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0xfffffffd  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x241020
Fetched 268435472 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967293 = -3 + 0
0: 0x0  0xfffffffd  0xfffffffd  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x431020
Fetched 268435476 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = -3 + 3
0: 0x0  0xfffffffd  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/blez2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x18200002
Loading instruction to memory: 10000008 0b 000110 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x18200002
Fetched 268435460 0b 000110 00001 00000 00000 00000 000010
Decoding: op -> BLEZ
Instruction decoded.
JB not taken
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20440005
Fetched 268435468 0b 001000 00010 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x3  0x0  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x241020
Fetched 268435472 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 3 + 5
0: 0x0  0x3  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x431020
Fetched 268435476 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 11 = 8 + 3
0: 0x0  0x3  0xb  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0xb  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0xb  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 11
Hello, Starting the simulator
Opening file tests/bin/blez3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x18200002
Loading instruction to memory: 10000008 0b 000110 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x18200002
Fetched 268435460 0b 000110 00001 00000 00000 00000 000010
Decoding: op -> BLEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x241020
Fetched 268435472 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x431020
Fetched 268435476 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/blez4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1820fffd
Loading instruction to memory: 10000008 0b 000110 00001 00000 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1820fffd
Fetched 268435460 0b 000110 00001 00000 11111 11111 111101
Decoding: op -> BLEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 11111111111111111111111111110100 = 268435452
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/blez5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffe
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111110
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1820fffd
Loading instruction to memory: 10000008 0b 000110 00001 00000 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffe
Fetched 268435456 0b 001000 00010 00001 11111 11111 111110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967294 = 0 + -2
0: 0x0  0xfffffffe  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1820fffd
Fetched 268435460 0b 000110 00001 00000 11111 11111 111101
Decoding: op -> BLEZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 11111111111111111111111111110100 = 268435452
0: 0x0  0xfffffffe  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0xfffffffe  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/blez6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2043ffff
Loading instruction to memory: 10000008 0b 001000 00010 00011 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x18200003
Loading instruction to memory: 1000000c 0b 000110 00001 00000 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x631020
Loading instruction to memory: 10000014 0b 000000 00011 00011 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x1860fffc
Loading instruction to memory: 10000020 0b 000110 00011 00000 11111 11111 111100
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2043ffff
Fetched 268435460 0b 001000 00010 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x18200003
Fetched 268435464 0b 000110 00001 00000 00000 00000 000011
Decoding: op -> BLEZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001100 = 268435480
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x1860fffc
Fetched 268435484 0b 000110 00011 00000 11111 11111 111100
Decoding: op -> BLEZ
Instruction decoded.
JB taken 268435488 -> 268435488 + 11111111111111111111111111110000 = 268435472
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x631020
Fetched 268435472 0b 000000 00011 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967294 = -1 + -1
0: 0x0  0x0  0xfffffffe  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xfffffffe  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0xfffffffe  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 254
Hello, Starting the simulator
Opening file tests/bin/bltz1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4200002
Loading instruction to memory: 10000008 0b 000001 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000010 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 10000014 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000018 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4200002
Fetched 268435460 0b 000001 00001 00000 00000 00000 000010
Decoding: op, rt -> BLTZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20040005
Fetched 268435472 0b 001000 00000 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0xfffffffd  0x0  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x241020
Fetched 268435476 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = -3 + 5
0: 0x0  0xfffffffd  0x2  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = 2 + 0
0: 0x0  0xfffffffd  0x2  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x2  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x2  0x0  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 2
Hello, Starting the simulator
Opening file tests/bin/bltz2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4200002
Loading instruction to memory: 10000008 0b 000001 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000010 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000014 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000018 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4200002
Fetched 268435460 0b 000001 00001 00000 00000 00000 000010
Decoding: op, rt -> BLTZ
Instruction decoded.
JB not taken
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20430003
Fetched 268435468 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20440005
Fetched 268435472 0b 001000 00010 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x3  0x0  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x241020
Fetched 268435476 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 3 + 5
0: 0x0  0x3  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 11 = 8 + 3
0: 0x0  0x3  0xb  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0xb  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0xb  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 11
Hello, Starting the simulator
Opening file tests/bin/bltz3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4200002
Loading instruction to memory: 10000008 0b 000001 00001 00000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000010 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000014 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000018 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4200002
Fetched 268435460 0b 000001 00001 00000 00000 00000 000010
Decoding: op, rt -> BLTZ
Instruction decoded.
JB not taken
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20430003
Fetched 268435468 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20440005
Fetched 268435472 0b 001000 00010 00100 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x0  0x0  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x241020
Fetched 268435476 0b 000000 00001 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x0  0x5  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 5 + 3
0: 0x0  0x0  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x8  0x3  0x5  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 8
Hello, Starting the simulator
Opening file tests/bin/bltz4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x420fffd
Loading instruction to memory: 10000008 0b 000001 00001 00000 11111 11111 111101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 1000000c 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440005
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x241020
Loading instruction to memory: 10000014 0b 000000 00001 00100 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000018 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x420fffd
Fetched 268435460 0b 000001 00001 00000 11111 11111 111101
Decoding: op, rt -> BLTZ
Instruction decoded.
JB taken 268435464 -> 268435464 + 11111111111111111111111111110100 = 268435452
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20430003
Fetched 268435464 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0xfffffffd  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/bltz5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041ffff
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2043fffe
Loading instruction to memory: 10000008 0b 001000 00010 00011 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x4200003
Loading instruction to memory: 1000000c 0b 000001 00001 00000 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x611020
Loading instruction to memory: 10000014 0b 000000 00011 00001 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x460fffc
Loading instruction to memory: 10000020 0b 000001 00011 00000 11111 11111 111100
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041ffff
Fetched 268435456 0b 001000 00010 00001 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2043fffe
Fetched 268435460 0b 001000 00010 00011 11111 11111 111110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967294 = 0 + -2
0: 0x0  0xffffffff  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x4200003
Fetched 268435464 0b 000001 00001 00000 00000 00000 000011
Decoding: op, rt -> BLTZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001100 = 268435480
0: 0x0  0xffffffff  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x460fffc
Fetched 268435484 0b 000001 00011 00000 11111 11111 111100
Decoding: op, rt -> BLTZ
Instruction decoded.
JB taken 268435488 -> 268435488 + 11111111111111111111111111110000 = 268435472
0: 0x0  0xffffffff  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x611020
Fetched 268435472 0b 000000 00011 00001 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967293 = -2 + -1
0: 0x0  0xffffffff  0xfffffffd  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0xfffffffd  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0xfffffffd  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 253
Hello, Starting the simulator
Opening file tests/bin/bltz6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041ffff
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430001
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x4200003
Loading instruction to memory: 1000000c 0b 000001 00001 00000 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x611020
Loading instruction to memory: 10000014 0b 000000 00011 00001 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x460fffd
Loading instruction to memory: 10000020 0b 000001 00011 00000 11111 11111 111101
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x631020
Loading instruction to memory: 10000028 0b 000000 00011 00011 00010 00000 100000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000034
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041ffff
Fetched 268435456 0b 001000 00010 00001 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430001
Fetched 268435460 0b 001000 00010 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xffffffff  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x4200003
Fetched 268435464 0b 000001 00001 00000 00000 00000 000011
Decoding: op, rt -> BLTZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001100 = 268435480
0: 0x0  0xffffffff  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x460fffd
Fetched 268435484 0b 000001 00011 00000 11111 11111 111101
Decoding: op, rt -> BLTZ
Instruction decoded.
JB not taken
0: 0x0  0xffffffff  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x631020
Fetched 268435492 0b 000000 00011 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = 1 + 1
0: 0x0  0xffffffff  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x0
Fetched 268435500 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 2
Hello, Starting the simulator
Opening file tests/bin/bltzal1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300004
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20620005
Loading instruction to memory: 10000010 0b 001000 00011 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300004
Fetched 268435460 0b 000001 00001 10000 00000 00000 000100
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000010000 = 268435480
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x23e20000
Fetched 268435480 0b 001000 11111 00010 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0xfffffffd  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x1000000c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Exiting with code: 12
Hello, Starting the simulator
Opening file tests/bin/bltzal2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300004
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20020005
Loading instruction to memory: 10000010 0b 001000 00000 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300004
Fetched 268435460 0b 000001 00001 10000 00000 00000 000100
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c not taken
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20020005
Fetched 268435468 0b 001000 00000 00010 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x3  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x3  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Exiting with code: 5
Hello, Starting the simulator
Opening file tests/bin/bltzal3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410000
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300004
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20620005
Loading instruction to memory: 10000010 0b 001000 00011 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410000
Fetched 268435456 0b 001000 00010 00001 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300004
Fetched 268435460 0b 000001 00001 10000 00000 00000 000100
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c not taken
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20620005
Fetched 268435468 0b 001000 00011 00010 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x0  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x5  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Exiting with code: 5
Hello, Starting the simulator
Opening file tests/bin/bltzal4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x430fffc
Loading instruction to memory: 10000008 0b 000001 00001 10000 11111 11111 111100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20620005
Loading instruction to memory: 10000010 0b 001000 00011 00010 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 1000001c 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x430fffc
Fetched 268435460 0b 000001 00001 10000 11111 11111 111100
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 11111111111111111111111111110000 = 268435448
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/bltzal5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fffd
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300005
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x23e50000
Loading instruction to memory: 10000010 0b 001000 11111 00101 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000014 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x23e40000
Loading instruction to memory: 10000020 0b 001000 11111 00100 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x430fffa
Loading instruction to memory: 10000024 0b 000001 00001 10000 11111 11111 111010
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fffd
Fetched 268435456 0b 001000 00000 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300005
Fetched 268435460 0b 000001 00001 10000 00000 00000 000101
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000010100 = 268435484
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x23e40000
Fetched 268435484 0b 001000 11111 00100 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0xfffffffd  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x430fffa
Fetched 268435488 0b 000001 00001 10000 11111 11111 111010
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x10000028 taken 268435492 -> 268435492 + 11111111111111111111111111101000 = 268435468
0: 0x0  0xfffffffd  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 4
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 5
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x23e50000
Fetched 268435468 0b 001000 11111 00101 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435496 = 268435496 + 0
0: 0x0  0xfffffffd  0x0  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 6
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x851020
Fetched 268435472 0b 000000 00100 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 536870964 = 268435468 + 268435496
0: 0x0  0xfffffffd  0x20000034  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 7
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x20000034  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x20000034  0x0  0x1000000c  0x10000028  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000028  
Exiting with code: 52
Hello, Starting the simulator
Opening file tests/bin/bltzal6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fffd
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300005
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x23e50000
Loading instruction to memory: 10000010 0b 001000 11111 00101 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000014 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x23e40000
Loading instruction to memory: 10000020 0b 001000 11111 00100 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x20030001
Loading instruction to memory: 10000024 0b 001000 00000 00011 00000 00000 000001
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x470fffb
Loading instruction to memory: 10000028 0b 000001 00011 10000 11111 11111 111011
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0xa41020
Loading instruction to memory: 1000002c 0b 000000 00101 00100 00010 00000 100000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000034
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fffd
Fetched 268435456 0b 001000 00000 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300005
Fetched 268435460 0b 000001 00001 10000 00000 00000 000101
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000010100 = 268435484
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x23e40000
Fetched 268435484 0b 001000 11111 00100 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0xfffffffd  0x0  0x0  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x20030001
Fetched 268435488 0b 001000 00000 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xfffffffd  0x0  0x1  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x470fffb
Fetched 268435492 0b 000001 00011 10000 11111 11111 111011
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000002c not taken
0: 0x0  0xfffffffd  0x0  0x1  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Cycle: 5
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0xa41020
Fetched 268435496 0b 000000 00101 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435468 = 0 + 268435468
0: 0x0  0xfffffffd  0x1000000c  0x1  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Cycle: 6
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x8
Fetched 268435500 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x1000000c  0x1  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Cycle: 7
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x8
Fetched 268435504 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0x1000000c  0x1  0x1000000c  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000002c  
Exiting with code: 12
Hello, Starting the simulator
Opening file tests/bin/bltzal7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001ffff
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300002
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x201f0004
Loading instruction to memory: 10000010 0b 001000 00000 11111 00000 00000 000100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x23e30000
Loading instruction to memory: 10000014 0b 001000 11111 00011 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x20040001
Loading instruction to memory: 10000018 0b 001000 00000 00100 00000 00000 000001
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x4900001
Loading instruction to memory: 1000001c 0b 000001 00100 10000 00000 00000 000001
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x23e20000
Loading instruction to memory: 10000024 0b 001000 11111 00010 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000028 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000030
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001ffff
Fetched 268435456 0b 001000 00000 00001 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300002
Fetched 268435460 0b 000001 00001 10000 00000 00000 000010
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000001000 = 268435472
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x23e30000
Fetched 268435472 0b 001000 11111 00011 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435468 = 268435468 + 0
0: 0x0  0xffffffff  0x0  0x1000000c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x20040001
Fetched 268435476 0b 001000 00000 00100 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xffffffff  0x0  0x1000000c  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x4900001
Fetched 268435480 0b 000001 00100 10000 00000 00000 000001
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x10000020 not taken
0: 0x0  0xffffffff  0x0  0x1000000c  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000020  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x0
Fetched 268435484 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0x1000000c  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000020  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x23e20000
Fetched 268435488 0b 001000 11111 00010 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435488 = 268435488 + 0
0: 0x0  0xffffffff  0x10000020  0x1000000c  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000020  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x431020
Fetched 268435492 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 536870956 = 268435488 + 268435468
0: 0x0  0xffffffff  0x2000002c  0x1000000c  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000020  
Cycle: 8
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0x2000002c  0x1000000c  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000020  
Cycle: 9
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x8
Fetched 268435500 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0x2000002c  0x1000000c  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000020  
Exiting with code: 44
Hello, Starting the simulator
Opening file tests/bin/bne1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410004
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430003
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x14230002
Loading instruction to memory: 1000000c 0b 000101 00001 00011 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20450005
Loading instruction to memory: 10000014 0b 001000 00010 00101 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 10000018 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410004
Fetched 268435456 0b 001000 00010 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430003
Fetched 268435460 0b 001000 00010 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x4  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x14230002
Fetched 268435464 0b 000101 00001 00011 00000 00000 000010
Decoding: op -> BNE
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x4  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x4  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x251020
Fetched 268435476 0b 000000 00001 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4 = 4 + 0
0: 0x0  0x4  0x4  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 7 = 4 + 3
0: 0x0  0x4  0x7  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x7  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x7  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 7
Hello, Starting the simulator
Opening file tests/bin/bne2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010003
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030003
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x14230002
Loading instruction to memory: 1000000c 0b 000101 00001 00011 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20040004
Loading instruction to memory: 10000010 0b 001000 00000 00100 00000 00000 000100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20050005
Loading instruction to memory: 10000014 0b 001000 00000 00101 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 10000018 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 1000001c 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000020 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010003
Fetched 268435456 0b 001000 00000 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030003
Fetched 268435460 0b 001000 00000 00011 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x14230002
Fetched 268435464 0b 000101 00001 00011 00000 00000 000010
Decoding: op -> BNE
Instruction decoded.
JB not taken
0: 0x0  0x3  0x0  0x3  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20040004
Fetched 268435468 0b 001000 00000 00100 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x3  0x0  0x3  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20050005
Fetched 268435472 0b 001000 00000 00101 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x3  0x0  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x251020
Fetched 268435476 0b 000000 00001 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 3 + 5
0: 0x0  0x3  0x8  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x441020
Fetched 268435480 0b 000000 00010 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 12 = 8 + 4
0: 0x0  0x3  0xc  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x431020
Fetched 268435484 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 15 = 12 + 3
0: 0x0  0x3  0xf  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0xf  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0xf  0x3  0x4  0x5  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 15
Hello, Starting the simulator
Opening file tests/bin/bne3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2041fffd
Loading instruction to memory: 10000004 0b 001000 00010 00001 11111 11111 111101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2043fffe
Loading instruction to memory: 10000008 0b 001000 00010 00011 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x14230003
Loading instruction to memory: 1000000c 0b 000101 00001 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20440001
Loading instruction to memory: 10000014 0b 001000 00010 00100 00000 00000 000001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x20450005
Loading instruction to memory: 10000018 0b 001000 00010 00101 00000 00000 000101
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 1000001c 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 10000020 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000024 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2041fffd
Fetched 268435456 0b 001000 00010 00001 11111 11111 111101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967293 = 0 + -3
0: 0x0  0xfffffffd  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2043fffe
Fetched 268435460 0b 001000 00010 00011 11111 11111 111110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967294 = 0 + -2
0: 0x0  0xfffffffd  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x14230003
Fetched 268435464 0b 000101 00001 00011 00000 00000 000011
Decoding: op -> BNE
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001100 = 268435480
0: 0x0  0xfffffffd  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffffd  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x251020
Fetched 268435480 0b 000000 00001 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967293 = -3 + 0
0: 0x0  0xfffffffd  0xfffffffd  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x441020
Fetched 268435484 0b 000000 00010 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967293 = -3 + 0
0: 0x0  0xfffffffd  0xfffffffd  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x431020
Fetched 268435488 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4294967291 = -3 + -2
0: 0x0  0xfffffffd  0xfffffffb  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0xfffffffb  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffd  0xfffffffb  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 251
Hello, Starting the simulator
Opening file tests/bin/bne4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410003
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430004
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1423fffc
Loading instruction to memory: 1000000c 0b 000101 00001 00011 11111 11111 111100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20440001
Loading instruction to memory: 10000010 0b 001000 00010 00100 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20450005
Loading instruction to memory: 10000014 0b 001000 00010 00101 00000 00000 000101
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x251020
Loading instruction to memory: 10000018 0b 000000 00001 00101 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 1000001c 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 10000020 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410003
Fetched 268435456 0b 001000 00010 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430004
Fetched 268435460 0b 001000 00010 00011 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x3  0x0  0x4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1423fffc
Fetched 268435464 0b 000101 00001 00011 11111 11111 111100
Decoding: op -> BNE
Instruction decoded.
JB taken 268435468 -> 268435468 + 11111111111111111111111111110000 = 268435452
0: 0x0  0x3  0x0  0x4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20440001
Fetched 268435468 0b 001000 00010 00100 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x3  0x0  0x4  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/bne5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410001
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2043ffff
Loading instruction to memory: 10000008 0b 001000 00010 00011 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x14230007
Loading instruction to memory: 1000000c 0b 000101 00001 00011 00000 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 10000014 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000020 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x20440002
Loading instruction to memory: 1000002c 0b 001000 00010 00100 00000 00000 000010
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x2045fffe
Loading instruction to memory: 10000030 0b 001000 00010 00101 11111 11111 111110
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x1485fffa
Loading instruction to memory: 10000034 0b 000101 00100 00101 11111 11111 111010
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000038 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000003c 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000003c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410001
Fetched 268435456 0b 001000 00010 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2043ffff
Fetched 268435460 0b 001000 00010 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x14230007
Fetched 268435464 0b 000101 00001 00011 00000 00000 000111
Decoding: op -> BNE
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000011100 = 268435496
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x20440002
Fetched 268435496 0b 001000 00010 00100 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0xffffffff  0x2  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x2045fffe
Fetched 268435500 0b 001000 00010 00101 11111 11111 111110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967294 = 0 + -2
0: 0x0  0x1  0x0  0xffffffff  0x2  0xfffffffe  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x1485fffa
Fetched 268435504 0b 000101 00100 00101 11111 11111 111010
Decoding: op -> BNE
Instruction decoded.
JB taken 268435508 -> 268435508 + 11111111111111111111111111101000 = 268435484
0: 0x0  0x1  0x0  0xffffffff  0x2  0xfffffffe  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x0
Fetched 268435508 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0xffffffff  0x2  0xfffffffe  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x851020
Fetched 268435484 0b 000000 00100 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 2 + -2
0: 0x0  0x1  0x0  0xffffffff  0x2  0xfffffffe  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x0  0xffffffff  0x2  0xfffffffe  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0xffffffff  0x2  0xfffffffe  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/bne6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20410001
Loading instruction to memory: 10000004 0b 001000 00010 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20430000
Loading instruction to memory: 10000008 0b 001000 00010 00011 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x14230007
Loading instruction to memory: 1000000c 0b 000101 00001 00011 00000 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x231020
Loading instruction to memory: 10000014 0b 000000 00001 00011 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 10000020 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x20440002
Loading instruction to memory: 1000002c 0b 001000 00010 00100 00000 00000 000010
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x20450002
Loading instruction to memory: 10000030 0b 001000 00010 00101 00000 00000 000010
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x1485fffa
Loading instruction to memory: 10000034 0b 000101 00100 00101 11111 11111 111010
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000038 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0xa41020
Loading instruction to memory: 1000003c 0b 000000 00101 00100 00010 00000 100000
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000040 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000044 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000048 0b 000000 00000 00000 00000 00000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000048
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20410001
Fetched 268435456 0b 001000 00010 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20430000
Fetched 268435460 0b 001000 00010 00011 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x14230007
Fetched 268435464 0b 000101 00001 00011 00000 00000 000111
Decoding: op -> BNE
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000011100 = 268435496
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x20440002
Fetched 268435496 0b 001000 00010 00100 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0x0  0x2  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x20450002
Fetched 268435500 0b 001000 00010 00101 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0x0  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x1485fffa
Fetched 268435504 0b 000101 00100 00101 11111 11111 111010
Decoding: op -> BNE
Instruction decoded.
JB not taken
0: 0x0  0x1  0x0  0x0  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x0
Fetched 268435508 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000038 from segment @ offset 0x10000000  0xa41020
Fetched 268435512 0b 000000 00101 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4 = 2 + 2
0: 0x0  0x1  0x4  0x0  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x1000003c from segment @ offset 0x10000000  0x8
Fetched 268435516 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x4  0x0  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000040 from segment @ offset 0x10000000  0x0
Fetched 268435520 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x4  0x0  0x2  0x2  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 4
Hello, Starting the simulator
Opening file tests/bin/del_later.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x803faf01
Loading instruction to memory: 10000004 0b 100000 00001 11111 10101 11100 000001
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000004
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x803faf01
Fetched 268435456 0b 100000 00001 11111 10101 11100 000001
Decoding: op -> LB
Instruction decoded.
Reading @0xffffaf00 from segment @ offset 0x30000004 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/div1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030008
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001a
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1010
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030008
Fetched 268435460 0b 001000 00000 00011 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001a
Fetched 268435464 0b 000000 00011 00001 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV 2, remainder: 0 = 8 / 4
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1010
Fetched 268435468 0b 000000 00000 00000 00010 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r2 <- HI = 0
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/div2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010005
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030008
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001a
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1010
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010005
Fetched 268435456 0b 001000 00000 00001 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x5  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030008
Fetched 268435460 0b 001000 00000 00011 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0x5  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001a
Fetched 268435464 0b 000000 00011 00001 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV 1, remainder: 3 = 8 / 5
0: 0x0  0x5  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1010
Fetched 268435468 0b 000000 00000 00000 00010 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r2 <- HI = 3
0: 0x0  0x5  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/div3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fffc
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2003fff8
Loading instruction to memory: 10000008 0b 001000 00000 00011 11111 11111 111000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001a
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fffc
Fetched 268435456 0b 001000 00000 00001 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0xfffffffc  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2003fff8
Fetched 268435460 0b 001000 00000 00011 11111 11111 111000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967288 = 0 + -8
0: 0x0  0xfffffffc  0x0  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001a
Fetched 268435464 0b 000000 00011 00001 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV 2, remainder: 0 = -8 / -4
0: 0x0  0xfffffffc  0x0  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1012
Fetched 268435468 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 2
0: 0x0  0xfffffffc  0x2  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x2  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x2  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 2
Hello, Starting the simulator
Opening file tests/bin/div4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2003fff8
Loading instruction to memory: 10000008 0b 001000 00000 00011 11111 11111 111000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001a
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2003fff8
Fetched 268435460 0b 001000 00000 00011 11111 11111 111000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967288 = 0 + -8
0: 0x0  0x4  0x0  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001a
Fetched 268435464 0b 000000 00011 00001 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV -2, remainder: 0 = -8 / 4
0: 0x0  0x4  0x0  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1012
Fetched 268435468 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 4294967294
0: 0x0  0x4  0xfffffffe  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0xfffffffe  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0xfffffffe  0xfffffff8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 254
Hello, Starting the simulator
Opening file tests/bin/div5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fffb
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030008
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001a
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1010
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fffb
Fetched 268435456 0b 001000 00000 00001 11111 11111 111011
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967291 = 0 + -5
0: 0x0  0xfffffffb  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030008
Fetched 268435460 0b 001000 00000 00011 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0xfffffffb  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001a
Fetched 268435464 0b 000000 00011 00001 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV -1, remainder: 3 = 8 / -5
0: 0x0  0xfffffffb  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1010
Fetched 268435468 0b 000000 00000 00000 00010 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r2 <- HI = 3
0: 0x0  0xfffffffb  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffb  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffb  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/div6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20030008
Loading instruction to memory: 10000004 0b 001000 00000 00011 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3001a
Loading instruction to memory: 10000008 0b 000000 00000 00011 00000 00000 011010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x810
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00001 00000 010000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2012
Loading instruction to memory: 10000010 0b 000000 00000 00000 00100 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x811020
Loading instruction to memory: 10000014 0b 000000 00100 00001 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20030008
Fetched 268435456 0b 001000 00000 00011 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3001a
Fetched 268435460 0b 000000 00000 00011 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV 0, remainder: 0 = 0 / 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x810
Fetched 268435464 0b 000000 00000 00000 00001 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r1 <- HI = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2012
Fetched 268435468 0b 000000 00000 00000 00100 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r4 <- LO = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x811020
Fetched 268435472 0b 000000 00100 00001 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/div7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20030008
Loading instruction to memory: 10000004 0b 001000 00000 00011 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3001a
Loading instruction to memory: 10000008 0b 000000 00000 00011 00000 00000 011010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x812
Loading instruction to memory: 10000010 0b 000000 00000 00000 00001 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x811020
Loading instruction to memory: 10000014 0b 000000 00100 00001 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20030008
Fetched 268435456 0b 001000 00000 00011 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3001a
Fetched 268435460 0b 000000 00000 00011 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV 0, remainder: 0 = 0 / 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2010
Fetched 268435464 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x812
Fetched 268435468 0b 000000 00000 00000 00001 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r1 <- LO = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x811020
Fetched 268435472 0b 000000 00100 00001 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/div8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030002
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x23001a
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00000 00000 011010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 10000010 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000014 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x10400002
Loading instruction to memory: 10000018 0b 000100 00010 00000 00000 00000 000010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 10000024 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010001
Fetched 268435456 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030002
Fetched 268435460 0b 001000 00000 00011 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x23001a
Fetched 268435464 0b 000000 00001 00011 00000 00000 011010
Decoding: op, func -> DIV
Instruction decoded.
DIV 0, remainder: 1 = 1 / 2
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2010
Fetched 268435468 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 1
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x1012
Fetched 268435472 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 0
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x10400002
Fetched 268435476 0b 000100 00010 00000 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435480 -> 268435480 + 00000000000000000000000000001000 = 268435488
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x441020
Fetched 268435488 0b 000000 00010 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x1  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x1  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x1  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/divu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24010004
Loading instruction to memory: 10000004 0b 001001 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030008
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001b
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1010
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24010004
Fetched 268435456 0b 001001 00000 00001 00000 00000 000100
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030008
Fetched 268435460 0b 001001 00000 00011 00000 00000 001000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 8 = 0 + 8
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001b
Fetched 268435464 0b 000000 00011 00001 00000 00000 011011
Decoding: op, func -> DIVU
Instruction decoded.
DIVU 2, remainder: 0 = 8 u/ 4
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1010
Fetched 268435468 0b 000000 00000 00000 00010 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r2 <- HI = 0
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/divu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24010005
Loading instruction to memory: 10000004 0b 001001 00000 00001 00000 00000 000101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030008
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001b
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1010
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24010005
Fetched 268435456 0b 001001 00000 00001 00000 00000 000101
Decoding: op -> ADDUI
Instruction decoded.
ADDU 5 = 0 + 5
0: 0x0  0x5  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030008
Fetched 268435460 0b 001001 00000 00011 00000 00000 001000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 8 = 0 + 8
0: 0x0  0x5  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001b
Fetched 268435464 0b 000000 00011 00001 00000 00000 011011
Decoding: op, func -> DIVU
Instruction decoded.
DIVU 1, remainder: 3 = 8 u/ 5
0: 0x0  0x5  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1010
Fetched 268435468 0b 000000 00000 00000 00010 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r2 <- HI = 3
0: 0x0  0x5  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x3  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/divu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2401ffff
Loading instruction to memory: 10000004 0b 001001 00000 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2403ffff
Loading instruction to memory: 10000008 0b 001001 00000 00011 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61001b
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00000 00000 011011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000010 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2401ffff
Fetched 268435456 0b 001001 00000 00001 11111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967295 = 0 + 4294967295
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2403ffff
Fetched 268435460 0b 001001 00000 00011 11111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967295 = 0 + 4294967295
0: 0x0  0xffffffff  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61001b
Fetched 268435464 0b 000000 00011 00001 00000 00000 011011
Decoding: op, func -> DIVU
Instruction decoded.
DIVU 1, remainder: 0 = 4294967295 u/ 4294967295
0: 0x0  0xffffffff  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1012
Fetched 268435468 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 1
0: 0x0  0xffffffff  0x1  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0x1  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0x1  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/divu4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24030008
Loading instruction to memory: 10000004 0b 001001 00000 00011 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3001b
Loading instruction to memory: 10000008 0b 000000 00000 00011 00000 00000 011011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x810
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00001 00000 010000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2012
Loading instruction to memory: 10000010 0b 000000 00000 00000 00100 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x811021
Loading instruction to memory: 10000014 0b 000000 00100 00001 00010 00000 100001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24030008
Fetched 268435456 0b 001001 00000 00011 00000 00000 001000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 8 = 0 + 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3001b
Fetched 268435460 0b 000000 00000 00011 00000 00000 011011
Decoding: op, func -> DIVU
Instruction decoded.
DIVU 0, remainder: 0 = 0 u/ 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x810
Fetched 268435464 0b 000000 00000 00000 00001 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r1 <- HI = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2012
Fetched 268435468 0b 000000 00000 00000 00100 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r4 <- LO = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x811021
Fetched 268435472 0b 000000 00100 00001 00010 00000 100001
Decoding: op, func -> ADDU
Instruction decoded.
ADDU 0 = 0 + 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/divu5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24030008
Loading instruction to memory: 10000004 0b 001001 00000 00011 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3001b
Loading instruction to memory: 10000008 0b 000000 00000 00011 00000 00000 011011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x812
Loading instruction to memory: 10000010 0b 000000 00000 00000 00001 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x811020
Loading instruction to memory: 10000014 0b 000000 00100 00001 00010 00000 100000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24030008
Fetched 268435456 0b 001001 00000 00011 00000 00000 001000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 8 = 0 + 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3001b
Fetched 268435460 0b 000000 00000 00011 00000 00000 011011
Decoding: op, func -> DIVU
Instruction decoded.
DIVU 0, remainder: 0 = 0 u/ 8
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2010
Fetched 268435464 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x812
Fetched 268435468 0b 000000 00000 00000 00001 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r1 <- LO = 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x811020
Fetched 268435472 0b 000000 00100 00001 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x8  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/divu6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24010001
Loading instruction to memory: 10000004 0b 001001 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030002
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x23001b
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00000 00000 011011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 10000010 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000014 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x10400002
Loading instruction to memory: 10000018 0b 000100 00010 00000 00000 00000 000010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 10000024 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24010001
Fetched 268435456 0b 001001 00000 00001 00000 00000 000001
Decoding: op -> ADDUI
Instruction decoded.
ADDU 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030002
Fetched 268435460 0b 001001 00000 00011 00000 00000 000010
Decoding: op -> ADDUI
Instruction decoded.
ADDU 2 = 0 + 2
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x23001b
Fetched 268435464 0b 000000 00001 00011 00000 00000 011011
Decoding: op, func -> DIVU
Instruction decoded.
DIVU 0, remainder: 1 = 1 u/ 2
0: 0x0  0x1  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2010
Fetched 268435468 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 1
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x1012
Fetched 268435472 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 0
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x10400002
Fetched 268435476 0b 000100 00010 00000 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435480 -> 268435480 + 00000000000000000000000000001000 = 268435488
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x441020
Fetched 268435488 0b 000000 00010 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x1  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x1  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x1  0x2  0x1  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/function.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20030001
Loading instruction to memory: 10000004 0b 001000 00000 00011 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20020001
Loading instruction to memory: 10000008 0b 001000 00000 00010 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x400013
Loading instruction to memory: 1000000c 0b 000000 00010 00000 00000 00000 010011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x20010005
Loading instruction to memory: 10000010 0b 001000 00000 00001 00000 00000 000101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x4310002
Loading instruction to memory: 10000014 0b 000001 00001 10001 00000 00000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x1020fffc
Loading instruction to memory: 10000024 0b 000100 00001 00000 11111 11111 111100
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x410019
Loading instruction to memory: 10000038 0b 000000 00010 00001 00000 00000 011001
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x230822
Loading instruction to memory: 1000003c 0b 000000 00001 00011 00001 00000 100010
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0xbfffff4
Loading instruction to memory: 10000040 0b 000010 11111 11111 11111 11111 110100
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000044 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000048 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000048 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000004c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000004c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20030001
Fetched 268435456 0b 001000 00000 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x0  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20020001
Fetched 268435460 0b 001000 00000 00010 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x0  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x400013
Fetched 268435464 0b 000000 00010 00000 00000 00000 010011
Decoding: op, func -> MTLO
Instruction decoded.
MTLO LO <- r2 = 1
0: 0x0  0x0  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x20010005
Fetched 268435468 0b 001000 00000 00001 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x4310002
Fetched 268435472 0b 000001 00001 10001 00000 00000 000010
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x10000018 taken 268435476 -> 268435476 + 00000000000000000000000000001000 = 268435484
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x0
Fetched 268435484 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x1020fffc
Fetched 268435488 0b 000100 00001 00000 11111 11111 111100
Decoding: op -> BEQ
Instruction decoded.
JB not taken
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 8
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x1012
Fetched 268435496 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 1
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 9
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x0
Fetched 268435500 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 10
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x0
Fetched 268435504 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 11
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x410019
Fetched 268435508 0b 000000 00010 00001 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 5 = 1 * 5
0: 0x0  0x5  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 12
=============================================================================
Reading @0x10000038 from segment @ offset 0x10000000  0x230822
Fetched 268435512 0b 000000 00001 00011 00001 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 4 = 5 - 1
0: 0x0  0x4  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 13
=============================================================================
Reading @0x1000003c from segment @ offset 0x10000000  0xbfffff4
Fetched 268435516 0b 000010 11111 11111 11111 11111 110100
Decoding: op -> J
Instruction decoded.
JB taken  -> 0x1fffffd0
0: 0x0  0x4  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 14
=============================================================================
Reading @0x10000040 from segment @ offset 0x10000000  0x0
Fetched 268435520 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x4  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 15
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/internal1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20020022
Loading instruction to memory: 10000004 0b 001000 00000 00010 00000 00000 100010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x420020
Loading instruction to memory: 10000008 0b 000000 00010 00010 00000 00000 100000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20020000
Loading instruction to memory: 1000000c 0b 001000 00000 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20020022
Fetched 268435456 0b 001000 00000 00010 00000 00000 100010
Decoding: op -> ADDI
Instruction decoded.
ADD 34 = 0 + 34
0: 0x0  0x0  0x22  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x420020
Fetched 268435460 0b 000000 00010 00010 00000 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 68 = 34 + 34
0: 0x0  0x0  0x22  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20020000
Fetched 268435464 0b 001000 00000 00010 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/internal2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000004 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000038 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000003c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000040 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000044 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000048 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000048 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000004c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000004c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000050 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000050 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000054 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000054 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000058 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000058 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000005c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000005c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000060 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000060 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000064 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000064 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000068 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000068 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000006c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000006c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000070 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000070 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000074 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000074 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000078 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000078 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000007c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000007c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000080 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000080 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000084 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000084 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000088 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000088 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000008c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000008c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000090 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000090 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000094 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000094 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000098 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000098 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000009c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000009c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 100000a0 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x100000a0 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 100000a4 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x100000a4 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 100000a8 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x100000a8 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 100000ac 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x100000ac to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 100000b0 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x100000b0 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 100000b4 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x100000b4 to   segment @ offset 0x10000000  0x20020003
Loading instruction to memory: 100000b8 0b 001000 00000 00010 00000 00000 000011
MasterWriting @0x100000b8 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 100000bc 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x100000bc to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 100000c0 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 100000c0
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x0
Fetched 268435456 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x0
Fetched 268435460 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x0
Fetched 268435480 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x0
Fetched 268435484 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x0
Fetched 268435496 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 10
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x0
Fetched 268435500 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 11
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x0
Fetched 268435504 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 12
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x0
Fetched 268435508 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 13
=============================================================================
Reading @0x10000038 from segment @ offset 0x10000000  0x0
Fetched 268435512 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 14
=============================================================================
Reading @0x1000003c from segment @ offset 0x10000000  0x0
Fetched 268435516 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 15
=============================================================================
Reading @0x10000040 from segment @ offset 0x10000000  0x0
Fetched 268435520 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 16
=============================================================================
Reading @0x10000044 from segment @ offset 0x10000000  0x0
Fetched 268435524 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 17
=============================================================================
Reading @0x10000048 from segment @ offset 0x10000000  0x0
Fetched 268435528 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 18
=============================================================================
Reading @0x1000004c from segment @ offset 0x10000000  0x0
Fetched 268435532 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 19
=============================================================================
Reading @0x10000050 from segment @ offset 0x10000000  0x0
Fetched 268435536 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 20
=============================================================================
Reading @0x10000054 from segment @ offset 0x10000000  0x0
Fetched 268435540 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 21
=============================================================================
Reading @0x10000058 from segment @ offset 0x10000000  0x0
Fetched 268435544 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 22
=============================================================================
Reading @0x1000005c from segment @ offset 0x10000000  0x0
Fetched 268435548 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 23
=============================================================================
Reading @0x10000060 from segment @ offset 0x10000000  0x0
Fetched 268435552 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 24
=============================================================================
Reading @0x10000064 from segment @ offset 0x10000000  0x0
Fetched 268435556 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 25
=============================================================================
Reading @0x10000068 from segment @ offset 0x10000000  0x0
Fetched 268435560 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 26
=============================================================================
Reading @0x1000006c from segment @ offset 0x10000000  0x0
Fetched 268435564 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 27
=============================================================================
Reading @0x10000070 from segment @ offset 0x10000000  0x0
Fetched 268435568 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 28
=============================================================================
Reading @0x10000074 from segment @ offset 0x10000000  0x0
Fetched 268435572 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 29
=============================================================================
Reading @0x10000078 from segment @ offset 0x10000000  0x0
Fetched 268435576 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 30
=============================================================================
Reading @0x1000007c from segment @ offset 0x10000000  0x0
Fetched 268435580 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 31
=============================================================================
Reading @0x10000080 from segment @ offset 0x10000000  0x0
Fetched 268435584 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 32
=============================================================================
Reading @0x10000084 from segment @ offset 0x10000000  0x0
Fetched 268435588 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 33
=============================================================================
Reading @0x10000088 from segment @ offset 0x10000000  0x0
Fetched 268435592 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 34
=============================================================================
Reading @0x1000008c from segment @ offset 0x10000000  0x0
Fetched 268435596 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 35
=============================================================================
Reading @0x10000090 from segment @ offset 0x10000000  0x0
Fetched 268435600 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 36
=============================================================================
Reading @0x10000094 from segment @ offset 0x10000000  0x0
Fetched 268435604 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 37
=============================================================================
Reading @0x10000098 from segment @ offset 0x10000000  0x0
Fetched 268435608 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 38
=============================================================================
Reading @0x1000009c from segment @ offset 0x10000000  0x0
Fetched 268435612 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 39
=============================================================================
Reading @0x100000a0 from segment @ offset 0x10000000  0x0
Fetched 268435616 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 40
=============================================================================
Reading @0x100000a4 from segment @ offset 0x10000000  0x0
Fetched 268435620 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 41
=============================================================================
Reading @0x100000a8 from segment @ offset 0x10000000  0x0
Fetched 268435624 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 42
=============================================================================
Reading @0x100000ac from segment @ offset 0x10000000  0x0
Fetched 268435628 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 43
=============================================================================
Reading @0x100000b0 from segment @ offset 0x10000000  0x0
Fetched 268435632 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 44
=============================================================================
Reading @0x100000b4 from segment @ offset 0x10000000  0x20020003
Fetched 268435636 0b 001000 00000 00010 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 45
=============================================================================
Reading @0x100000b8 from segment @ offset 0x10000000  0x8
Fetched 268435640 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 46
=============================================================================
Reading @0x100000bc from segment @ offset 0x10000000  0x8
Fetched 268435644 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 3
Hello, Starting the simulator
Opening file tests/bin/internal3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x802f8600
Loading instruction to memory: 10000004 0b 100000 00001 01111 10000 11000 000000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000004
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x802f8600
Fetched 268435456 0b 100000 00001 01111 10000 11000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0xffff8600 from segment @ offset 0x30000004 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/j1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8000005
Loading instruction to memory: 10000008 0b 000010 00000 00000 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e31020
Loading instruction to memory: 10000010 0b 000000 11111 00011 00010 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x20230004
Loading instruction to memory: 1000001c 0b 001000 00001 00011 00000 00000 000100
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8000003
Loading instruction to memory: 10000020 0b 000010 00000 00000 00000 00000 000011
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x611020
Loading instruction to memory: 10000028 0b 000000 00011 00001 00010 00000 100000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000030
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010001
Fetched 268435456 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8000005
Fetched 268435460 0b 000010 00000 00000 00000 00000 000101
Decoding: op -> J
Instruction decoded.
JB taken  -> 0x10000014
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x20230004
Fetched 268435480 0b 001000 00001 00011 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 1 + 4
0: 0x0  0x1  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8000003
Fetched 268435484 0b 000010 00000 00000 00000 00000 000011
Decoding: op -> J
Instruction decoded.
JB taken  -> 0x1000000c
0: 0x0  0x1  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e31020
Fetched 268435468 0b 000000 11111 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x1  0x5  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x5  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x5  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 5
Hello, Starting the simulator
Opening file tests/bin/j2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x8000004
Loading instruction to memory: 10000004 0b 000010 00000 00000 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x8000004
Fetched 268435456 0b 000010 00000 00000 00000 00000 000100
Decoding: op -> J
Instruction decoded.
JB taken  -> 0x10000010
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x0
Fetched 268435460 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/j3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x8400001
Loading instruction to memory: 10000004 0b 000010 00010 00000 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x8400001
Fetched 268435456 0b 000010 00010 00000 00000 00000 000001
Decoding: op -> J
Instruction decoded.
JB taken  -> 0x11000004
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/jal1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0xc000005
Loading instruction to memory: 10000008 0b 000011 00000 00000 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e31020
Loading instruction to memory: 10000010 0b 000000 11111 00011 00010 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x201820
Loading instruction to memory: 1000001c 0b 000000 00001 00000 00011 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0xc000003
Loading instruction to memory: 10000020 0b 000011 00000 00000 00000 00000 000011
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x611020
Loading instruction to memory: 10000028 0b 000000 00011 00001 00010 00000 100000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000030
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010001
Fetched 268435456 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0xc000005
Fetched 268435460 0b 000011 00000 00000 00000 00000 000101
Decoding: op -> JAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken  -> 0x10000014
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x201820
Fetched 268435480 0b 000000 00001 00000 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 1 = 1 + 0
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0xc000003
Fetched 268435484 0b 000011 00000 00000 00000 00000 000011
Decoding: op -> JAL
Instruction decoded.
JB  and linking ra = 0x10000024 taken  -> 0x1000000c
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 6
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e31020
Fetched 268435468 0b 000000 11111 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435493 = 268435492 + 1
0: 0x0  0x1  0x10000025  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 7
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x10000025  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 8
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x10000025  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Exiting with code: 37
Hello, Starting the simulator
Opening file tests/bin/jal2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0xc000005
Loading instruction to memory: 10000008 0b 000011 00000 00000 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e31020
Loading instruction to memory: 10000010 0b 000000 11111 00011 00010 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x201820
Loading instruction to memory: 1000001c 0b 000000 00001 00000 00011 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x3e0f809
Loading instruction to memory: 10000020 0b 000000 11111 00000 11111 00000 001001
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x611020
Loading instruction to memory: 10000028 0b 000000 00011 00001 00010 00000 100000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000030
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010001
Fetched 268435456 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0xc000005
Fetched 268435460 0b 000011 00000 00000 00000 00000 000101
Decoding: op -> JAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken  -> 0x10000014
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x201820
Fetched 268435480 0b 000000 00001 00000 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 1 = 1 + 0
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x3e0f809
Fetched 268435484 0b 000000 11111 00000 11111 00000 001001
Decoding: op, func -> JALR
Instruction decoded.
JB taken  -> 0x10000024
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 5
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 6
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x611020
Fetched 268435492 0b 000000 00011 00001 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 2 = 1 + 1
0: 0x0  0x1  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 7
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Cycle: 8
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x8
Fetched 268435500 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x2  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000024  
Exiting with code: 2
Hello, Starting the simulator
Opening file tests/bin/jal3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0xc000004
Loading instruction to memory: 10000004 0b 000011 00000 00000 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0xc000004
Fetched 268435456 0b 000011 00000 00000 00000 00000 000100
Decoding: op -> JAL
Instruction decoded.
JB  and linking ra = 0x10000008 taken  -> 0x10000010
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000008  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x0
Fetched 268435460 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000008  
Cycle: 1
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000008  
Cycle: 2
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/jalr1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010010
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 010000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310001
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e11820
Loading instruction to memory: 10000010 0b 000000 11111 00001 00011 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x60f809
Loading instruction to memory: 10000014 0b 000000 00011 00000 11111 00000 001001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 1000001c 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x9f1020
Loading instruction to memory: 10000020 0b 000000 00100 11111 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010010
Fetched 268435456 0b 001000 00000 00001 00000 00000 010000
Decoding: op -> ADDI
Instruction decoded.
ADD 16 = 0 + 16
0: 0x0  0x10  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310001
Fetched 268435460 0b 000001 00001 10001 00000 00000 000001
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000000100 = 268435468
0: 0x0  0x10  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x10  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e11820
Fetched 268435468 0b 000000 11111 00001 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435484 = 268435468 + 16
0: 0x0  0x10  0x0  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x60f809
Fetched 268435472 0b 000000 00011 00000 11111 00000 001001
Decoding: op, func -> JALR
Instruction decoded.
JB taken  -> 0x1000001c
0: 0x0  0x10  0x0  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x10  0x0  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x9f1020
Fetched 268435484 0b 000000 00100 11111 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435480 = 0 + 268435480
0: 0x0  0x10  0x10000018  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10  0x10000018  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10  0x10000018  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Exiting with code: 24
Hello, Starting the simulator
Opening file tests/bin/jalr2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001001c
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 011100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300001
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e11820
Loading instruction to memory: 10000010 0b 000000 11111 00001 00011 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x60f809
Loading instruction to memory: 10000014 0b 000000 00011 00000 11111 00000 001001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 1000001c 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 10000028 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x23e60000
Loading instruction to memory: 1000002c 0b 001000 11111 00110 00000 00000 000000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0xc0f809
Loading instruction to memory: 10000030 0b 000000 00110 00000 11111 00000 001001
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x20050005
Loading instruction to memory: 10000038 0b 001000 00000 00101 00000 00000 000101
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x651822
Loading instruction to memory: 1000003c 0b 000000 00011 00101 00011 00000 100010
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000040 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000044
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001001c
Fetched 268435456 0b 001000 00000 00001 00000 00000 011100
Decoding: op -> ADDI
Instruction decoded.
ADD 28 = 0 + 28
0: 0x0  0x1c  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300001
Fetched 268435460 0b 000001 00001 10000 00000 00000 000001
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c not taken
0: 0x0  0x1c  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e11820
Fetched 268435468 0b 000000 11111 00001 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435496 = 268435468 + 28
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x60f809
Fetched 268435472 0b 000000 00011 00000 11111 00000 001001
Decoding: op, func -> JALR
Instruction decoded.
JB taken  -> 0x10000028
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 5
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x23e60000
Fetched 268435496 0b 001000 11111 00110 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435480 = 268435480 + 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 6
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0xc0f809
Fetched 268435500 0b 000000 00110 00000 11111 00000 001001
Decoding: op, func -> JALR
Instruction decoded.
JB taken  -> 0x10000018
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 7
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x0
Fetched 268435504 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x851020
Fetched 268435480 0b 000000 00100 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 9
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 10
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/jalr3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001000f
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 001111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310001
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e11820
Loading instruction to memory: 10000010 0b 000000 11111 00001 00011 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x60f809
Loading instruction to memory: 10000014 0b 000000 00011 00000 11111 00000 001001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 1000001c 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x9f1020
Loading instruction to memory: 10000020 0b 000000 00100 11111 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001000f
Fetched 268435456 0b 001000 00000 00001 00000 00000 001111
Decoding: op -> ADDI
Instruction decoded.
ADD 15 = 0 + 15
0: 0x0  0xf  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310001
Fetched 268435460 0b 000001 00001 10001 00000 00000 000001
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000000100 = 268435468
0: 0x0  0xf  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xf  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e11820
Fetched 268435468 0b 000000 11111 00001 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435483 = 268435468 + 15
0: 0x0  0xf  0x0  0x1000001b  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x60f809
Fetched 268435472 0b 000000 00011 00000 11111 00000 001001
Decoding: op, func -> JALR
Instruction decoded.
JB taken  -> 0x1000001b
0: 0x0  0xf  0x0  0x1000001b  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xf  0x0  0x1000001b  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000018  
Cycle: 5
=============================================================================
Unaligned memory instruction read. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/jalr4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001001c
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 011100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300001
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e11820
Loading instruction to memory: 10000010 0b 000000 11111 00001 00011 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x603809
Loading instruction to memory: 10000014 0b 000000 00011 00000 00111 00000 001001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x851020
Loading instruction to memory: 1000001c 0b 000000 00100 00101 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 10000028 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x20e60000
Loading instruction to memory: 1000002c 0b 001000 00111 00110 00000 00000 000000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0xc0f809
Loading instruction to memory: 10000030 0b 000000 00110 00000 11111 00000 001001
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x20050005
Loading instruction to memory: 10000038 0b 001000 00000 00101 00000 00000 000101
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x651822
Loading instruction to memory: 1000003c 0b 000000 00011 00101 00011 00000 100010
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000040 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000044
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001001c
Fetched 268435456 0b 001000 00000 00001 00000 00000 011100
Decoding: op -> ADDI
Instruction decoded.
ADD 28 = 0 + 28
0: 0x0  0x1c  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300001
Fetched 268435460 0b 000001 00001 10000 00000 00000 000001
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c not taken
0: 0x0  0x1c  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e11820
Fetched 268435468 0b 000000 11111 00001 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435496 = 268435468 + 28
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x603809
Fetched 268435472 0b 000000 00011 00000 00111 00000 001001
Decoding: op, func -> JALR
Instruction decoded.
JB taken  -> 0x10000028
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x0  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x0  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 5
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x20e60000
Fetched 268435496 0b 001000 00111 00110 00000 00000 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 268435480 = 268435480 + 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 6
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0xc0f809
Fetched 268435500 0b 000000 00110 00000 11111 00000 001001
Decoding: op, func -> JALR
Instruction decoded.
JB taken  -> 0x10000018
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 7
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x0
Fetched 268435504 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 8
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x851020
Fetched 268435480 0b 000000 00100 00101 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 9
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Cycle: 10
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1c  0x0  0x10000028  0x0  0x0  0x10000018  0x10000018  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x10000034  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/jr1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010010
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 010000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310001
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e11820
Loading instruction to memory: 10000010 0b 000000 11111 00001 00011 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x600008
Loading instruction to memory: 10000014 0b 000000 00011 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 1000001c 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x831020
Loading instruction to memory: 10000020 0b 000000 00100 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010010
Fetched 268435456 0b 001000 00000 00001 00000 00000 010000
Decoding: op -> ADDI
Instruction decoded.
ADD 16 = 0 + 16
0: 0x0  0x10  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310001
Fetched 268435460 0b 000001 00001 10001 00000 00000 000001
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c taken 268435464 -> 268435464 + 00000000000000000000000000000100 = 268435468
0: 0x0  0x10  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x10  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e11820
Fetched 268435468 0b 000000 11111 00001 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435484 = 268435468 + 16
0: 0x0  0x10  0x0  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x600008
Fetched 268435472 0b 000000 00011 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x1000001c
0: 0x0  0x10  0x0  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x10  0x0  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x831020
Fetched 268435484 0b 000000 00100 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435484 = 0 + 268435484
0: 0x0  0x10  0x1000001c  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 6
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10  0x1000001c  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10  0x1000001c  0x1000001c  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Exiting with code: 28
Hello, Starting the simulator
Opening file tests/bin/jr2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fff0
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 110000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4310001
Loading instruction to memory: 10000008 0b 000001 00001 10001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e11820
Loading instruction to memory: 10000010 0b 000000 11111 00001 00011 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x600008
Loading instruction to memory: 10000014 0b 000000 00011 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 1000001c 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x831020
Loading instruction to memory: 10000020 0b 000000 00100 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fff0
Fetched 268435456 0b 001000 00000 00001 11111 11111 110000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967280 = 0 + -16
0: 0x0  0xfffffff0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4310001
Fetched 268435460 0b 000001 00001 10001 00000 00000 000001
Decoding: op, rt -> BGEZAL
Instruction decoded.
JB  and linking ra = 0x1000000c not taken
0: 0x0  0xfffffff0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffff0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e11820
Fetched 268435468 0b 000000 11111 00001 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435452 = 268435468 + -16
0: 0x0  0xfffffff0  0x0  0xffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x600008
Fetched 268435472 0b 000000 00011 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0xffffffc
0: 0x0  0xfffffff0  0x0  0xffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xfffffff0  0x0  0xffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 5
=============================================================================
Trying to load instruction from outside of the range of intruction memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/jr3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001000f
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 001111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x4300001
Loading instruction to memory: 10000008 0b 000001 00001 10000 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3e11820
Loading instruction to memory: 10000010 0b 000000 11111 00001 00011 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x600008
Loading instruction to memory: 10000014 0b 000000 00011 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x20040005
Loading instruction to memory: 1000001c 0b 001000 00000 00100 00000 00000 000101
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x831020
Loading instruction to memory: 10000020 0b 000000 00100 00011 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001000f
Fetched 268435456 0b 001000 00000 00001 00000 00000 001111
Decoding: op -> ADDI
Instruction decoded.
ADD 15 = 0 + 15
0: 0x0  0xf  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x4300001
Fetched 268435460 0b 000001 00001 10000 00000 00000 000001
Decoding: op, rt -> BLTZAL
Instruction decoded.
JB  and linking ra = 0x1000000c not taken
0: 0x0  0xf  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xf  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3e11820
Fetched 268435468 0b 000000 11111 00001 00011 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 268435483 = 268435468 + 15
0: 0x0  0xf  0x0  0x1000001b  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x600008
Fetched 268435472 0b 000000 00011 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x1000001b
0: 0x0  0xf  0x0  0x1000001b  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xf  0x0  0x1000001b  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x1000000c  
Cycle: 5
=============================================================================
Unaligned memory instruction read. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lb10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210003
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 1000000c 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210003
Fetched 268435460 0b 001000 00001 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 805306371 = 805306368 + 3
0: 0x0  0x30000003  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x80220000
Fetched 268435464 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Loading 1 @805306371: 61 as 61
0: 0x0  0x30000003  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 97
Hello, Starting the simulator
Opening file tests/bin/lb11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210003
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 1000000c 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210003
Fetched 268435460 0b 001000 00001 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 805306371 = 805306368 + 3
0: 0x0  0x30000003  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x80220000
Fetched 268435464 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: ffffffff
 0xffffffff
Loading 1 @805306371: ff as ffffffff
0: 0x0  0x30000003  0xffffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0xffffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0xffffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/lb12.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210ff3
Loading instruction to memory: 10000008 0b 001000 00001 00001 00001 11111 110011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 1000000c 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210ff3
Fetched 268435460 0b 001000 00001 00001 00001 11111 110011
Decoding: op -> ADDI
Instruction decoded.
ADD 268439539 = 268435456 + 4083
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x80220000
Fetched 268435464 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x10000ff0 from segment @ offset 0x10000000  0x0
Loading 1 @268439539: 0 as 0
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lb13.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20220ff3
Loading instruction to memory: 10000008 0b 001000 00001 00010 00001 11111 110011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x80220007
Loading instruction to memory: 1000000c 0b 100000 00001 00010 00000 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20220ff3
Fetched 268435460 0b 001000 00001 00010 00001 11111 110011
Decoding: op -> ADDI
Instruction decoded.
ADD 268439539 = 268435456 + 4083
0: 0x0  0x10000000  0x10000ff3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x80220007
Fetched 268435464 0b 100000 00001 00010 00000 00000 000111
Decoding: op -> LB
Instruction decoded.
Reading @0x10000004 from segment @ offset 0x10000000  0x20220ff3
Loading 1 @268435463: f3 as fffffff3
0: 0x0  0x10000000  0xfffffff3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0xfffffff3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0xfffffff3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 243
Hello, Starting the simulator
Opening file tests/bin/lb1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421cf0c
Loading instruction to memory: 10000008 0b 001101 00001 00001 11001 11100 001100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20020f6c
Loading instruction to memory: 1000000c 0b 001000 00000 00010 00001 11101 101100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac220000
Loading instruction to memory: 10000010 0b 101011 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x80220002
Loading instruction to memory: 10000014 0b 100000 00001 00010 00000 00000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421cf0c
Fetched 268435460 0b 001101 00001 00001 11001 11100 001100
Decoding: op -> ORI
Instruction decoded.
OR 0x2000cf0c = 0x20000000 | 0xcf0c
0: 0x0  0x2000cf0c  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20020f6c
Fetched 268435464 0b 001000 00000 00010 00001 11101 101100
Decoding: op -> ADDI
Instruction decoded.
ADD 3948 = 0 + 3948
0: 0x0  0x2000cf0c  0xf6c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac220000
Fetched 268435468 0b 101011 00001 00010 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x2000cf0c from segment @ offset 0x20000000  0x0
Storing 4 @536923916: f6cWriting @0x2000cf0c to   segment @ offset 0x20000000  0xf6c
 as f6c
0: 0x0  0x2000cf0c  0xf6c  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x80220002
Fetched 268435472 0b 100000 00001 00010 00000 00000 000010
Decoding: op -> LB
Instruction decoded.
Reading @0x2000cf0c from segment @ offset 0x20000000  0xf6c
Loading 1 @536923918: f00 as f
0: 0x0  0x2000cf0c  0xf  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x2000cf0c  0xf  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x2000cf0c  0xf  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 15
Hello, Starting the simulator
Opening file tests/bin/lb2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f0ff
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00011 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 10000010 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f0ff
Fetched 268435460 0b 001000 00001 00011 11110 00011 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 536867071 = 536870912 + -3841
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff0ffWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff0ff
 as 1ffff0ff
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x80220000
Fetched 268435468 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1ffff0ff
Loading 1 @536870912: 1f000000 as 1f
0: 0x0  0x20000000  0x1f  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x1f  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x1f  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 31
Hello, Starting the simulator
Opening file tests/bin/lb3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f0ff
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00011 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80220001
Loading instruction to memory: 10000010 0b 100000 00001 00010 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f0ff
Fetched 268435460 0b 001000 00001 00011 11110 00011 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 536867071 = 536870912 + -3841
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff0ffWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff0ff
 as 1ffff0ff
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x80220001
Fetched 268435468 0b 100000 00001 00010 00000 00000 000001
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1ffff0ff
Loading 1 @536870913: ff0000 as ffffffff
0: 0x0  0x20000000  0xffffffff  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xffffffff  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xffffffff  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/lb4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f00f
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00000 001111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80220003
Loading instruction to memory: 10000010 0b 100000 00001 00010 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f00f
Fetched 268435460 0b 001000 00001 00011 11110 00000 001111
Decoding: op -> ADDI
Instruction decoded.
ADD 536866831 = 536870912 + -4081
0: 0x0  0x20000000  0x0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff00fWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff00f
 as 1ffff00f
0: 0x0  0x20000000  0x0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x80220003
Fetched 268435468 0b 100000 00001 00010 00000 00000 000011
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1ffff00f
Loading 1 @536870915: f as f
0: 0x0  0x20000000  0xf  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xf  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xf  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 15
Hello, Starting the simulator
Opening file tests/bin/lb5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20230080
Loading instruction to memory: 10000008 0b 001000 00001 00011 00000 00010 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac630004
Loading instruction to memory: 1000000c 0b 101011 00011 00011 00000 00000 000100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80650007
Loading instruction to memory: 10000010 0b 100000 00011 00101 00000 00000 000111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3c06ffff
Loading instruction to memory: 10000014 0b 001111 00000 00110 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x34c6ff80
Loading instruction to memory: 10000018 0b 001101 00110 00110 11111 11110 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x10a60002
Loading instruction to memory: 1000001c 0b 000100 00101 00110 00000 00000 000010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x20420002
Loading instruction to memory: 10000024 0b 001000 00010 00010 00000 00000 000010
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20230080
Fetched 268435460 0b 001000 00001 00011 00000 00010 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 536871040 = 536870912 + 128
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac630004
Fetched 268435464 0b 101011 00011 00011 00000 00000 000100
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000084 from segment @ offset 0x20000000  0x0
Storing 4 @536871044: 20000080Writing @0x20000084 to   segment @ offset 0x20000000  0x20000080
 as 20000080
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x80650007
Fetched 268435468 0b 100000 00011 00101 00000 00000 000111
Decoding: op -> LB
Instruction decoded.
Reading @0x20000084 from segment @ offset 0x20000000  0x20000080
Loading 1 @536871047: 80 as ffffff80
0: 0x0  0x20000000  0x0  0x20000080  0x0  0xffffff80  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3c06ffff
Fetched 268435472 0b 001111 00000 00110 11111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 4294901760
0: 0x0  0x20000000  0x0  0x20000080  0x0  0xffffff80  0xffff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x34c6ff80
Fetched 268435476 0b 001101 00110 00110 11111 11110 000000
Decoding: op -> ORI
Instruction decoded.
OR 0xffffff80 = 0xffff0000 | 0xff80
0: 0x0  0x20000000  0x0  0x20000080  0x0  0xffffff80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x10a60002
Fetched 268435480 0b 000100 00101 00110 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435484 -> 268435484 + 00000000000000000000000000001000 = 268435492
0: 0x0  0x20000000  0x0  0x20000080  0x0  0xffffff80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x0
Fetched 268435484 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x20000000  0x0  0x20000080  0x0  0xffffff80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x0  0x20000080  0x0  0xffffff80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x0  0x20000080  0x0  0xffffff80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lb6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f0ff
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00011 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8022ffff
Loading instruction to memory: 10000010 0b 100000 00001 00010 11111 11111 111111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f0ff
Fetched 268435460 0b 001000 00001 00011 11110 00011 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 536867071 = 536870912 + -3841
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff0ffWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff0ff
 as 1ffff0ff
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8022ffff
Fetched 268435468 0b 100000 00001 00010 11111 11111 111111
Decoding: op -> LB
Instruction decoded.
Reading @0x1ffffffc from segment @ offset 0x10000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lb7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 10000008 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x80220000
Fetched 268435460 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lb8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210004
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 1000000c 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210004
Fetched 268435460 0b 001000 00001 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 805306372 = 805306368 + 4
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x80220000
Fetched 268435464 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x30000004 from segment @ offset 0x30000004 Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lb9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210001
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 1000000c 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210001
Fetched 268435460 0b 001000 00001 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 805306369 = 805306368 + 1
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x80220000
Fetched 268435464 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Loading 1 @805306369: 0 as 0
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lbu10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210003
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x90220000
Loading instruction to memory: 1000000c 0b 100100 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210003
Fetched 268435460 0b 001000 00001 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 805306371 = 805306368 + 3
0: 0x0  0x30000003  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x90220000
Fetched 268435464 0b 100100 00001 00010 00000 00000 000000
Decoding: op -> LBU
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Loading 1 @805306371: 61 as 61
0: 0x0  0x30000003  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 97
Hello, Starting the simulator
Opening file tests/bin/lbu11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210003
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x80220000
Loading instruction to memory: 1000000c 0b 100000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210003
Fetched 268435460 0b 001000 00001 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 805306371 = 805306368 + 3
0: 0x0  0x30000003  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x80220000
Fetched 268435464 0b 100000 00001 00010 00000 00000 000000
Decoding: op -> LB
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: ffffffff
 0xffffffff
Loading 1 @805306371: ff as ffffffff
0: 0x0  0x30000003  0xffffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0xffffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000003  0xffffffff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/lbu12.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210ff3
Loading instruction to memory: 10000008 0b 001000 00001 00001 00001 11111 110011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x90220000
Loading instruction to memory: 1000000c 0b 100100 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210ff3
Fetched 268435460 0b 001000 00001 00001 00001 11111 110011
Decoding: op -> ADDI
Instruction decoded.
ADD 268439539 = 268435456 + 4083
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x90220000
Fetched 268435464 0b 100100 00001 00010 00000 00000 000000
Decoding: op -> LBU
Instruction decoded.
Reading @0x10000ff0 from segment @ offset 0x10000000  0x0
Loading 1 @268439539: 0 as 0
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000ff3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lbu13.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20220ff3
Loading instruction to memory: 10000008 0b 001000 00001 00010 00001 11111 110011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x90220007
Loading instruction to memory: 1000000c 0b 100100 00001 00010 00000 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20220ff3
Fetched 268435460 0b 001000 00001 00010 00001 11111 110011
Decoding: op -> ADDI
Instruction decoded.
ADD 268439539 = 268435456 + 4083
0: 0x0  0x10000000  0x10000ff3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x90220007
Fetched 268435464 0b 100100 00001 00010 00000 00000 000111
Decoding: op -> LBU
Instruction decoded.
Reading @0x10000004 from segment @ offset 0x10000000  0x20220ff3
Loading 1 @268435463: f3 as f3
0: 0x0  0x10000000  0xf3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0xf3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0xf3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 243
Hello, Starting the simulator
Opening file tests/bin/lbu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f0ff
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00011 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x90220000
Loading instruction to memory: 10000010 0b 100100 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f0ff
Fetched 268435460 0b 001000 00001 00011 11110 00011 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 536867071 = 536870912 + -3841
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff0ffWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff0ff
 as 1ffff0ff
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x90220000
Fetched 268435468 0b 100100 00001 00010 00000 00000 000000
Decoding: op -> LBU
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1ffff0ff
Loading 1 @536870912: 1f000000 as 1f
0: 0x0  0x20000000  0x1f  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x1f  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x1f  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 31
Hello, Starting the simulator
Opening file tests/bin/lbu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f0ff
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00011 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x90220001
Loading instruction to memory: 10000010 0b 100100 00001 00010 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f0ff
Fetched 268435460 0b 001000 00001 00011 11110 00011 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 536867071 = 536870912 + -3841
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff0ffWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff0ff
 as 1ffff0ff
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x90220001
Fetched 268435468 0b 100100 00001 00010 00000 00000 000001
Decoding: op -> LBU
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1ffff0ff
Loading 1 @536870913: ff0000 as ff
0: 0x0  0x20000000  0xff  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xff  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xff  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/lbu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f00f
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00000 001111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80220002
Loading instruction to memory: 10000010 0b 100000 00001 00010 00000 00000 000010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f00f
Fetched 268435460 0b 001000 00001 00011 11110 00000 001111
Decoding: op -> ADDI
Instruction decoded.
ADD 536866831 = 536870912 + -4081
0: 0x0  0x20000000  0x0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff00fWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff00f
 as 1ffff00f
0: 0x0  0x20000000  0x0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x80220002
Fetched 268435468 0b 100000 00001 00010 00000 00000 000010
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1ffff00f
Loading 1 @536870914: f000 as fffffff0
0: 0x0  0x20000000  0xfffffff0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xfffffff0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xfffffff0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 240
Hello, Starting the simulator
Opening file tests/bin/lbu4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f00f
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00000 001111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80220003
Loading instruction to memory: 10000010 0b 100000 00001 00010 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f00f
Fetched 268435460 0b 001000 00001 00011 11110 00000 001111
Decoding: op -> ADDI
Instruction decoded.
ADD 536866831 = 536870912 + -4081
0: 0x0  0x20000000  0x0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff00fWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff00f
 as 1ffff00f
0: 0x0  0x20000000  0x0  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x80220003
Fetched 268435468 0b 100000 00001 00010 00000 00000 000011
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1ffff00f
Loading 1 @536870915: f as f
0: 0x0  0x20000000  0xf  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xf  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xf  0x1ffff00f  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 15
Hello, Starting the simulator
Opening file tests/bin/lbu5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20230080
Loading instruction to memory: 10000008 0b 001000 00001 00011 00000 00010 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac630004
Loading instruction to memory: 1000000c 0b 101011 00011 00011 00000 00000 000100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x90650007
Loading instruction to memory: 10000010 0b 100100 00011 00101 00000 00000 000111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3c06ffff
Loading instruction to memory: 10000014 0b 001111 00000 00110 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x34c6ff80
Loading instruction to memory: 10000018 0b 001101 00110 00110 11111 11110 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x10a60002
Loading instruction to memory: 1000001c 0b 000100 00101 00110 00000 00000 000010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x20420002
Loading instruction to memory: 10000024 0b 001000 00010 00010 00000 00000 000010
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20230080
Fetched 268435460 0b 001000 00001 00011 00000 00010 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 536871040 = 536870912 + 128
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac630004
Fetched 268435464 0b 101011 00011 00011 00000 00000 000100
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000084 from segment @ offset 0x20000000  0x0
Storing 4 @536871044: 20000080Writing @0x20000084 to   segment @ offset 0x20000000  0x20000080
 as 20000080
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x90650007
Fetched 268435468 0b 100100 00011 00101 00000 00000 000111
Decoding: op -> LBU
Instruction decoded.
Reading @0x20000084 from segment @ offset 0x20000000  0x20000080
Loading 1 @536871047: 80 as 80
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x80  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3c06ffff
Fetched 268435472 0b 001111 00000 00110 11111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 4294901760
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x80  0xffff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x34c6ff80
Fetched 268435476 0b 001101 00110 00110 11111 11110 000000
Decoding: op -> ORI
Instruction decoded.
OR 0xffffff80 = 0xffff0000 | 0xff80
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x10a60002
Fetched 268435480 0b 000100 00101 00110 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB not taken
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x0
Fetched 268435484 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x20000000  0x0  0x20000080  0x0  0x80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x20420002
Fetched 268435488 0b 001000 00010 00010 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x20000000  0x2  0x20000080  0x0  0x80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x2  0x20000080  0x0  0x80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x2  0x20000080  0x0  0x80  0xffffff80  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 2
Hello, Starting the simulator
Opening file tests/bin/lbu6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2023f0ff
Loading instruction to memory: 10000008 0b 001000 00001 00011 11110 00011 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x9022ffff
Loading instruction to memory: 10000010 0b 100100 00001 00010 11111 11111 111111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2023f0ff
Fetched 268435460 0b 001000 00001 00011 11110 00011 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 536867071 = 536870912 + -3841
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1ffff0ffWriting @0x20000000 to   segment @ offset 0x20000000  0x1ffff0ff
 as 1ffff0ff
0: 0x0  0x20000000  0x0  0x1ffff0ff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x9022ffff
Fetched 268435468 0b 100100 00001 00010 11111 11111 111111
Decoding: op -> LBU
Instruction decoded.
Reading @0x1ffffffc from segment @ offset 0x10000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lbu7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x90220000
Loading instruction to memory: 10000008 0b 100100 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x90220000
Fetched 268435460 0b 100100 00001 00010 00000 00000 000000
Decoding: op -> LBU
Instruction decoded.
Reading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lbu8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210004
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x90220000
Loading instruction to memory: 1000000c 0b 100100 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210004
Fetched 268435460 0b 001000 00001 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 805306372 = 805306368 + 4
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x90220000
Fetched 268435464 0b 100100 00001 00010 00000 00000 000000
Decoding: op -> LBU
Instruction decoded.
Reading @0x30000004 from segment @ offset 0x30000004 Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lbu9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20210001
Loading instruction to memory: 10000008 0b 001000 00001 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x90220000
Loading instruction to memory: 1000000c 0b 100100 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20210001
Fetched 268435460 0b 001000 00001 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 805306369 = 805306368 + 1
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x90220000
Fetched 268435464 0b 100100 00001 00010 00000 00000 000000
Decoding: op -> LBU
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Loading 1 @805306369: 0 as 0
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lh10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c031000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00010 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x34631220
Loading instruction to memory: 1000000c 0b 001101 00011 00011 00010 01000 100000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x84620002
Loading instruction to memory: 10000010 0b 100001 00011 00010 00000 00000 000010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c031000
Fetched 268435460 0b 001111 00000 00011 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x7f010000  0x0  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x34631220
Fetched 268435464 0b 001101 00011 00011 00010 01000 100000
Decoding: op -> ORI
Instruction decoded.
OR 0x10001220 = 0x10000000 | 0x1220
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x84620002
Fetched 268435468 0b 100001 00011 00010 00000 00000 000010
Decoding: op -> LH
Instruction decoded.
Reading @0x10001220 from segment @ offset 0x10000000  0x0
Loading 2 @268440098: 0 as 0
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lh11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033000
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x84620002
Loading instruction to memory: 10000008 0b 100001 00011 00010 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033000
Fetched 268435456 0b 001111 00000 00011 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x0  0x0  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x84620002
Fetched 268435460 0b 100001 00011 00010 00000 00000 000010
Decoding: op -> LH
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Loading 2 @805306370: 61 as 61
0: 0x0  0x0  0x61  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x61  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x61  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 97
Hello, Starting the simulator
Opening file tests/bin/lh12.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033000
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x84620001
Loading instruction to memory: 10000008 0b 100001 00011 00010 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033000
Fetched 268435456 0b 001111 00000 00011 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x0  0x0  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x84620001
Fetched 268435460 0b 100001 00011 00010 00000 00000 000001
Decoding: op -> LH
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lh13.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033000
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x84620002
Loading instruction to memory: 10000008 0b 100001 00011 00010 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033000
Fetched 268435456 0b 001111 00000 00011 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x0  0x0  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x84620002
Fetched 268435460 0b 100001 00011 00010 00000 00000 000010
Decoding: op -> LH
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: ffffffff
 0xffffffff
Loading 2 @805306370: ffff as ffffffff
0: 0x0  0x0  0xffffffff  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffffff  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffffff  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/lh1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x84620000
Loading instruction to memory: 10000010 0b 100001 00011 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x84620000
Fetched 268435468 0b 100001 00011 00010 00000 00000 000000
Decoding: op -> LH
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f010000
Loading 2 @536870912: 7f010000 as 7f01
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/lh2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x84620000
Loading instruction to memory: 10000010 0b 100001 00011 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x21202
Loading instruction to memory: 10000018 0b 000000 00000 00010 00010 01000 000010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x84620000
Fetched 268435468 0b 100001 00011 00010 00000 00000 000000
Decoding: op -> LH
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f010000
Loading 2 @536870912: 7f010000 as 7f01
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x21202
Fetched 268435476 0b 000000 00000 00010 00010 01000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000001111111 = 00000000000000000111111100000001 >> 8
0: 0x0  0x7f010000  0x7f  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 127
Hello, Starting the simulator
Opening file tests/bin/lh3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34217123
Loading instruction to memory: 10000008 0b 001101 00001 00001 01110 00100 100011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 10000010 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x84620002
Loading instruction to memory: 10000014 0b 100001 00011 00010 00000 00000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34217123
Fetched 268435460 0b 001101 00001 00001 01110 00100 100011
Decoding: op -> ORI
Instruction decoded.
OR 0x7f017123 = 0x7f010000 | 0x7123
0: 0x0  0x7f017123  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c032000
Fetched 268435464 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac610000
Fetched 268435468 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f017123Writing @0x20000000 to   segment @ offset 0x20000000  0x7f017123
 as 7f017123
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x84620002
Fetched 268435472 0b 100001 00011 00010 00000 00000 000010
Decoding: op -> LH
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f017123
Loading 2 @536870914: 7123 as 7123
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 35
Hello, Starting the simulator
Opening file tests/bin/lh4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34217123
Loading instruction to memory: 10000008 0b 001101 00001 00001 01110 00100 100011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 10000010 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x84620002
Loading instruction to memory: 10000014 0b 100001 00011 00010 00000 00000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x21202
Loading instruction to memory: 1000001c 0b 000000 00000 00010 00010 01000 000010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34217123
Fetched 268435460 0b 001101 00001 00001 01110 00100 100011
Decoding: op -> ORI
Instruction decoded.
OR 0x7f017123 = 0x7f010000 | 0x7123
0: 0x0  0x7f017123  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c032000
Fetched 268435464 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac610000
Fetched 268435468 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f017123Writing @0x20000000 to   segment @ offset 0x20000000  0x7f017123
 as 7f017123
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x84620002
Fetched 268435472 0b 100001 00011 00010 00000 00000 000010
Decoding: op -> LH
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f017123
Loading 2 @536870914: 7123 as 7123
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x21202
Fetched 268435480 0b 000000 00000 00010 00010 01000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000001110001 = 00000000000000000111000100100011 >> 8
0: 0x0  0x7f017123  0x71  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x71  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x71  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 113
Hello, Starting the simulator
Opening file tests/bin/lh5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x84620001
Loading instruction to memory: 10000010 0b 100001 00011 00010 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x84620001
Fetched 268435468 0b 100001 00011 00010 00000 00000 000001
Decoding: op -> LH
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lh6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x84620003
Loading instruction to memory: 10000010 0b 100001 00011 00010 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x84620003
Fetched 268435468 0b 100001 00011 00010 00000 00000 000011
Decoding: op -> LH
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lh7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 10001 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421f2e0
Loading instruction to memory: 10000008 0b 001101 00001 00001 11110 01011 100000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 10000010 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x84640000
Loading instruction to memory: 10000014 0b 100001 00011 00100 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x3c06ffff
Loading instruction to memory: 10000018 0b 001111 00000 00110 11111 11111 111111
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x34c68f01
Loading instruction to memory: 1000001c 0b 001101 00110 00110 10001 11100 000001
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x10860002
Loading instruction to memory: 10000020 0b 000100 00100 00110 00000 00000 000010
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x20420002
Loading instruction to memory: 10000028 0b 001000 00010 00010 00000 00000 000010
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000030
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018f01
Fetched 268435456 0b 001111 00000 00001 10001 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2399207424
0: 0x0  0x8f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421f2e0
Fetched 268435460 0b 001101 00001 00001 11110 01011 100000
Decoding: op -> ORI
Instruction decoded.
OR 0x8f01f2e0 = 0x8f010000 | 0xf2e0
0: 0x0  0x8f01f2e0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c032000
Fetched 268435464 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac610000
Fetched 268435468 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 8f01f2e0Writing @0x20000000 to   segment @ offset 0x20000000  0x8f01f2e0
 as 8f01f2e0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x84640000
Fetched 268435472 0b 100001 00011 00100 00000 00000 000000
Decoding: op -> LH
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x8f01f2e0
Loading 2 @536870912: 8f010000 as ffff8f01
0: 0x0  0x8f01f2e0  0x0  0x20000000  0xffff8f01  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x3c06ffff
Fetched 268435476 0b 001111 00000 00110 11111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 4294901760
0: 0x0  0x8f01f2e0  0x0  0x20000000  0xffff8f01  0x0  0xffff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x34c68f01
Fetched 268435480 0b 001101 00110 00110 10001 11100 000001
Decoding: op -> ORI
Instruction decoded.
OR 0xffff8f01 = 0xffff0000 | 0x8f01
0: 0x0  0x8f01f2e0  0x0  0x20000000  0xffff8f01  0x0  0xffff8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x10860002
Fetched 268435484 0b 000100 00100 00110 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435488 -> 268435488 + 00000000000000000000000000001000 = 268435496
0: 0x0  0x8f01f2e0  0x0  0x20000000  0xffff8f01  0x0  0xffff8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0xffff8f01  0x0  0xffff8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0xffff8f01  0x0  0xffff8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x8
Fetched 268435500 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0xffff8f01  0x0  0xffff8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lh8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x84220000
Loading instruction to memory: 10000008 0b 100001 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x84220000
Fetched 268435460 0b 100001 00001 00010 00000 00000 000000
Decoding: op -> LH
Instruction decoded.
Reading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lh9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c031000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00010 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x84620002
Loading instruction to memory: 1000000c 0b 100001 00011 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x21202
Loading instruction to memory: 10000014 0b 000000 00000 00010 00010 01000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c031000
Fetched 268435460 0b 001111 00000 00011 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x7f010000  0x0  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x84620002
Fetched 268435464 0b 100001 00011 00010 00000 00000 000010
Decoding: op -> LH
Instruction decoded.
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Loading 2 @268435458: 7f01 as 7f01
0: 0x0  0x7f010000  0x7f01  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7f010000  0x7f01  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x21202
Fetched 268435472 0b 000000 00000 00010 00010 01000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000001111111 = 00000000000000000111111100000001 >> 8
0: 0x0  0x7f010000  0x7f  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 127
Hello, Starting the simulator
Opening file tests/bin/lhu10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c031000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00010 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x34631220
Loading instruction to memory: 1000000c 0b 001101 00011 00011 00010 01000 100000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x94620002
Loading instruction to memory: 10000010 0b 100101 00011 00010 00000 00000 000010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c031000
Fetched 268435460 0b 001111 00000 00011 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x7f010000  0x0  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x34631220
Fetched 268435464 0b 001101 00011 00011 00010 01000 100000
Decoding: op -> ORI
Instruction decoded.
OR 0x10001220 = 0x10000000 | 0x1220
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x94620002
Fetched 268435468 0b 100101 00011 00010 00000 00000 000010
Decoding: op -> LHU
Instruction decoded.
Reading @0x10001220 from segment @ offset 0x10000000  0x0
Loading 2 @268440098: 0 as 0
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x0  0x10001220  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lhu11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033000
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x94620002
Loading instruction to memory: 10000008 0b 100101 00011 00010 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033000
Fetched 268435456 0b 001111 00000 00011 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x0  0x0  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x94620002
Fetched 268435460 0b 100101 00011 00010 00000 00000 000010
Decoding: op -> LHU
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Loading 2 @805306370: 61 as 61
0: 0x0  0x0  0x61  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x61  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x61  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 97
Hello, Starting the simulator
Opening file tests/bin/lhu12.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033000
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x94620001
Loading instruction to memory: 10000008 0b 100101 00011 00010 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033000
Fetched 268435456 0b 001111 00000 00011 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x0  0x0  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x94620001
Fetched 268435460 0b 100101 00011 00010 00000 00000 000001
Decoding: op -> LHU
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lhu13.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033000
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x94620002
Loading instruction to memory: 10000008 0b 100101 00011 00010 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033000
Fetched 268435456 0b 001111 00000 00011 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x0  0x0  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x94620002
Fetched 268435460 0b 100101 00011 00010 00000 00000 000010
Decoding: op -> LHU
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: ffffffff
 0xffffffff
Loading 2 @805306370: ffff as ffff
0: 0x0  0x0  0xffff  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffff  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffff  0x30000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/lhu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x94620000
Loading instruction to memory: 10000010 0b 100101 00011 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x94620000
Fetched 268435468 0b 100101 00011 00010 00000 00000 000000
Decoding: op -> LHU
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f010000
Loading 2 @536870912: 7f010000 as 7f01
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/lhu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x94620000
Loading instruction to memory: 10000010 0b 100101 00011 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x21202
Loading instruction to memory: 10000018 0b 000000 00000 00010 00010 01000 000010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x94620000
Fetched 268435468 0b 100101 00011 00010 00000 00000 000000
Decoding: op -> LHU
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f010000
Loading 2 @536870912: 7f010000 as 7f01
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7f010000  0x7f01  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x21202
Fetched 268435476 0b 000000 00000 00010 00010 01000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000001111111 = 00000000000000000111111100000001 >> 8
0: 0x0  0x7f010000  0x7f  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 127
Hello, Starting the simulator
Opening file tests/bin/lhu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34217123
Loading instruction to memory: 10000008 0b 001101 00001 00001 01110 00100 100011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 10000010 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x94620002
Loading instruction to memory: 10000014 0b 100101 00011 00010 00000 00000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34217123
Fetched 268435460 0b 001101 00001 00001 01110 00100 100011
Decoding: op -> ORI
Instruction decoded.
OR 0x7f017123 = 0x7f010000 | 0x7123
0: 0x0  0x7f017123  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c032000
Fetched 268435464 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac610000
Fetched 268435468 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f017123Writing @0x20000000 to   segment @ offset 0x20000000  0x7f017123
 as 7f017123
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x94620002
Fetched 268435472 0b 100101 00011 00010 00000 00000 000010
Decoding: op -> LHU
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f017123
Loading 2 @536870914: 7123 as 7123
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 35
Hello, Starting the simulator
Opening file tests/bin/lhu4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34217123
Loading instruction to memory: 10000008 0b 001101 00001 00001 01110 00100 100011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 10000010 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x94620002
Loading instruction to memory: 10000014 0b 100101 00011 00010 00000 00000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x21202
Loading instruction to memory: 1000001c 0b 000000 00000 00010 00010 01000 000010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34217123
Fetched 268435460 0b 001101 00001 00001 01110 00100 100011
Decoding: op -> ORI
Instruction decoded.
OR 0x7f017123 = 0x7f010000 | 0x7123
0: 0x0  0x7f017123  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c032000
Fetched 268435464 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac610000
Fetched 268435468 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f017123Writing @0x20000000 to   segment @ offset 0x20000000  0x7f017123
 as 7f017123
0: 0x0  0x7f017123  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x94620002
Fetched 268435472 0b 100101 00011 00010 00000 00000 000010
Decoding: op -> LHU
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x7f017123
Loading 2 @536870914: 7123 as 7123
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7f017123  0x7123  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x21202
Fetched 268435480 0b 000000 00000 00010 00010 01000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000001110001 = 00000000000000000111000100100011 >> 8
0: 0x0  0x7f017123  0x71  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x71  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f017123  0x71  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 113
Hello, Starting the simulator
Opening file tests/bin/lhu5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x94620001
Loading instruction to memory: 10000010 0b 100101 00011 00010 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x94620001
Fetched 268435468 0b 100101 00011 00010 00000 00000 000001
Decoding: op -> LHU
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lhu6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 1000000c 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x94620003
Loading instruction to memory: 10000010 0b 100101 00011 00010 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c032000
Fetched 268435460 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac610000
Fetched 268435464 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 7f010000Writing @0x20000000 to   segment @ offset 0x20000000  0x7f010000
 as 7f010000
0: 0x0  0x7f010000  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x94620003
Fetched 268435468 0b 100101 00011 00010 00000 00000 000011
Decoding: op -> LHU
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lhu7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 10001 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421f2e0
Loading instruction to memory: 10000008 0b 001101 00001 00001 11110 01011 100000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c032000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 00100 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac610000
Loading instruction to memory: 10000010 0b 101011 00011 00001 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x94640000
Loading instruction to memory: 10000014 0b 100101 00011 00100 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x34c68f01
Loading instruction to memory: 10000018 0b 001101 00110 00110 10001 11100 000001
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x10860002
Loading instruction to memory: 1000001c 0b 000100 00100 00110 00000 00000 000010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x20420002
Loading instruction to memory: 10000024 0b 001000 00010 00010 00000 00000 000010
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018f01
Fetched 268435456 0b 001111 00000 00001 10001 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2399207424
0: 0x0  0x8f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421f2e0
Fetched 268435460 0b 001101 00001 00001 11110 01011 100000
Decoding: op -> ORI
Instruction decoded.
OR 0x8f01f2e0 = 0x8f010000 | 0xf2e0
0: 0x0  0x8f01f2e0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c032000
Fetched 268435464 0b 001111 00000 00011 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac610000
Fetched 268435468 0b 101011 00011 00001 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 8f01f2e0Writing @0x20000000 to   segment @ offset 0x20000000  0x8f01f2e0
 as 8f01f2e0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x94640000
Fetched 268435472 0b 100101 00011 00100 00000 00000 000000
Decoding: op -> LHU
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x8f01f2e0
Loading 2 @536870912: 8f010000 as 8f01
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x8f01  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x34c68f01
Fetched 268435476 0b 001101 00110 00110 10001 11100 000001
Decoding: op -> ORI
Instruction decoded.
OR 0x8f01 = 0x0 | 0x8f01
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x8f01  0x0  0x8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x10860002
Fetched 268435480 0b 000100 00100 00110 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435484 -> 268435484 + 00000000000000000000000000001000 = 268435492
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x8f01  0x0  0x8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x0
Fetched 268435484 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x8f01  0x0  0x8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x8f01  0x0  0x8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8f01f2e0  0x0  0x20000000  0x8f01  0x0  0x8f01  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lhu8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x94220000
Loading instruction to memory: 10000008 0b 100101 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x94220000
Fetched 268435460 0b 100101 00001 00010 00000 00000 000000
Decoding: op -> LHU
Instruction decoded.
Reading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lhu9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017f01
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11100 000001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c031000
Loading instruction to memory: 10000008 0b 001111 00000 00011 00010 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x94620002
Loading instruction to memory: 1000000c 0b 100101 00011 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x21202
Loading instruction to memory: 10000014 0b 000000 00000 00010 00010 01000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Fetched 268435456 0b 001111 00000 00001 01111 11100 000001
Decoding: op -> LUI
Instruction decoded.
LUI 2130771968
0: 0x0  0x7f010000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c031000
Fetched 268435460 0b 001111 00000 00011 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x7f010000  0x0  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x94620002
Fetched 268435464 0b 100101 00011 00010 00000 00000 000010
Decoding: op -> LHU
Instruction decoded.
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017f01
Loading 2 @268435458: 7f01 as 7f01
0: 0x0  0x7f010000  0x7f01  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7f010000  0x7f01  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x21202
Fetched 268435472 0b 000000 00000 00010 00010 01000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000001111111 = 00000000000000000111111100000001 >> 8
0: 0x0  0x7f010000  0x7f  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7f010000  0x7f  0x10000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 127
Hello, Starting the simulator
Opening file tests/bin/lui1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c028000
Loading instruction to memory: 10000004 0b 001111 00000 00010 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x40102a
Loading instruction to memory: 10000008 0b 000000 00010 00000 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c028000
Fetched 268435456 0b 001111 00000 00010 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x40102a
Fetched 268435460 0b 000000 00010 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = -2147483648 < 0
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/lui2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c027000
Loading instruction to memory: 10000004 0b 001111 00000 00010 01110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x40102a
Loading instruction to memory: 10000008 0b 000000 00010 00000 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c027000
Fetched 268435456 0b 001111 00000 00010 01110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 1879048192
0: 0x0  0x0  0x70000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x40102a
Fetched 268435460 0b 000000 00010 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 1879048192 < 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lui3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c021fff
Loading instruction to memory: 10000004 0b 001111 00000 00010 00011 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x40102a
Loading instruction to memory: 10000008 0b 000000 00010 00000 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c021fff
Fetched 268435456 0b 001111 00000 00010 00011 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 536805376
0: 0x0  0x0  0x1fff0000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x40102a
Fetched 268435460 0b 000000 00010 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 536805376 < 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lw10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c02fffe
Loading instruction to memory: 10000008 0b 100011 00000 00010 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c02fffe
Fetched 268435460 0b 100011 00000 00010 11111 11111 111110
Decoding: op -> LW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lw11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20231234
Loading instruction to memory: 10000008 0b 001000 00001 00011 00010 01000 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac23fffc
Loading instruction to memory: 1000000c 0b 101011 00001 00011 11111 11111 111100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c22fffc
Loading instruction to memory: 10000010 0b 100011 00001 00010 11111 11111 111100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20231234
Fetched 268435460 0b 001000 00001 00011 00010 01000 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 603984436 = 603979776 + 4660
0: 0x0  0x24000000  0x0  0x24001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac23fffc
Fetched 268435464 0b 101011 00001 00011 11111 11111 111100
Decoding: op -> SW
Instruction decoded.
MasterReading @0x23fffffc from segment @ offset 0x20000000  0x0
Storing 4 @603979772: 24001234Writing @0x23fffffc to   segment @ offset 0x20000000  0x24001234
 as 24001234
0: 0x0  0x24000000  0x0  0x24001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8c22fffc
Fetched 268435468 0b 100011 00001 00010 11111 11111 111100
Decoding: op -> LW
Instruction decoded.
Reading @0x23fffffc from segment @ offset 0x20000000  0x24001234
Loading 4 @603979772: 24001234 as 24001234
0: 0x0  0x24000000  0x24001234  0x24001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x24001234  0x24001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x24001234  0x24001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 52
Hello, Starting the simulator
Opening file tests/bin/lw12.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011100
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00100 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20237234
Loading instruction to memory: 10000008 0b 001000 00001 00011 01110 01000 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8c22fffc
Loading instruction to memory: 1000000c 0b 100011 00001 00010 11111 11111 111100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011100
Fetched 268435456 0b 001111 00000 00001 00010 00100 000000
Decoding: op -> LUI
Instruction decoded.
LUI 285212672
0: 0x0  0x11000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20237234
Fetched 268435460 0b 001000 00001 00011 01110 01000 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 285241908 = 285212672 + 29236
0: 0x0  0x11000000  0x0  0x11007234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8c22fffc
Fetched 268435464 0b 100011 00001 00010 11111 11111 111100
Decoding: op -> LW
Instruction decoded.
Reading @0x10fffffc from segment @ offset 0x10000000  0x0
Loading 4 @285212668: 0 as 0
0: 0x0  0x11000000  0x0  0x11007234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x11000000  0x0  0x11007234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x11000000  0x0  0x11007234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lw13.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000008 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c220000
Fetched 268435460 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Loading 4 @268435456: 3c011000 as 3c011000
0: 0x0  0x10000000  0x3c011000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0x3c011000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0x3c011000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lw14.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20231234
Loading instruction to memory: 10000008 0b 001000 00001 00011 00010 01000 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000010 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20231234
Fetched 268435460 0b 001000 00001 00011 00010 01000 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 536875572 = 536870912 + 4660
0: 0x0  0x20000000  0x0  0x20001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 20001234Writing @0x20000000 to   segment @ offset 0x20000000  0x20001234
 as 20001234
0: 0x0  0x20000000  0x0  0x20001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8c220000
Fetched 268435468 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x20001234
Loading 4 @536870912: 20001234 as 20001234
0: 0x0  0x20000000  0x20001234  0x20001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x20001234  0x20001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x20001234  0x20001234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 52
Hello, Starting the simulator
Opening file tests/bin/lw15.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c020002
Loading instruction to memory: 10000008 0b 100011 00000 00010 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c020002
Fetched 268435460 0b 100011 00000 00010 00000 00000 000010
Decoding: op -> LW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lw16.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c010400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00000 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c020002
Loading instruction to memory: 10000008 0b 100011 00000 00010 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c010400
Fetched 268435456 0b 001111 00000 00001 00000 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 67108864
0: 0x0  0x4000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c020002
Fetched 268435460 0b 100011 00000 00010 00000 00000 000010
Decoding: op -> LW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lw1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x206300f4
Loading instruction to memory: 10000008 0b 001000 00011 00011 00000 00011 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0230003
Loading instruction to memory: 1000000c 0b 101000 00001 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000010 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x206300f4
Fetched 268435460 0b 001000 00011 00011 00000 00011 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 244 = 0 + 244
0: 0x0  0x20000000  0x0  0xf4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0230003
Fetched 268435464 0b 101000 00001 00011 00000 00000 000011
Decoding: op -> SB
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 1 @536870915: f4Writing @0x20000000 to   segment @ offset 0x20000000  0xf4
 as f4
0: 0x0  0x20000000  0x0  0xf4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8c220000
Fetched 268435468 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0xf4
Loading 4 @536870912: f4 as f4
0: 0x0  0x20000000  0xf4  0xf4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xf4  0xf4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xf4  0xf4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 244
Hello, Starting the simulator
Opening file tests/bin/lw2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x206300f4
Loading instruction to memory: 10000008 0b 001000 00011 00011 00000 00011 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0230003
Loading instruction to memory: 1000000c 0b 101000 00001 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c220001
Loading instruction to memory: 10000010 0b 100011 00001 00010 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x206300f4
Fetched 268435460 0b 001000 00011 00011 00000 00011 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 244 = 0 + 244
0: 0x0  0x20000000  0x0  0xf4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0230003
Fetched 268435464 0b 101000 00001 00011 00000 00000 000011
Decoding: op -> SB
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 1 @536870915: f4Writing @0x20000000 to   segment @ offset 0x20000000  0xf4
 as f4
0: 0x0  0x20000000  0x0  0xf4  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8c220001
Fetched 268435468 0b 100011 00001 00010 00000 00000 000001
Decoding: op -> LW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lw3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000008 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c220000
Fetched 268435460 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x0
Loading 4 @536870912: 0 as 0
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lw4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000008 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c220000
Fetched 268435460 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lw5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000008 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c220000
Fetched 268435460 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Loading 4 @805306368: 61 as 61
0: 0x0  0x30000000  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000000  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000000  0x61  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 97
Hello, Starting the simulator
Opening file tests/bin/lw6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8c220004
Loading instruction to memory: 10000008 0b 100011 00001 00010 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8c220004
Fetched 268435460 0b 100011 00001 00010 00000 00000 000100
Decoding: op -> LW
Instruction decoded.
Reading @0x30000004 from segment @ offset 0x30000004 Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/lw7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2063fada
Loading instruction to memory: 10000004 0b 001000 00011 00011 11111 01011 011010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000008 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 1000000c 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2063fada
Fetched 268435456 0b 001000 00011 00011 11111 01011 011010
Decoding: op -> ADDI
Instruction decoded.
ADD 4294965978 = 0 + -1318
0: 0x0  0x0  0x0  0xfffffada  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3c011000
Fetched 268435460 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0xfffffada  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8c220000
Fetched 268435464 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x10000000 from segment @ offset 0x10000000  0x2063fada
Loading 4 @268435456: 2063fada as 2063fada
0: 0x0  0x10000000  0x2063fada  0xfffffada  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0x2063fada  0xfffffada  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10000000  0x2063fada  0xfffffada  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 218
Hello, Starting the simulator
Opening file tests/bin/lw8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20217ada
Loading instruction to memory: 10000008 0b 001000 00001 00001 01111 01011 011010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8c220002
Loading instruction to memory: 1000000c 0b 100011 00001 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20217ada
Fetched 268435460 0b 001000 00001 00001 01111 01011 011010
Decoding: op -> ADDI
Instruction decoded.
ADD 268466906 = 268435456 + 31450
0: 0x0  0x10007ada  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8c220002
Fetched 268435464 0b 100011 00001 00010 00000 00000 000010
Decoding: op -> LW
Instruction decoded.
Reading @0x10007adc from segment @ offset 0x10000000  0x0
Loading 4 @268466908: 0 as 0
0: 0x0  0x10007ada  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10007ada  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x10007ada  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/lw9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20217ada
Loading instruction to memory: 10000008 0b 001000 00001 00001 01111 01011 011010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8c020002
Loading instruction to memory: 1000000c 0b 100011 00000 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20217ada
Fetched 268435460 0b 001000 00001 00001 01111 01011 011010
Decoding: op -> ADDI
Instruction decoded.
ADD 268466906 = 268435456 + 31450
0: 0x0  0x10007ada  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8c020002
Fetched 268435464 0b 100011 00000 00010 00000 00000 000010
Decoding: op -> LW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/mfhi1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c038000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 10000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x230019
Loading instruction to memory: 10000010 0b 000000 00001 00011 00000 00000 011001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2012
Loading instruction to memory: 10000014 0b 000000 00000 00000 00100 00000 010010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x800011
Loading instruction to memory: 10000018 0b 000000 00100 00000 00000 00000 010001
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x2810
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00101 00000 010000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0xa31022
Loading instruction to memory: 10000020 0b 000000 00101 00011 00010 00000 100010
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c038000
Fetched 268435464 0b 001111 00000 00011 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x230019
Fetched 268435468 0b 000000 00001 00011 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 4611686016279904256 = 2147483647 * 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x2012
Fetched 268435472 0b 000000 00000 00000 00100 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r4 <- LO = 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x800011
Fetched 268435476 0b 000000 00100 00000 00000 00000 010001
Decoding: op, func -> MTHI
Instruction decoded.
MTHI HI <- r4 = 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x2810
Fetched 268435480 0b 000000 00000 00000 00101 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r5 <- HI = 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x80000000  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0xa31022
Fetched 268435484 0b 000000 00101 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 0 = -2147483648 - -2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x80000000  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x80000000  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x80000000  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/mfhi2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c038000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 10000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x230019
Loading instruction to memory: 10000010 0b 000000 00001 00011 00000 00000 011001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 10000014 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x3c053fff
Loading instruction to memory: 10000018 0b 001111 00000 00101 00111 11111 111111
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x34a50fff
Loading instruction to memory: 1000001c 0b 001101 00101 00101 00001 11111 111111
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x851022
Loading instruction to memory: 10000020 0b 000000 00100 00101 00010 00000 100010
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c038000
Fetched 268435464 0b 001111 00000 00011 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x230019
Fetched 268435468 0b 000000 00001 00011 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 4611686016279904256 = 2147483647 * 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x2010
Fetched 268435472 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 1073741823
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x3c053fff
Fetched 268435476 0b 001111 00000 00101 00111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 1073676288
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x3fff0000  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x34a50fff
Fetched 268435480 0b 001101 00101 00101 00001 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x3fff0fff = 0x3fff0000 | 0xfff
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x3fff0fff  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x851022
Fetched 268435484 0b 000000 00100 00101 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 61440 = 1073741823 - 1073680383
0: 0x0  0x7fffffff  0xf000  0x80000000  0x3fffffff  0x3fff0fff  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0xf000  0x80000000  0x3fffffff  0x3fff0fff  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0xf000  0x80000000  0x3fffffff  0x3fff0fff  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/mfhi3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010003
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030005
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x200011
Loading instruction to memory: 1000000c 0b 000000 00001 00000 00000 00000 010001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x232820
Loading instruction to memory: 10000010 0b 000000 00001 00011 00101 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3010
Loading instruction to memory: 10000014 0b 000000 00000 00000 00110 00000 010000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x600011
Loading instruction to memory: 10000018 0b 000000 00011 00000 00000 00000 010001
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x1010
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00010 00000 010000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x461020
Loading instruction to memory: 10000020 0b 000000 00010 00110 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x451023
Loading instruction to memory: 10000024 0b 000000 00010 00101 00010 00000 100011
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010003
Fetched 268435456 0b 001000 00000 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030005
Fetched 268435460 0b 001000 00000 00011 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x3  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x200011
Fetched 268435464 0b 000000 00001 00000 00000 00000 010001
Decoding: op, func -> MTHI
Instruction decoded.
MTHI HI <- r1 = 3
0: 0x0  0x3  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x232820
Fetched 268435468 0b 000000 00001 00011 00101 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 3 + 5
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3010
Fetched 268435472 0b 000000 00000 00000 00110 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r6 <- HI = 3
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x600011
Fetched 268435476 0b 000000 00011 00000 00000 00000 010001
Decoding: op, func -> MTHI
Instruction decoded.
MTHI HI <- r3 = 5
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x1010
Fetched 268435480 0b 000000 00000 00000 00010 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r2 <- HI = 5
0: 0x0  0x3  0x5  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x461020
Fetched 268435484 0b 000000 00010 00110 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 5 + 3
0: 0x0  0x3  0x8  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x451023
Fetched 268435488 0b 000000 00010 00101 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 0 = 8 - 8
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/mflo1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c038000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 10000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x230019
Loading instruction to memory: 10000010 0b 000000 00001 00011 00000 00000 011001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2012
Loading instruction to memory: 10000014 0b 000000 00000 00000 00100 00000 010010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x831022
Loading instruction to memory: 10000018 0b 000000 00100 00011 00010 00000 100010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c038000
Fetched 268435464 0b 001111 00000 00011 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x230019
Fetched 268435468 0b 000000 00001 00011 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 4611686016279904256 = 2147483647 * 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x2012
Fetched 268435472 0b 000000 00000 00000 00100 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r4 <- LO = 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x831022
Fetched 268435476 0b 000000 00100 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 0 = -2147483648 - -2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x80000000  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/mflo2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c038000
Loading instruction to memory: 1000000c 0b 001111 00000 00011 10000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x230019
Loading instruction to memory: 10000010 0b 000000 00001 00011 00000 00000 011001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 10000014 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x800013
Loading instruction to memory: 10000018 0b 000000 00100 00000 00000 00000 010011
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x2812
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00101 00000 010010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x3c063fff
Loading instruction to memory: 10000020 0b 001111 00000 00110 00111 11111 111111
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x34c60fff
Loading instruction to memory: 10000024 0b 001101 00110 00110 00001 11111 111111
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0xc51022
Loading instruction to memory: 10000028 0b 000000 00110 00101 00010 00000 100010
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000030
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c038000
Fetched 268435464 0b 001111 00000 00011 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x230019
Fetched 268435468 0b 000000 00001 00011 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 4611686016279904256 = 2147483647 * 2147483648
0: 0x0  0x7fffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x2010
Fetched 268435472 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 1073741823
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x800013
Fetched 268435476 0b 000000 00100 00000 00000 00000 010011
Decoding: op, func -> MTLO
Instruction decoded.
MTLO LO <- r4 = 1073741823
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x2812
Fetched 268435480 0b 000000 00000 00000 00101 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r5 <- LO = 1073741823
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x3fffffff  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x3c063fff
Fetched 268435484 0b 001111 00000 00110 00111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 1073676288
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x3fffffff  0x3fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x34c60fff
Fetched 268435488 0b 001101 00110 00110 00001 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x3fff0fff = 0x3fff0000 | 0xfff
0: 0x0  0x7fffffff  0x0  0x80000000  0x3fffffff  0x3fffffff  0x3fff0fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0xc51022
Fetched 268435492 0b 000000 00110 00101 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB -61440 = 1073680383 - 1073741823
0: 0x0  0x7fffffff  0xffff1000  0x80000000  0x3fffffff  0x3fffffff  0x3fff0fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0xffff1000  0x80000000  0x3fffffff  0x3fffffff  0x3fff0fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 10
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x8
Fetched 268435500 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0xffff1000  0x80000000  0x3fffffff  0x3fffffff  0x3fff0fff  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/mflo3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010003
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030005
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x200013
Loading instruction to memory: 1000000c 0b 000000 00001 00000 00000 00000 010011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x232820
Loading instruction to memory: 10000010 0b 000000 00001 00011 00101 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3012
Loading instruction to memory: 10000014 0b 000000 00000 00000 00110 00000 010010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x600013
Loading instruction to memory: 10000018 0b 000000 00011 00000 00000 00000 010011
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x461020
Loading instruction to memory: 10000020 0b 000000 00010 00110 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x451023
Loading instruction to memory: 10000024 0b 000000 00010 00101 00010 00000 100011
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010003
Fetched 268435456 0b 001000 00000 00001 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0x3  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030005
Fetched 268435460 0b 001000 00000 00011 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x3  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x200013
Fetched 268435464 0b 000000 00001 00000 00000 00000 010011
Decoding: op, func -> MTLO
Instruction decoded.
MTLO LO <- r1 = 3
0: 0x0  0x3  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x232820
Fetched 268435468 0b 000000 00001 00011 00101 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 3 + 5
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3012
Fetched 268435472 0b 000000 00000 00000 00110 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r6 <- LO = 3
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x600013
Fetched 268435476 0b 000000 00011 00000 00000 00000 010011
Decoding: op, func -> MTLO
Instruction decoded.
MTLO LO <- r3 = 5
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x1012
Fetched 268435480 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 5
0: 0x0  0x3  0x5  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x461020
Fetched 268435484 0b 000000 00010 00110 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 8 = 5 + 3
0: 0x0  0x3  0x8  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x451023
Fetched 268435488 0b 000000 00010 00101 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 0 = 8 - 8
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3  0x0  0x5  0x0  0x8  0x3  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/mthi1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2004000f
Loading instruction to memory: 10000004 0b 001000 00000 00100 00000 00000 001111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x800011
Loading instruction to memory: 10000008 0b 000000 00100 00000 00000 00000 010001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2810
Loading instruction to memory: 10000010 0b 000000 00000 00000 00101 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x5102a
Loading instruction to memory: 10000014 0b 000000 00000 00101 00010 00000 101010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2004000f
Fetched 268435456 0b 001000 00000 00100 00000 00000 001111
Decoding: op -> ADDI
Instruction decoded.
ADD 15 = 0 + 15
0: 0x0  0x0  0x0  0x0  0xf  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x800011
Fetched 268435460 0b 000000 00100 00000 00000 00000 010001
Decoding: op, func -> MTHI
Instruction decoded.
MTHI HI <- r4 = 15
0: 0x0  0x0  0x0  0x0  0xf  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0xf  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2810
Fetched 268435468 0b 000000 00000 00000 00101 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r5 <- HI = 15
0: 0x0  0x0  0x0  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x5102a
Fetched 268435472 0b 000000 00000 00101 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 0 < 15
0: 0x0  0x0  0x1  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/mthi2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2004fffc
Loading instruction to memory: 10000004 0b 001000 00000 00100 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x800011
Loading instruction to memory: 10000008 0b 000000 00100 00000 00000 00000 010001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2810
Loading instruction to memory: 10000010 0b 000000 00000 00000 00101 00000 010000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0xa0102a
Loading instruction to memory: 10000014 0b 000000 00101 00000 00010 00000 101010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2004fffc
Fetched 268435456 0b 001000 00000 00100 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0x0  0x0  0x0  0xfffffffc  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x800011
Fetched 268435460 0b 000000 00100 00000 00000 00000 010001
Decoding: op, func -> MTHI
Instruction decoded.
MTHI HI <- r4 = 4294967292
0: 0x0  0x0  0x0  0x0  0xfffffffc  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0xfffffffc  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2810
Fetched 268435468 0b 000000 00000 00000 00101 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r5 <- HI = 4294967292
0: 0x0  0x0  0x0  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0xa0102a
Fetched 268435472 0b 000000 00101 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = -4 < 0
0: 0x0  0x0  0x1  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/mtlo1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2004000f
Loading instruction to memory: 10000004 0b 001000 00000 00100 00000 00000 001111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x800013
Loading instruction to memory: 10000008 0b 000000 00100 00000 00000 00000 010011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2812
Loading instruction to memory: 10000010 0b 000000 00000 00000 00101 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x5102a
Loading instruction to memory: 10000014 0b 000000 00000 00101 00010 00000 101010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2004000f
Fetched 268435456 0b 001000 00000 00100 00000 00000 001111
Decoding: op -> ADDI
Instruction decoded.
ADD 15 = 0 + 15
0: 0x0  0x0  0x0  0x0  0xf  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x800013
Fetched 268435460 0b 000000 00100 00000 00000 00000 010011
Decoding: op, func -> MTLO
Instruction decoded.
MTLO LO <- r4 = 15
0: 0x0  0x0  0x0  0x0  0xf  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0xf  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2812
Fetched 268435468 0b 000000 00000 00000 00101 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r5 <- LO = 15
0: 0x0  0x0  0x0  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x5102a
Fetched 268435472 0b 000000 00000 00101 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 0 < 15
0: 0x0  0x0  0x1  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xf  0xf  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/mtlo2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2004fffc
Loading instruction to memory: 10000004 0b 001000 00000 00100 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x800013
Loading instruction to memory: 10000008 0b 000000 00100 00000 00000 00000 010011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2812
Loading instruction to memory: 10000010 0b 000000 00000 00000 00101 00000 010010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0xa0102a
Loading instruction to memory: 10000014 0b 000000 00101 00000 00010 00000 101010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2004fffc
Fetched 268435456 0b 001000 00000 00100 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0x0  0x0  0x0  0xfffffffc  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x800013
Fetched 268435460 0b 000000 00100 00000 00000 00000 010011
Decoding: op, func -> MTLO
Instruction decoded.
MTLO LO <- r4 = 4294967292
0: 0x0  0x0  0x0  0x0  0xfffffffc  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x0  0x0  0xfffffffc  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2812
Fetched 268435468 0b 000000 00000 00000 00101 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r5 <- LO = 4294967292
0: 0x0  0x0  0x0  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0xa0102a
Fetched 268435472 0b 000000 00101 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = -4 < 0
0: 0x0  0x0  0x1  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0xfffffffc  0xfffffffc  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/mult1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030005
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x230018
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00000 00000 011000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000018 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030005
Fetched 268435460 0b 001000 00000 00011 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x230018
Fetched 268435464 0b 000000 00001 00011 00000 00000 011000
Decoding: op, func -> MULT
Instruction decoded.
MULT 20 = 4 u* 5
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x1012
Fetched 268435476 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 20
0: 0x0  0x4  0x14  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x14  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x14  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 20
Hello, Starting the simulator
Opening file tests/bin/mult2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20037fff
Loading instruction to memory: 10000008 0b 001000 00000 00011 01111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x230018
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00000 00000 011000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 10000018 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x441020
Loading instruction to memory: 10000020 0b 000000 00010 00100 00010 00000 100000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20037fff
Fetched 268435460 0b 001000 00000 00011 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x7fff0000  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x230018
Fetched 268435464 0b 000000 00001 00011 00000 00000 011000
Decoding: op, func -> MULT
Instruction decoded.
MULT 70364449275904 = 2147418112 u* 32767
0: 0x0  0x7fff0000  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff0000  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff0000  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x2010
Fetched 268435476 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 16383
0: 0x0  0x7fff0000  0x0  0x7fff  0x3fff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x1012
Fetched 268435480 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 65536
0: 0x0  0x7fff0000  0x10000  0x7fff  0x3fff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x441020
Fetched 268435484 0b 000000 00010 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 81919 = 65536 + 16383
0: 0x0  0x7fff0000  0x13fff  0x7fff  0x3fff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff0000  0x13fff  0x7fff  0x3fff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff0000  0x13fff  0x7fff  0x3fff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/mult3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2003ffff
Loading instruction to memory: 10000004 0b 001000 00000 00011 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2042ffff
Loading instruction to memory: 10000008 0b 001000 00010 00010 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x430018
Loading instruction to memory: 1000000c 0b 000000 00010 00011 00000 00000 011000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000018 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2003ffff
Fetched 268435456 0b 001000 00000 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2042ffff
Fetched 268435460 0b 001000 00010 00010 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x0  0xffffffff  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x430018
Fetched 268435464 0b 000000 00010 00011 00000 00000 011000
Decoding: op, func -> MULT
Instruction decoded.
MULT 1 = -1 u* -1
0: 0x0  0x0  0xffffffff  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0xffffffff  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0xffffffff  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x1012
Fetched 268435476 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 1
0: 0x0  0x0  0x1  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/mult4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001ffff
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20420003
Loading instruction to memory: 10000008 0b 001000 00010 00010 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x410018
Loading instruction to memory: 1000000c 0b 000000 00010 00001 00000 00000 011000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000018 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001ffff
Fetched 268435456 0b 001000 00000 00001 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20420003
Fetched 268435460 0b 001000 00010 00010 00000 00000 000011
Decoding: op -> ADDI
Instruction decoded.
ADD 3 = 0 + 3
0: 0x0  0xffffffff  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x410018
Fetched 268435464 0b 000000 00010 00001 00000 00000 011000
Decoding: op, func -> MULT
Instruction decoded.
MULT -3 = 3 u* -1
0: 0x0  0xffffffff  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x3  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x1012
Fetched 268435476 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 4294967293
0: 0x0  0xffffffff  0xfffffffd  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0xfffffffd  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0xfffffffd  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 253
Hello, Starting the simulator
Opening file tests/bin/mult5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c038000
Loading instruction to memory: 10000004 0b 001111 00000 00011 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2001ffff
Loading instruction to memory: 10000008 0b 001000 00000 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x230018
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00000 00000 011000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000018 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x21702
Loading instruction to memory: 1000001c 0b 000000 00000 00010 00010 11100 000010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c038000
Fetched 268435456 0b 001111 00000 00011 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2001ffff
Fetched 268435460 0b 001000 00000 00001 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0xffffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x230018
Fetched 268435464 0b 000000 00001 00011 00000 00000 011000
Decoding: op, func -> MULT
Instruction decoded.
MULT 2147483648 = -1 u* -2147483648
0: 0x0  0xffffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffff  0x0  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x1012
Fetched 268435476 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 2147483648
0: 0x0  0xffffffff  0x80000000  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x21702
Fetched 268435480 0b 000000 00000 00010 00010 11100 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000000001000 = 10000000000000000000000000000000 >> 28
0: 0x0  0xffffffff  0x8  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0x8  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffff  0x8  0x80000000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 8
Hello, Starting the simulator
Opening file tests/bin/mult6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c048000
Loading instruction to memory: 1000000c 0b 001111 00000 00100 10000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x240018
Loading instruction to memory: 10000010 0b 000000 00001 00100 00000 00000 011000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x4010
Loading instruction to memory: 1000001c 0b 000000 00000 00000 01000 00000 010000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x3812
Loading instruction to memory: 10000020 0b 000000 00000 00000 00111 00000 010010
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x10e40003
Loading instruction to memory: 10000024 0b 000100 00111 00100 00000 00000 000011
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 1000002c 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x3c0ac000
Loading instruction to memory: 10000038 0b 001111 00000 01010 11000 00000 000000
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x10a1023
Loading instruction to memory: 1000003c 0b 000000 01000 01010 00010 00000 100011
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000040 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000044
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c048000
Fetched 268435464 0b 001111 00000 00100 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x240018
Fetched 268435468 0b 000000 00001 00100 00000 00000 011000
Decoding: op, func -> MULT
Instruction decoded.
MULT -4611686016279904256 = 2147483647 u* -2147483648
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x4010
Fetched 268435480 0b 000000 00000 00000 01000 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r8 <- HI = 3221225472
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0xc0000000  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x3812
Fetched 268435484 0b 000000 00000 00000 00111 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r7 <- LO = 2147483648
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x10e40003
Fetched 268435488 0b 000100 00111 00100 00000 00000 000011
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435492 -> 268435492 + 00000000000000000000000000001100 = 268435504
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x0
Fetched 268435504 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 10
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x3c0ac000
Fetched 268435508 0b 001111 00000 01010 11000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 3221225472
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0xc0000000  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 11
=============================================================================
Reading @0x10000038 from segment @ offset 0x10000000  0x10a1023
Fetched 268435512 0b 000000 01000 01010 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 0 = -1073741824 - -1073741824
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0xc0000000  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 12
=============================================================================
Reading @0x1000003c from segment @ offset 0x10000000  0x8
Fetched 268435516 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0xc0000000  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 13
=============================================================================
Reading @0x10000040 from segment @ offset 0x10000000  0x8
Fetched 268435520 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0xc0000000  0x0  0xc0000000  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/mult7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c028000
Loading instruction to memory: 10000004 0b 001111 00000 00010 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x400018
Loading instruction to memory: 10000008 0b 000000 00010 00000 00000 00000 011000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x1810
Loading instruction to memory: 10000014 0b 000000 00000 00000 00011 00000 010000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000018 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c028000
Fetched 268435456 0b 001111 00000 00010 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x400018
Fetched 268435460 0b 000000 00010 00000 00000 00000 011000
Decoding: op, func -> MULT
Instruction decoded.
MULT 0 = -2147483648 u* 0
0: 0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x1810
Fetched 268435472 0b 000000 00000 00000 00011 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r3 <- HI = 0
0: 0x0  0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x1012
Fetched 268435476 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/multu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24010004
Loading instruction to memory: 10000004 0b 001001 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030005
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 000101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x230019
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00000 00000 011001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000018 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24010004
Fetched 268435456 0b 001001 00000 00001 00000 00000 000100
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030005
Fetched 268435460 0b 001001 00000 00011 00000 00000 000101
Decoding: op -> ADDUI
Instruction decoded.
ADDU 5 = 0 + 5
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x230019
Fetched 268435464 0b 000000 00001 00011 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 20 = 4 * 5
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x4  0x0  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x1012
Fetched 268435476 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 20
0: 0x0  0x4  0x14  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x14  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x14  0x5  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 20
Hello, Starting the simulator
Opening file tests/bin/multu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c016fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01101 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24036fff
Loading instruction to memory: 10000008 0b 001001 00000 00011 01101 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x230019
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00000 00000 011001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x2010
Loading instruction to memory: 10000018 0b 000000 00000 00000 00100 00000 010000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x41202
Loading instruction to memory: 1000001c 0b 000000 00000 00100 00010 01000 000010
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c016fff
Fetched 268435456 0b 001111 00000 00001 01101 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 1878982656
0: 0x0  0x6fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24036fff
Fetched 268435460 0b 001001 00000 00011 01101 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 28671 = 0 + 28671
0: 0x0  0x6fff0000  0x0  0x6fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x230019
Fetched 268435464 0b 000000 00001 00011 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 53872311730176 = 1878982656 * 28671
0: 0x0  0x6fff0000  0x0  0x6fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x6fff0000  0x0  0x6fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x6fff0000  0x0  0x6fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x2010
Fetched 268435476 0b 000000 00000 00000 00100 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r4 <- HI = 12543
0: 0x0  0x6fff0000  0x0  0x6fff  0x30ff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x41202
Fetched 268435480 0b 000000 00000 00100 00010 01000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000000110000 = 00000000000000000011000011111111 >> 8
0: 0x0  0x6fff0000  0x30  0x6fff  0x30ff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x6fff0000  0x30  0x6fff  0x30ff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x6fff0000  0x30  0x6fff  0x30ff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 48
Hello, Starting the simulator
Opening file tests/bin/multu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2401ffff
Loading instruction to memory: 10000004 0b 001001 00000 00001 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x10842
Loading instruction to memory: 10000008 0b 000000 00000 00001 00001 00001 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c067fff
Loading instruction to memory: 1000000c 0b 001111 00000 00110 01111 11111 111111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xc12825
Loading instruction to memory: 10000010 0b 000000 00110 00001 00101 00000 100101
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x4a0000c
Loading instruction to memory: 10000014 0b 000001 00101 00000 00000 00000 001100
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0xa50019
Loading instruction to memory: 1000001c 0b 000000 00101 00101 00000 00000 011001
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x4010
Loading instruction to memory: 10000028 0b 000000 00000 00000 01000 00000 010000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x3812
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00111 00000 010010
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000030 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x10e10003
Loading instruction to memory: 10000034 0b 000100 00111 00001 00000 00000 000011
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000038 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 1000003c 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000040 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000044 to   segment @ offset 0x10000000  0x81602
Loading instruction to memory: 10000048 0b 000000 00000 01000 00010 11000 000010
MasterWriting @0x10000048 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000004c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000004c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000050 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000050
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2401ffff
Fetched 268435456 0b 001001 00000 00001 11111 11111 111111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967295 = 0 + 4294967295
0: 0x0  0xffffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x10842
Fetched 268435460 0b 000000 00000 00001 00001 00001 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 01111111111111111111111111111111 = 11111111111111111111111111111111 >> 1
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c067fff
Fetched 268435464 0b 001111 00000 00110 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x7fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xc12825
Fetched 268435468 0b 000000 00110 00001 00101 00000 100101
Decoding: op, func -> OR
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0x7fffffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x4a0000c
Fetched 268435472 0b 000001 00101 00000 00000 00000 001100
Decoding: op, rt -> BLTZ
Instruction decoded.
JB not taken
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0xa50019
Fetched 268435480 0b 000000 00101 00101 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 4611686014132420609 = 2147483647 * 2147483647
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x0
Fetched 268435484 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x0
Fetched 268435488 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x4010
Fetched 268435492 0b 000000 00000 00000 01000 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r8 <- HI = 1073741823
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x0  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x3812
Fetched 268435496 0b 000000 00000 00000 00111 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r7 <- LO = 1
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 10
=============================================================================
Reading @0x1000002c from segment @ offset 0x10000000  0x20010001
Fetched 268435500 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 11
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x10e10003
Fetched 268435504 0b 000100 00111 00001 00000 00000 000011
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435508 -> 268435508 + 00000000000000000000000000001100 = 268435520
0: 0x0  0x1  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 12
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x0
Fetched 268435508 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 13
=============================================================================
Reading @0x10000040 from segment @ offset 0x10000000  0x0
Fetched 268435520 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x1  0x0  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 14
=============================================================================
Reading @0x10000044 from segment @ offset 0x10000000  0x81602
Fetched 268435524 0b 000000 00000 01000 00010 11000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000000111111 = 00111111111111111111111111111111 >> 24
0: 0x0  0x1  0x3f  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 15
=============================================================================
Reading @0x10000048 from segment @ offset 0x10000000  0x8
Fetched 268435528 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x3f  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 16
=============================================================================
Reading @0x1000004c from segment @ offset 0x10000000  0x8
Fetched 268435532 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x3f  0x0  0x0  0x7fffffff  0x7fff0000  0x1  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 63
Hello, Starting the simulator
Opening file tests/bin/multu4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c027fff
Loading instruction to memory: 10000004 0b 001111 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x400019
Loading instruction to memory: 10000008 0b 000000 00010 00000 00000 00000 011001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x1810
Loading instruction to memory: 10000014 0b 000000 00000 00000 00011 00000 010000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x1012
Loading instruction to memory: 10000018 0b 000000 00000 00000 00010 00000 010010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x431020
Loading instruction to memory: 1000001c 0b 000000 00010 00011 00010 00000 100000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c027fff
Fetched 268435456 0b 001111 00000 00010 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x400019
Fetched 268435460 0b 000000 00010 00000 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 0 = 2147418112 * 0
0: 0x0  0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x0
Fetched 268435464 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x1810
Fetched 268435472 0b 000000 00000 00000 00011 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r3 <- HI = 0
0: 0x0  0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x1012
Fetched 268435476 0b 000000 00000 00000 00010 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r2 <- LO = 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x431020
Fetched 268435480 0b 000000 00010 00011 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 0 = 0 + 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/multu5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3c048000
Loading instruction to memory: 1000000c 0b 001111 00000 00100 10000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x240019
Loading instruction to memory: 10000010 0b 000000 00001 00100 00000 00000 011001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x4010
Loading instruction to memory: 1000001c 0b 000000 00000 00000 01000 00000 010000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x3812
Loading instruction to memory: 10000020 0b 000000 00000 00000 00111 00000 010010
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x10e40003
Loading instruction to memory: 10000024 0b 000100 00111 00100 00000 00000 000011
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 1000002c 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x1000002c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000030 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000030 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000034 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000034 to   segment @ offset 0x10000000  0x3c0a3fff
Loading instruction to memory: 10000038 0b 001111 00000 01010 00111 11111 111111
MasterWriting @0x10000038 to   segment @ offset 0x10000000  0x354affff
Loading instruction to memory: 1000003c 0b 001101 01010 01010 11111 11111 111111
MasterWriting @0x1000003c to   segment @ offset 0x10000000  0x10a1023
Loading instruction to memory: 10000040 0b 000000 01000 01010 00010 00000 100011
MasterWriting @0x10000040 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000044 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000044 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000048 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000048
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3c048000
Fetched 268435464 0b 001111 00000 00100 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x240019
Fetched 268435468 0b 000000 00001 00100 00000 00000 011001
Decoding: op, func -> MULTU
Instruction decoded.
MULTU 4611686016279904256 = 2147483647 * 2147483648
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x0
Fetched 268435476 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x4010
Fetched 268435480 0b 000000 00000 00000 01000 00000 010000
Decoding: op, func -> MFHI
Instruction decoded.
MFHI r8 <- HI = 1073741823
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x0  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x3812
Fetched 268435484 0b 000000 00000 00000 00111 00000 010010
Decoding: op, func -> MFLO
Instruction decoded.
MFLO r7 <- LO = 2147483648
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x10e40003
Fetched 268435488 0b 000100 00111 00100 00000 00000 000011
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435492 -> 268435492 + 00000000000000000000000000001100 = 268435504
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 8
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x0
Fetched 268435492 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 9
=============================================================================
Reading @0x10000030 from segment @ offset 0x10000000  0x0
Fetched 268435504 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 10
=============================================================================
Reading @0x10000034 from segment @ offset 0x10000000  0x3c0a3fff
Fetched 268435508 0b 001111 00000 01010 00111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 1073676288
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x3fff0000  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 11
=============================================================================
Reading @0x10000038 from segment @ offset 0x10000000  0x354affff
Fetched 268435512 0b 001101 01010 01010 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x3fffffff = 0x3fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x3fffffff  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 12
=============================================================================
Reading @0x1000003c from segment @ offset 0x10000000  0x10a1023
Fetched 268435516 0b 000000 01000 01010 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 0 = 1073741823 - 1073741823
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x3fffffff  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 13
=============================================================================
Reading @0x10000040 from segment @ offset 0x10000000  0x8
Fetched 268435520 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x3fffffff  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 14
=============================================================================
Reading @0x10000044 from segment @ offset 0x10000000  0x8
Fetched 268435524 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x0  0x0  0x80000000  0x0  0x0  0x80000000  
8: 0x3fffffff  0x0  0x3fffffff  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/or1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2043ffff
Loading instruction to memory: 10000004 0b 001000 00010 00011 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20043452
Loading instruction to memory: 10000008 0b 001000 00000 00100 00110 10001 010010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x641025
Loading instruction to memory: 1000000c 0b 000000 00011 00100 00010 00000 100101
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2043ffff
Fetched 268435456 0b 001000 00010 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20043452
Fetched 268435460 0b 001000 00000 00100 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x641025
Fetched 268435464 0b 000000 00011 00100 00010 00000 100101
Decoding: op, func -> OR
Instruction decoded.
OR 0xffffffff = 0xffffffff | 0x3452
0: 0x0  0x0  0xffffffff  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffffff  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffffff  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/or2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x601025
Loading instruction to memory: 10000008 0b 000000 00011 00000 00010 00000 100101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x601025
Fetched 268435460 0b 000000 00011 00000 00010 00000 100101
Decoding: op, func -> OR
Instruction decoded.
OR 0x3452 = 0x3452 | 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 82
Hello, Starting the simulator
Opening file tests/bin/or3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20043875
Loading instruction to memory: 10000008 0b 001000 00000 00100 00111 00001 110101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x641025
Loading instruction to memory: 1000000c 0b 000000 00011 00100 00010 00000 100101
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20043875
Fetched 268435460 0b 001000 00000 00100 00111 00001 110101
Decoding: op -> ADDI
Instruction decoded.
ADD 14453 = 0 + 14453
0: 0x0  0x0  0x0  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x641025
Fetched 268435464 0b 000000 00011 00100 00010 00000 100101
Decoding: op, func -> OR
Instruction decoded.
OR 0x3c77 = 0x3452 | 0x3875
0: 0x0  0x0  0x3c77  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3c77  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3c77  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 119
Hello, Starting the simulator
Opening file tests/bin/ori1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3462ffff
Loading instruction to memory: 10000008 0b 001101 00011 00010 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3462ffff
Fetched 268435460 0b 001101 00011 00010 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0xffff = 0x3452 | 0xffff
0: 0x0  0x0  0xffff  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffff  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffff  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/ori2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34620000
Loading instruction to memory: 10000008 0b 001101 00011 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34620000
Fetched 268435460 0b 001101 00011 00010 00000 00000 000000
Decoding: op -> ORI
Instruction decoded.
OR 0x3452 = 0x3452 | 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 82
Hello, Starting the simulator
Opening file tests/bin/ori3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34623875
Loading instruction to memory: 10000008 0b 001101 00011 00010 00111 00001 110101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34623875
Fetched 268435460 0b 001101 00011 00010 00111 00001 110101
Decoding: op -> ORI
Instruction decoded.
OR 0x3c77 = 0x3452 | 0x3875
0: 0x0  0x0  0x3c77  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3c77  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3c77  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 119
Hello, Starting the simulator
Opening file tests/bin/ori4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033452
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34623874
Loading instruction to memory: 10000008 0b 001101 00011 00010 00111 00001 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033452
Fetched 268435456 0b 001111 00000 00011 00110 10001 010010
Decoding: op -> LUI
Instruction decoded.
LUI 877789184
0: 0x0  0x0  0x0  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34623874
Fetched 268435460 0b 001101 00011 00010 00111 00001 110100
Decoding: op -> ORI
Instruction decoded.
OR 0x34523874 = 0x34520000 | 0x3874
0: 0x0  0x0  0x34523874  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x34523874  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x34523874  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 116
Hello, Starting the simulator
Opening file tests/bin/sb10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20630001
Loading instruction to memory: 10000008 0b 001000 00011 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa023ffff
Loading instruction to memory: 1000000c 0b 101000 00001 00011 11111 11111 111111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8022ffff
Loading instruction to memory: 10000010 0b 100000 00001 00010 11111 11111 111111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20630001
Fetched 268435460 0b 001000 00011 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x24000000  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa023ffff
Fetched 268435464 0b 101000 00001 00011 11111 11111 111111
Decoding: op -> SB
Instruction decoded.
MasterReading @0x23fffffc from segment @ offset 0x20000000  0x0
Storing 1 @603979775: 1Writing @0x23fffffc to   segment @ offset 0x20000000  0x1
 as 1
0: 0x0  0x24000000  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8022ffff
Fetched 268435468 0b 100000 00001 00010 11111 11111 111111
Decoding: op -> LB
Instruction decoded.
Reading @0x23fffffc from segment @ offset 0x20000000  0x1
Loading 1 @603979775: 1 as 1
0: 0x0  0x24000000  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x1  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sb11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20630001
Loading instruction to memory: 10000008 0b 001000 00011 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0230001
Loading instruction to memory: 1000000c 0b 101000 00001 00011 00000 00000 000001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80220001
Loading instruction to memory: 10000010 0b 100000 00001 00010 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20630001
Fetched 268435460 0b 001000 00011 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x24000000  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0230001
Fetched 268435464 0b 101000 00001 00011 00000 00000 000001
Decoding: op -> SB
Instruction decoded.
MasterReading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sb1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2063fedc
Loading instruction to memory: 10000008 0b 001000 00011 00011 11111 11011 011100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0230003
Loading instruction to memory: 1000000c 0b 101000 00001 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000010 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2063fedc
Fetched 268435460 0b 001000 00011 00011 11111 11011 011100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967004 = 0 + -292
0: 0x0  0x20000000  0x0  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0230003
Fetched 268435464 0b 101000 00001 00011 00000 00000 000011
Decoding: op -> SB
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 1 @536870915: fffffedcWriting @0x20000000 to   segment @ offset 0x20000000  0xdc
 as dc
0: 0x0  0x20000000  0x0  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8c220000
Fetched 268435468 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0xdc
Loading 4 @536870912: dc as dc
0: 0x0  0x20000000  0xdc  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xdc  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xdc  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 220
Hello, Starting the simulator
Opening file tests/bin/sb2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2063fedc
Loading instruction to memory: 10000008 0b 001000 00011 00011 11111 11011 011100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0230003
Loading instruction to memory: 1000000c 0b 101000 00001 00011 00000 00000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xa0230002
Loading instruction to memory: 10000010 0b 101000 00001 00011 00000 00000 000010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0xa0230001
Loading instruction to memory: 10000014 0b 101000 00001 00011 00000 00000 000001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0xa0230000
Loading instruction to memory: 10000018 0b 101000 00001 00011 00000 00000 000000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x80220003
Loading instruction to memory: 1000001c 0b 100000 00001 00010 00000 00000 000011
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000024
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2063fedc
Fetched 268435460 0b 001000 00011 00011 11111 11011 011100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967004 = 0 + -292
0: 0x0  0x20000000  0x0  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0230003
Fetched 268435464 0b 101000 00001 00011 00000 00000 000011
Decoding: op -> SB
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 1 @536870915: fffffedcWriting @0x20000000 to   segment @ offset 0x20000000  0xdc
 as dc
0: 0x0  0x20000000  0x0  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xa0230002
Fetched 268435468 0b 101000 00001 00011 00000 00000 000010
Decoding: op -> SB
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0xdc
Storing 1 @536870914: fffffedcWriting @0x20000000 to   segment @ offset 0x20000000  0xdcdc
 as dcdc
0: 0x0  0x20000000  0x0  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0xa0230001
Fetched 268435472 0b 101000 00001 00011 00000 00000 000001
Decoding: op -> SB
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0xdcdc
Storing 1 @536870913: fffffedcWriting @0x20000000 to   segment @ offset 0x20000000  0xdcdcdc
 as dcdcdc
0: 0x0  0x20000000  0x0  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0xa0230000
Fetched 268435476 0b 101000 00001 00011 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0xdcdcdc
Storing 1 @536870912: fffffedcWriting @0x20000000 to   segment @ offset 0x20000000  0xdcdcdcdc
 as dcdcdcdc
0: 0x0  0x20000000  0x0  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x80220003
Fetched 268435480 0b 100000 00001 00010 00000 00000 000011
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0xdcdcdcdc
Loading 1 @536870915: dc as ffffffdc
0: 0x0  0x20000000  0xffffffdc  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xffffffdc  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 7
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xffffffdc  0xfffffedc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 220
Hello, Starting the simulator
Opening file tests/bin/sb3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0xa0220000
Loading instruction to memory: 10000008 0b 101000 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0xa0220000
Fetched 268435460 0b 101000 00001 00010 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sb4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210007
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0220000
Loading instruction to memory: 1000000c 0b 101000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210007
Fetched 268435460 0b 001101 00001 00001 00000 00000 000111
Decoding: op -> ORI
Instruction decoded.
OR 0x30000007 = 0x30000000 | 0x7
0: 0x0  0x30000007  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0220000
Fetched 268435464 0b 101000 00001 00010 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x30000004 from segment @ offset 0x30000004  0x0
Storing 1 @805306375: 0Writing @0x30000004 to   segment @ offset 0x30000004  0x0
 as 0
0: 0x0  0x30000007  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000007  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000007  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sb5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210004
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0220000
Loading instruction to memory: 1000000c 0b 101000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210004
Fetched 268435460 0b 001101 00001 00001 00000 00000 000100
Decoding: op -> ORI
Instruction decoded.
OR 0x30000004 = 0x30000000 | 0x4
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0220000
Fetched 268435464 0b 101000 00001 00010 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x30000004 from segment @ offset 0x30000004  0x0
Storing 1 @805306372: 0Writing @0x30000004 to   segment @ offset 0x30000004  0x0
 as 0
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sb6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210003
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0220000
Loading instruction to memory: 1000000c 0b 101000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210003
Fetched 268435460 0b 001101 00001 00001 00000 00000 000011
Decoding: op -> ORI
Instruction decoded.
OR 0x30000003 = 0x30000000 | 0x3
0: 0x0  0x30000003  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0220000
Fetched 268435464 0b 101000 00001 00010 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Storing 1 @805306371: 0Writing @0x30000000 to   segment @ offset 0x30000000  0x0
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sb7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210001
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0220000
Loading instruction to memory: 1000000c 0b 101000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210001
Fetched 268435460 0b 001101 00001 00001 00000 00000 000001
Decoding: op -> ORI
Instruction decoded.
OR 0x30000001 = 0x30000000 | 0x1
0: 0x0  0x30000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0220000
Fetched 268435464 0b 101000 00001 00010 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Storing 1 @805306369: 0Writing @0x30000000 to   segment @ offset 0x30000000  0x61
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sb8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210001
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa0220000
Loading instruction to memory: 1000000c 0b 101000 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210001
Fetched 268435460 0b 001101 00001 00001 00000 00000 000001
Decoding: op -> ORI
Instruction decoded.
OR 0x10000001 = 0x10000000 | 0x1
0: 0x0  0x10000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa0220000
Fetched 268435464 0b 101000 00001 00010 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Storing 1 @268435457: 0Writing @0x10000000 to   segment @ offset 0x10000000  0x3c001000
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sb9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0xa0220000
Loading instruction to memory: 10000004 0b 101000 00001 00010 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0xa0220000
Fetched 268435456 0b 101000 00001 00010 00000 00000 000000
Decoding: op -> SB
Instruction decoded.
MasterReading @0x0 from segment @ offset 0x0  0x0
Storing 1 @0: 0Writing @0x0 to   segment @ offset 0x0  0x0
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sh10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0xa422fffe
Loading instruction to memory: 10000008 0b 101001 00001 00010 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0xa422fffe
Fetched 268435460 0b 101001 00001 00010 11111 11111 111110
Decoding: op -> SH
Instruction decoded.
MasterReading @0x23fffffc from segment @ offset 0x20000000  0x0
Storing 2 @603979774: 0Writing @0x23fffffc to   segment @ offset 0x20000000  0x0
 as 0
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sh1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012222
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 01000 100010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20633fa1
Loading instruction to memory: 10000008 0b 001000 00011 00011 00111 11110 100001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4230000
Loading instruction to memory: 1000000c 0b 101001 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x84220000
Loading instruction to memory: 10000010 0b 100001 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012222
Fetched 268435456 0b 001111 00000 00001 00100 01000 100010
Decoding: op -> LUI
Instruction decoded.
LUI 572653568
0: 0x0  0x22220000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20633fa1
Fetched 268435460 0b 001000 00011 00011 00111 11110 100001
Decoding: op -> ADDI
Instruction decoded.
ADD 16289 = 0 + 16289
0: 0x0  0x22220000  0x0  0x3fa1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4230000
Fetched 268435464 0b 101001 00001 00011 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
MasterReading @0x22220000 from segment @ offset 0x20000000  0x0
Storing 2 @572653568: 3fa1Writing @0x22220000 to   segment @ offset 0x20000000  0x3fa10000
 as 3fa10000
0: 0x0  0x22220000  0x0  0x3fa1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x84220000
Fetched 268435468 0b 100001 00001 00010 00000 00000 000000
Decoding: op -> LH
Instruction decoded.
Reading @0x22220000 from segment @ offset 0x20000000  0x3fa10000
Loading 2 @572653568: 3fa10000 as 3fa1
0: 0x0  0x22220000  0x3fa1  0x3fa1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x22220000  0x3fa1  0x3fa1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x22220000  0x3fa1  0x3fa1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 161
Hello, Starting the simulator
Opening file tests/bin/sh2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20633fa1
Loading instruction to memory: 10000008 0b 001000 00011 00011 00111 11110 100001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4230000
Loading instruction to memory: 1000000c 0b 101001 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20633fa1
Fetched 268435460 0b 001000 00011 00011 00111 11110 100001
Decoding: op -> ADDI
Instruction decoded.
ADD 16289 = 0 + 16289
0: 0x0  0x24000000  0x0  0x3fa1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4230000
Fetched 268435464 0b 101001 00001 00011 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
MasterReading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sh3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210004
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4220000
Loading instruction to memory: 1000000c 0b 101001 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210004
Fetched 268435460 0b 001101 00001 00001 00000 00000 000100
Decoding: op -> ORI
Instruction decoded.
OR 0x30000004 = 0x30000000 | 0x4
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4220000
Fetched 268435464 0b 101001 00001 00010 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
MasterReading @0x30000004 from segment @ offset 0x30000004  0x0
Storing 2 @805306372: 0Writing @0x30000004 to   segment @ offset 0x30000004  0x0
 as 0
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sh4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210003
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4220000
Loading instruction to memory: 1000000c 0b 101001 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210003
Fetched 268435460 0b 001101 00001 00001 00000 00000 000011
Decoding: op -> ORI
Instruction decoded.
OR 0x30000003 = 0x30000000 | 0x3
0: 0x0  0x30000003  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4220000
Fetched 268435464 0b 101001 00001 00010 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sh5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210006
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4220000
Loading instruction to memory: 1000000c 0b 101001 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210006
Fetched 268435460 0b 001101 00001 00001 00000 00000 000110
Decoding: op -> ORI
Instruction decoded.
OR 0x30000006 = 0x30000000 | 0x6
0: 0x0  0x30000006  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4220000
Fetched 268435464 0b 101001 00001 00010 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
MasterReading @0x30000004 from segment @ offset 0x30000004  0x0
Storing 2 @805306374: 0Writing @0x30000004 to   segment @ offset 0x30000004  0x0
 as 0
0: 0x0  0x30000006  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000006  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000006  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sh6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210004
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4220000
Loading instruction to memory: 1000000c 0b 101001 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210004
Fetched 268435460 0b 001101 00001 00001 00000 00000 000100
Decoding: op -> ORI
Instruction decoded.
OR 0x10000004 = 0x10000000 | 0x4
0: 0x0  0x10000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4220000
Fetched 268435464 0b 101001 00001 00010 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
MasterReading @0x10000004 from segment @ offset 0x10000000  0x34210004
Storing 2 @268435460: 0Writing @0x10000004 to   segment @ offset 0x10000000  0x4
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sh7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0xa4220000
Loading instruction to memory: 10000004 0b 101001 00001 00010 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20420022
Loading instruction to memory: 10000008 0b 001000 00010 00010 00000 00000 100010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0xa4220000
Fetched 268435456 0b 101001 00001 00010 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
MasterReading @0x0 from segment @ offset 0x0  0x0
Storing 2 @0: 0Writing @0x0 to   segment @ offset 0x0  0x0
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sh8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210001
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4220000
Loading instruction to memory: 1000000c 0b 101001 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210001
Fetched 268435460 0b 001101 00001 00001 00000 00000 000001
Decoding: op -> ORI
Instruction decoded.
OR 0x20000001 = 0x20000000 | 0x1
0: 0x0  0x20000001  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4220000
Fetched 268435464 0b 101001 00001 00010 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sh9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210000
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xa4220000
Loading instruction to memory: 1000000c 0b 101001 00001 00010 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210000
Fetched 268435460 0b 001101 00001 00001 00000 00000 000000
Decoding: op -> ORI
Instruction decoded.
OR 0x24000000 = 0x24000000 | 0x0
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xa4220000
Fetched 268435464 0b 101001 00001 00010 00000 00000 000000
Decoding: op -> SH
Instruction decoded.
MasterReading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sll1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20024567
Loading instruction to memory: 10000004 0b 001000 00000 00010 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x21900
Loading instruction to memory: 10000008 0b 000000 00000 00010 00011 00100 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x22200
Loading instruction to memory: 1000000c 0b 000000 00000 00010 00100 01000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x641020
Loading instruction to memory: 10000010 0b 000000 00011 00100 00010 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20024567
Fetched 268435456 0b 001000 00000 00010 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x4567  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x21900
Fetched 268435460 0b 000000 00000 00010 00011 00100 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000001000101011001110000 = 00000000000000000100010101100111 << 4
0: 0x0  0x0  0x4567  0x45670  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x22200
Fetched 268435464 0b 000000 00000 00010 00100 01000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000010001010110011100000000 = 00000000000000000100010101100111 << 8
0: 0x0  0x0  0x4567  0x45670  0x456700  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x641020
Fetched 268435468 0b 000000 00011 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4832624 = 284272 + 4548352
0: 0x0  0x0  0x49bd70  0x45670  0x456700  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x49bd70  0x45670  0x456700  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x49bd70  0x45670  0x456700  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 112
Hello, Starting the simulator
Opening file tests/bin/sll2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20034567
Loading instruction to memory: 10000004 0b 001000 00000 00011 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x31040
Loading instruction to memory: 10000008 0b 000000 00000 00011 00010 00001 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20034567
Fetched 268435456 0b 001000 00000 00011 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x31040
Fetched 268435460 0b 000000 00000 00011 00010 00001 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000001000101011001110 = 00000000000000000100010101100111 << 1
0: 0x0  0x0  0x8ace  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x8ace  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x8ace  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 206
Hello, Starting the simulator
Opening file tests/bin/sll3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c01f7ac
Loading instruction to memory: 10000004 0b 001111 00000 00001 11110 11110 101100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x11100
Loading instruction to memory: 10000008 0b 000000 00000 00001 00010 00100 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1c400004
Loading instruction to memory: 1000000c 0b 000111 00010 00000 00000 00000 000100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x20020001
Loading instruction to memory: 10000020 0b 001000 00000 00010 00000 00000 000001
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000024 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000028
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c01f7ac
Fetched 268435456 0b 001111 00000 00001 11110 11110 101100
Decoding: op -> LUI
Instruction decoded.
LUI 4155244544
0: 0x0  0xf7ac0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x11100
Fetched 268435460 0b 000000 00000 00001 00010 00100 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 01111010110000000000000000000000 = 11110111101011000000000000000000 << 4
0: 0x0  0xf7ac0000  0x7ac00000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1c400004
Fetched 268435464 0b 000111 00010 00000 00000 00000 000100
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000010000 = 268435484
0: 0x0  0xf7ac0000  0x7ac00000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xf7ac0000  0x7ac00000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x20020001
Fetched 268435484 0b 001000 00000 00010 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xf7ac0000  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x8
Fetched 268435488 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf7ac0000  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf7ac0000  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sll4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037fff
Loading instruction to memory: 10000004 0b 001000 00000 00011 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x30840
Loading instruction to memory: 10000008 0b 000000 00000 00011 00001 00001 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x23102a
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037fff
Fetched 268435456 0b 001000 00000 00011 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x30840
Fetched 268435460 0b 000000 00000 00011 00001 00001 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000001111111111111110 = 00000000000000000111111111111111 << 1
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x23102a
Fetched 268435464 0b 000000 00001 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 65534 < 32767
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sll5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20027fff
Loading instruction to memory: 10000004 0b 001000 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20800
Loading instruction to memory: 10000008 0b 000000 00000 00010 00001 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10220002
Loading instruction to memory: 1000000c 0b 000100 00001 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20027fff
Fetched 268435456 0b 001000 00000 00010 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20800
Fetched 268435460 0b 000000 00000 00010 00001 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000111111111111111 = 00000000000000000111111111111111 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10220002
Fetched 268435464 0b 000100 00001 00010 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/sllv1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20024567
Loading instruction to memory: 10000004 0b 001000 00000 00010 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20040004
Loading instruction to memory: 10000008 0b 001000 00000 00100 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20080008
Loading instruction to memory: 1000000c 0b 001000 00000 01000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x821804
Loading instruction to memory: 10000010 0b 000000 00100 00010 00011 00000 000100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x1022004
Loading instruction to memory: 10000014 0b 000000 01000 00010 00100 00000 000100
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x641020
Loading instruction to memory: 10000018 0b 000000 00011 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20024567
Fetched 268435456 0b 001000 00000 00010 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x4567  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20040004
Fetched 268435460 0b 001000 00000 00100 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x0  0x4567  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20080008
Fetched 268435464 0b 001000 00000 01000 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0x0  0x4567  0x0  0x4  0x0  0x0  0x0  
8: 0x8  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x821804
Fetched 268435468 0b 000000 00100 00010 00011 00000 000100
Decoding: op, func -> SLLV
Instruction decoded.
SLL 00000000000001000101011001110000 = 00000000000000000100010101100111 << 4
0: 0x0  0x0  0x4567  0x45670  0x4  0x0  0x0  0x0  
8: 0x8  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x1022004
Fetched 268435472 0b 000000 01000 00010 00100 00000 000100
Decoding: op, func -> SLLV
Instruction decoded.
SLL 00000000010001010110011100000000 = 00000000000000000100010101100111 << 8
0: 0x0  0x0  0x4567  0x45670  0x456700  0x0  0x0  0x0  
8: 0x8  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x641020
Fetched 268435476 0b 000000 00011 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 4832624 = 284272 + 4548352
0: 0x0  0x0  0x49bd70  0x45670  0x456700  0x0  0x0  0x0  
8: 0x8  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x49bd70  0x45670  0x456700  0x0  0x0  0x0  
8: 0x8  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x49bd70  0x45670  0x456700  0x0  0x0  0x0  
8: 0x8  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 112
Hello, Starting the simulator
Opening file tests/bin/sllv2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20034567
Loading instruction to memory: 10000004 0b 001000 00000 00011 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000008 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231004
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 000100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20034567
Fetched 268435456 0b 001000 00000 00011 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20010001
Fetched 268435460 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231004
Fetched 268435464 0b 000000 00001 00011 00010 00000 000100
Decoding: op, func -> SLLV
Instruction decoded.
SLL 00000000000000001000101011001110 = 00000000000000000100010101100111 << 1
0: 0x0  0x1  0x8ace  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x8ace  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x8ace  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 206
Hello, Starting the simulator
Opening file tests/bin/sllv3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c01f7ac
Loading instruction to memory: 10000004 0b 001111 00000 00001 11110 11110 101100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20040004
Loading instruction to memory: 10000008 0b 001000 00000 00100 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x811004
Loading instruction to memory: 1000000c 0b 000000 00100 00001 00010 00000 000100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1c400004
Loading instruction to memory: 10000010 0b 000111 00010 00000 00000 00000 000100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000018 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000020 to   segment @ offset 0x10000000  0x20020001
Loading instruction to memory: 10000024 0b 001000 00000 00010 00000 00000 000001
MasterWriting @0x10000024 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000028 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000028 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000002c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000002c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c01f7ac
Fetched 268435456 0b 001111 00000 00001 11110 11110 101100
Decoding: op -> LUI
Instruction decoded.
LUI 4155244544
0: 0x0  0xf7ac0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20040004
Fetched 268435460 0b 001000 00000 00100 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0xf7ac0000  0x0  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x811004
Fetched 268435464 0b 000000 00100 00001 00010 00000 000100
Decoding: op, func -> SLLV
Instruction decoded.
SLL 01111010110000000000000000000000 = 11110111101011000000000000000000 << 4
0: 0x0  0xf7ac0000  0x7ac00000  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1c400004
Fetched 268435468 0b 000111 00010 00000 00000 00000 000100
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435472 -> 268435472 + 00000000000000000000000000010000 = 268435488
0: 0x0  0xf7ac0000  0x7ac00000  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xf7ac0000  0x7ac00000  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000020 from segment @ offset 0x10000000  0x20020001
Fetched 268435488 0b 001000 00000 00010 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xf7ac0000  0x1  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000024 from segment @ offset 0x10000000  0x8
Fetched 268435492 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf7ac0000  0x1  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x10000028 from segment @ offset 0x10000000  0x8
Fetched 268435496 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf7ac0000  0x1  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sllv4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037fff
Loading instruction to memory: 10000004 0b 001000 00000 00011 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000008 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x230804
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00001 00000 000100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x23102a
Loading instruction to memory: 10000010 0b 000000 00001 00011 00010 00000 101010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037fff
Fetched 268435456 0b 001000 00000 00011 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20010001
Fetched 268435460 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x230804
Fetched 268435464 0b 000000 00001 00011 00001 00000 000100
Decoding: op, func -> SLLV
Instruction decoded.
SLL 00000000000000001111111111111110 = 00000000000000000111111111111111 << 1
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x23102a
Fetched 268435468 0b 000000 00001 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 65534 < 32767
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffe  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sllv5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20027fff
Loading instruction to memory: 10000004 0b 001000 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20804
Loading instruction to memory: 10000008 0b 000000 00000 00010 00001 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10220002
Loading instruction to memory: 1000000c 0b 000100 00001 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20027fff
Fetched 268435456 0b 001000 00000 00010 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20804
Fetched 268435460 0b 000000 00000 00010 00001 00000 000100
Decoding: op, func -> SLLV
Instruction decoded.
SLL 00000000000000000111111111111111 = 00000000000000000111111111111111 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10220002
Fetched 268435464 0b 000100 00001 00010 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/sllv6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20034567
Loading instruction to memory: 10000004 0b 001000 00000 00011 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2004ff00
Loading instruction to memory: 10000008 0b 001000 00000 00100 11111 11100 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x831004
Loading instruction to memory: 1000000c 0b 000000 00100 00011 00010 00000 000100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20034567
Fetched 268435456 0b 001000 00000 00011 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2004ff00
Fetched 268435460 0b 001000 00000 00100 11111 11100 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967040 = 0 + -256
0: 0x0  0x0  0x0  0x4567  0xffffff00  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x831004
Fetched 268435464 0b 000000 00100 00011 00010 00000 000100
Decoding: op, func -> SLLV
Instruction decoded.
SLL 00000000000000000100010101100111 = 00000000000000000100010101100111 << 4294967040
0: 0x0  0x0  0x4567  0x4567  0xffffff00  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x4567  0x4567  0xffffff00  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x4567  0x4567  0xffffff00  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 103
Hello, Starting the simulator
Opening file tests/bin/slt1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1102a
Loading instruction to memory: 10000008 0b 000000 00000 00001 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1102a
Fetched 268435460 0b 000000 00000 00001 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 0 < 4
0: 0x0  0x4  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/slt2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fffc
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1102a
Loading instruction to memory: 10000008 0b 000000 00000 00001 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fffc
Fetched 268435456 0b 001000 00000 00001 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0xfffffffc  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1102a
Fetched 268435460 0b 000000 00000 00001 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 0 < -4
0: 0x0  0xfffffffc  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/slt3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2003fffc
Loading instruction to memory: 10000008 0b 001000 00000 00011 11111 11111 111100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x61102a
Loading instruction to memory: 1000000c 0b 000000 00011 00001 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2003fffc
Fetched 268435460 0b 001000 00000 00011 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0x4  0x0  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x61102a
Fetched 268435464 0b 000000 00011 00001 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = -4 < 4
0: 0x0  0x4  0x1  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x1  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x1  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/slt4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fffc
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20102a
Loading instruction to memory: 10000008 0b 000000 00001 00000 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fffc
Fetched 268435456 0b 001000 00000 00001 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0xfffffffc  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20102a
Fetched 268435460 0b 000000 00001 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = -4 < 0
0: 0x0  0xfffffffc  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/slt5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20102a
Loading instruction to memory: 10000008 0b 000000 00001 00000 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20102a
Fetched 268435460 0b 000000 00001 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 4 < 0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/slt6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x102a
Loading instruction to memory: 10000004 0b 000000 00000 00000 00010 00000 101010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x102a
Fetched 268435456 0b 000000 00000 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 0 < 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/slt7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x21102a
Loading instruction to memory: 10000008 0b 000000 00001 00001 00010 00000 101010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x21102a
Fetched 268435460 0b 000000 00001 00001 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = 4 < 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/slti1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x28020004
Loading instruction to memory: 10000004 0b 001010 00000 00010 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x28020004
Fetched 268435456 0b 001010 00000 00010 00000 00000 000100
Decoding: op -> SLTI
Instruction decoded.
SLT 1 = 0 < 4
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/slti2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2802fffc
Loading instruction to memory: 10000004 0b 001010 00000 00010 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2802fffc
Fetched 268435456 0b 001010 00000 00010 11111 11111 111100
Decoding: op -> SLTI
Instruction decoded.
SLT 0 = 0 < -4
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/slti3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2003fffc
Loading instruction to memory: 10000004 0b 001000 00000 00011 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x28620004
Loading instruction to memory: 10000008 0b 001010 00011 00010 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2003fffc
Fetched 268435456 0b 001000 00000 00011 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0x0  0x0  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x28620004
Fetched 268435460 0b 001010 00011 00010 00000 00000 000100
Decoding: op -> SLTI
Instruction decoded.
SLT 1 = -4 < 4
0: 0x0  0x0  0x1  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0xfffffffc  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/slti4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fffc
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x28220000
Loading instruction to memory: 10000008 0b 001010 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fffc
Fetched 268435456 0b 001000 00000 00001 11111 11111 111100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967292 = 0 + -4
0: 0x0  0xfffffffc  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x28220000
Fetched 268435460 0b 001010 00001 00010 00000 00000 000000
Decoding: op -> SLTI
Instruction decoded.
SLT 1 = -4 < 0
0: 0x0  0xfffffffc  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffffc  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/slti5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x28220000
Loading instruction to memory: 10000008 0b 001010 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x28220000
Fetched 268435460 0b 001010 00001 00010 00000 00000 000000
Decoding: op -> SLTI
Instruction decoded.
SLT 0 = 4 < 0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/slti6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x28020000
Loading instruction to memory: 10000004 0b 001010 00000 00010 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x28020000
Fetched 268435456 0b 001010 00000 00010 00000 00000 000000
Decoding: op -> SLTI
Instruction decoded.
SLT 0 = 0 < 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/slti7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x28220004
Loading instruction to memory: 10000008 0b 001010 00001 00010 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x28220004
Fetched 268435460 0b 001010 00001 00010 00000 00000 000100
Decoding: op -> SLTI
Instruction decoded.
SLT 0 = 4 < 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sltiu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2c020004
Loading instruction to memory: 10000004 0b 001011 00000 00010 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2c020004
Fetched 268435456 0b 001011 00000 00010 00000 00000 000100
Decoding: op -> SLTIU
Instruction decoded.
SLTU 1 = 0 u< 4
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sltiu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2c220000
Loading instruction to memory: 10000008 0b 001011 00001 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2c220000
Fetched 268435460 0b 001011 00001 00010 00000 00000 000000
Decoding: op -> SLTIU
Instruction decoded.
SLTU 0 = 4 u< 0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sltiu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2c020000
Loading instruction to memory: 10000004 0b 001011 00000 00010 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2c020000
Fetched 268435456 0b 001011 00000 00010 00000 00000 000000
Decoding: op -> SLTIU
Instruction decoded.
SLTU 0 = 0 u< 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sltiu4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010005
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2c220007
Loading instruction to memory: 10000008 0b 001011 00001 00010 00000 00000 000111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010005
Fetched 268435456 0b 001000 00000 00001 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x5  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2c220007
Fetched 268435460 0b 001011 00001 00010 00000 00000 000111
Decoding: op -> SLTIU
Instruction decoded.
SLTU 1 = 5 u< 7
0: 0x0  0x5  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sltu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x1102b
Loading instruction to memory: 10000008 0b 000000 00000 00001 00010 00000 101011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x1102b
Fetched 268435460 0b 000000 00000 00001 00010 00000 101011
Decoding: op, func -> SLTU
Instruction decoded.
SLTU 1 = 0 u< 4
0: 0x0  0x4  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sltu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010004
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20102b
Loading instruction to memory: 10000008 0b 000000 00001 00000 00010 00000 101011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010004
Fetched 268435456 0b 001000 00000 00001 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20102b
Fetched 268435460 0b 000000 00001 00000 00010 00000 101011
Decoding: op, func -> SLTU
Instruction decoded.
SLTU 0 = 4 u< 0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x4  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sltu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x102b
Loading instruction to memory: 10000004 0b 000000 00000 00000 00010 00000 101011
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x102b
Fetched 268435456 0b 000000 00000 00000 00010 00000 101011
Decoding: op, func -> SLTU
Instruction decoded.
SLTU 0 = 0 u< 0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x8
Fetched 268435460 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sltu4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010005
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030007
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x23102b
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 101011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010005
Fetched 268435456 0b 001000 00000 00001 00000 00000 000101
Decoding: op -> ADDI
Instruction decoded.
ADD 5 = 0 + 5
0: 0x0  0x5  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030007
Fetched 268435460 0b 001000 00000 00011 00000 00000 000111
Decoding: op -> ADDI
Instruction decoded.
ADD 7 = 0 + 7
0: 0x0  0x5  0x0  0x7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x23102b
Fetched 268435464 0b 000000 00001 00011 00010 00000 101011
Decoding: op, func -> SLTU
Instruction decoded.
SLTU 1 = 5 u< 7
0: 0x0  0x5  0x1  0x7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x1  0x7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x5  0x1  0x7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sra1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c024567
Loading instruction to memory: 10000004 0b 001111 00000 00010 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x21c03
Loading instruction to memory: 10000008 0b 000000 00000 00010 00011 10000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x22603
Loading instruction to memory: 1000000c 0b 000000 00000 00010 00100 11000 000011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x641020
Loading instruction to memory: 10000010 0b 000000 00011 00100 00010 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c024567
Fetched 268435456 0b 001111 00000 00010 01000 10101 100111
Decoding: op -> LUI
Instruction decoded.
LUI 1164378112
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x21c03
Fetched 268435460 0b 000000 00000 00010 00011 10000 000011
Decoding: op, func -> SRA
Instruction decoded.
SRA 00000000000000000100010101100111 = 01000101011001110000000000000000 >>> 16
0: 0x0  0x0  0x45670000  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x22603
Fetched 268435464 0b 000000 00000 00010 00100 11000 000011
Decoding: op, func -> SRA
Instruction decoded.
SRA 00000000000000000000000001000101 = 01000101011001110000000000000000 >>> 24
0: 0x0  0x0  0x45670000  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x641020
Fetched 268435468 0b 000000 00011 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 17836 = 17767 + 69
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 172
Hello, Starting the simulator
Opening file tests/bin/sra2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20034567
Loading instruction to memory: 10000004 0b 001000 00000 00011 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x31283
Loading instruction to memory: 10000008 0b 000000 00000 00011 00010 01010 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20034567
Fetched 268435456 0b 001000 00000 00011 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x31283
Fetched 268435460 0b 000000 00000 00011 00010 01010 000011
Decoding: op, func -> SRA
Instruction decoded.
SRA 00000000000000000000000000010001 = 00000000000000000100010101100111 >>> 10
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 17
Hello, Starting the simulator
Opening file tests/bin/sra3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001ffac
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11110 101100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x11103
Loading instruction to memory: 10000008 0b 000000 00000 00001 00010 00100 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1c400002
Loading instruction to memory: 1000000c 0b 000111 00010 00000 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x20020001
Loading instruction to memory: 10000014 0b 001000 00000 00010 00000 00000 000001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001ffac
Fetched 268435456 0b 001000 00000 00001 11111 11110 101100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967212 = 0 + -84
0: 0x0  0xffffffac  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x11103
Fetched 268435460 0b 000000 00000 00001 00010 00100 000011
Decoding: op, func -> SRA
Instruction decoded.
SRA 11111111111111111111111111111010 = 11111111111111111111111110101100 >>> 4
0: 0x0  0xffffffac  0xfffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1c400002
Fetched 268435464 0b 000111 00010 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB not taken
0: 0x0  0xffffffac  0xfffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffac  0xfffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x20020001
Fetched 268435472 0b 001000 00000 00010 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xffffffac  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0x1  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sra4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2003f675
Loading instruction to memory: 10000004 0b 001000 00000 00011 11110 11001 110101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x32043
Loading instruction to memory: 10000008 0b 000000 00000 00011 00100 00001 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x83102a
Loading instruction to memory: 1000000c 0b 000000 00100 00011 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2003f675
Fetched 268435456 0b 001000 00000 00011 11110 11001 110101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294964853 = 0 + -2443
0: 0x0  0x0  0x0  0xfffff675  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x32043
Fetched 268435460 0b 000000 00000 00011 00100 00001 000011
Decoding: op, func -> SRA
Instruction decoded.
SRA 11111111111111111111101100111010 = 11111111111111111111011001110101 >>> 1
0: 0x0  0x0  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x83102a
Fetched 268435464 0b 000000 00100 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = -1222 < -2443
0: 0x0  0x0  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sra5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037675
Loading instruction to memory: 10000004 0b 001000 00000 00011 01110 11001 110101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x32043
Loading instruction to memory: 10000008 0b 000000 00000 00011 00100 00001 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x83102a
Loading instruction to memory: 1000000c 0b 000000 00100 00011 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037675
Fetched 268435456 0b 001000 00000 00011 01110 11001 110101
Decoding: op -> ADDI
Instruction decoded.
ADD 30325 = 0 + 30325
0: 0x0  0x0  0x0  0x7675  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x32043
Fetched 268435460 0b 000000 00000 00011 00100 00001 000011
Decoding: op, func -> SRA
Instruction decoded.
SRA 00000000000000000011101100111010 = 00000000000000000111011001110101 >>> 1
0: 0x0  0x0  0x0  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x83102a
Fetched 268435464 0b 000000 00100 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 15162 < 30325
0: 0x0  0x0  0x1  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x1  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sra6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20027fff
Loading instruction to memory: 10000004 0b 001000 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20803
Loading instruction to memory: 10000008 0b 000000 00000 00010 00001 00000 000011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10220002
Loading instruction to memory: 1000000c 0b 000100 00001 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20027fff
Fetched 268435456 0b 001000 00000 00010 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20803
Fetched 268435460 0b 000000 00000 00010 00001 00000 000011
Decoding: op, func -> SRA
Instruction decoded.
SRA 00000000000000000111111111111111 = 00000000000000000111111111111111 >>> 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10220002
Fetched 268435464 0b 000100 00001 00010 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/srav1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c024567
Loading instruction to memory: 10000004 0b 001111 00000 00010 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20100010
Loading instruction to memory: 10000008 0b 001000 00000 10000 00000 00000 010000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20180018
Loading instruction to memory: 1000000c 0b 001000 00000 11000 00000 00000 011000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2021807
Loading instruction to memory: 10000010 0b 000000 10000 00010 00011 00000 000111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3022007
Loading instruction to memory: 10000014 0b 000000 11000 00010 00100 00000 000111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x641020
Loading instruction to memory: 10000018 0b 000000 00011 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c024567
Fetched 268435456 0b 001111 00000 00010 01000 10101 100111
Decoding: op -> LUI
Instruction decoded.
LUI 1164378112
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20100010
Fetched 268435460 0b 001000 00000 10000 00000 00000 010000
Decoding: op -> ADDI
Instruction decoded.
ADD 16 = 0 + 16
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20180018
Fetched 268435464 0b 001000 00000 11000 00000 00000 011000
Decoding: op -> ADDI
Instruction decoded.
ADD 24 = 0 + 24
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2021807
Fetched 268435468 0b 000000 10000 00010 00011 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 00000000000000000100010101100111 = 01000101011001110000000000000000 >>> 16
0: 0x0  0x0  0x45670000  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3022007
Fetched 268435472 0b 000000 11000 00010 00100 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 00000000000000000000000001000101 = 01000101011001110000000000000000 >>> 24
0: 0x0  0x0  0x45670000  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x641020
Fetched 268435476 0b 000000 00011 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 17836 = 17767 + 69
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 172
Hello, Starting the simulator
Opening file tests/bin/srav2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20034567
Loading instruction to memory: 10000004 0b 001000 00000 00011 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x200a000a
Loading instruction to memory: 10000008 0b 001000 00000 01010 00000 00000 001010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1431007
Loading instruction to memory: 1000000c 0b 000000 01010 00011 00010 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20034567
Fetched 268435456 0b 001000 00000 00011 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x200a000a
Fetched 268435460 0b 001000 00000 01010 00000 00000 001010
Decoding: op -> ADDI
Instruction decoded.
ADD 10 = 0 + 10
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1431007
Fetched 268435464 0b 000000 01010 00011 00010 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 00000000000000000000000000010001 = 00000000000000000100010101100111 >>> 10
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 17
Hello, Starting the simulator
Opening file tests/bin/srav3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001ffac
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11110 101100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20040004
Loading instruction to memory: 10000008 0b 001000 00000 00100 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x811007
Loading instruction to memory: 1000000c 0b 000000 00100 00001 00010 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1c400002
Loading instruction to memory: 10000010 0b 000111 00010 00000 00000 00000 000010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x20020001
Loading instruction to memory: 10000018 0b 001000 00000 00010 00000 00000 000001
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001ffac
Fetched 268435456 0b 001000 00000 00001 11111 11110 101100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967212 = 0 + -84
0: 0x0  0xffffffac  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20040004
Fetched 268435460 0b 001000 00000 00100 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0xffffffac  0x0  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x811007
Fetched 268435464 0b 000000 00100 00001 00010 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 11111111111111111111111111111010 = 11111111111111111111111110101100 >>> 4
0: 0x0  0xffffffac  0xfffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1c400002
Fetched 268435468 0b 000111 00010 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB not taken
0: 0x0  0xffffffac  0xfffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffac  0xfffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x20020001
Fetched 268435476 0b 001000 00000 00010 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0xffffffac  0x1  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0x1  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0x1  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/srav4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2003f675
Loading instruction to memory: 10000004 0b 001000 00000 00011 11110 11001 110101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000008 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x232007
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00100 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x83102a
Loading instruction to memory: 10000010 0b 000000 00100 00011 00010 00000 101010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2003f675
Fetched 268435456 0b 001000 00000 00011 11110 11001 110101
Decoding: op -> ADDI
Instruction decoded.
ADD 4294964853 = 0 + -2443
0: 0x0  0x0  0x0  0xfffff675  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20010001
Fetched 268435460 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0xfffff675  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x232007
Fetched 268435464 0b 000000 00001 00011 00100 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 11111111111111111111101100111010 = 11111111111111111111011001110101 >>> 1
0: 0x0  0x1  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x83102a
Fetched 268435468 0b 000000 00100 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 0 = -1222 < -2443
0: 0x0  0x1  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x0  0xfffff675  0xfffffb3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/srav5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037675
Loading instruction to memory: 10000004 0b 001000 00000 00011 01110 11001 110101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000008 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x232007
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00100 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x83102a
Loading instruction to memory: 10000010 0b 000000 00100 00011 00010 00000 101010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037675
Fetched 268435456 0b 001000 00000 00011 01110 11001 110101
Decoding: op -> ADDI
Instruction decoded.
ADD 30325 = 0 + 30325
0: 0x0  0x0  0x0  0x7675  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20010001
Fetched 268435460 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x7675  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x232007
Fetched 268435464 0b 000000 00001 00011 00100 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 00000000000000000011101100111010 = 00000000000000000111011001110101 >>> 1
0: 0x0  0x1  0x0  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x83102a
Fetched 268435468 0b 000000 00100 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 15162 < 30325
0: 0x0  0x1  0x1  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x1  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x1  0x1  0x7675  0x3b3a  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/srav6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20027fff
Loading instruction to memory: 10000004 0b 001000 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20807
Loading instruction to memory: 10000008 0b 000000 00000 00010 00001 00000 000111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10220002
Loading instruction to memory: 1000000c 0b 000100 00001 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20027fff
Fetched 268435456 0b 001000 00000 00010 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20807
Fetched 268435460 0b 000000 00000 00010 00001 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 00000000000000000111111111111111 = 00000000000000000111111111111111 >>> 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10220002
Fetched 268435464 0b 000100 00001 00010 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/srav7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037ff1
Loading instruction to memory: 10000004 0b 001000 00000 00011 01111 11111 110001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2001ff00
Loading instruction to memory: 10000008 0b 001000 00000 00001 11111 11100 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231007
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 000111
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037ff1
Fetched 268435456 0b 001000 00000 00011 01111 11111 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 32753 = 0 + 32753
0: 0x0  0x0  0x0  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2001ff00
Fetched 268435460 0b 001000 00000 00001 11111 11100 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967040 = 0 + -256
0: 0x0  0xffffff00  0x0  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231007
Fetched 268435464 0b 000000 00001 00011 00010 00000 000111
Decoding: op, func -> SRAV
Instruction decoded.
SRA 00000000000000000111111111110001 = 00000000000000000111111111110001 >>> 4294967040
0: 0x0  0xffffff00  0x7ff1  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffff00  0x7ff1  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffff00  0x7ff1  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 241
Hello, Starting the simulator
Opening file tests/bin/srl1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c024567
Loading instruction to memory: 10000004 0b 001111 00000 00010 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x21c02
Loading instruction to memory: 10000008 0b 000000 00000 00010 00011 10000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x22602
Loading instruction to memory: 1000000c 0b 000000 00000 00010 00100 11000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x641020
Loading instruction to memory: 10000010 0b 000000 00011 00100 00010 00000 100000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c024567
Fetched 268435456 0b 001111 00000 00010 01000 10101 100111
Decoding: op -> LUI
Instruction decoded.
LUI 1164378112
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x21c02
Fetched 268435460 0b 000000 00000 00010 00011 10000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000100010101100111 = 01000101011001110000000000000000 >> 16
0: 0x0  0x0  0x45670000  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x22602
Fetched 268435464 0b 000000 00000 00010 00100 11000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000001000101 = 01000101011001110000000000000000 >> 24
0: 0x0  0x0  0x45670000  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x641020
Fetched 268435468 0b 000000 00011 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 17836 = 17767 + 69
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 172
Hello, Starting the simulator
Opening file tests/bin/srl2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20034567
Loading instruction to memory: 10000004 0b 001000 00000 00011 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x31282
Loading instruction to memory: 10000008 0b 000000 00000 00011 00010 01010 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20034567
Fetched 268435456 0b 001000 00000 00011 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x31282
Fetched 268435460 0b 000000 00000 00011 00010 01010 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000000000000010001 = 00000000000000000100010101100111 >> 10
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 17
Hello, Starting the simulator
Opening file tests/bin/srl3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001ffac
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11110 101100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x11102
Loading instruction to memory: 10000008 0b 000000 00000 00001 00010 00100 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1c400002
Loading instruction to memory: 1000000c 0b 000111 00010 00000 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001ffac
Fetched 268435456 0b 001000 00000 00001 11111 11110 101100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967212 = 0 + -84
0: 0x0  0xffffffac  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x11102
Fetched 268435460 0b 000000 00000 00001 00010 00100 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00001111111111111111111111111010 = 11111111111111111111111110101100 >> 4
0: 0x0  0xffffffac  0xffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1c400002
Fetched 268435464 0b 000111 00010 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0xffffffac  0xffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffac  0xffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0xffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0xffffffa  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 250
Hello, Starting the simulator
Opening file tests/bin/srl4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037fff
Loading instruction to memory: 10000004 0b 001000 00000 00011 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x30842
Loading instruction to memory: 10000008 0b 000000 00000 00011 00001 00001 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x23102a
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037fff
Fetched 268435456 0b 001000 00000 00011 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x30842
Fetched 268435460 0b 000000 00000 00011 00001 00001 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000011111111111111 = 00000000000000000111111111111111 >> 1
0: 0x0  0x3fff  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x23102a
Fetched 268435464 0b 000000 00001 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 16383 < 32767
0: 0x0  0x3fff  0x1  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3fff  0x1  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3fff  0x1  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/srl5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20027fff
Loading instruction to memory: 10000004 0b 001000 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20802
Loading instruction to memory: 10000008 0b 000000 00000 00010 00001 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10220002
Loading instruction to memory: 1000000c 0b 000100 00001 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20027fff
Fetched 268435456 0b 001000 00000 00010 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20802
Fetched 268435460 0b 000000 00000 00010 00001 00000 000010
Decoding: op, func -> SRL
Instruction decoded.
SRL 00000000000000000111111111111111 = 00000000000000000111111111111111 >> 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10220002
Fetched 268435464 0b 000100 00001 00010 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/srlv1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c024567
Loading instruction to memory: 10000004 0b 001111 00000 00010 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20100010
Loading instruction to memory: 10000008 0b 001000 00000 10000 00000 00000 010000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x20180018
Loading instruction to memory: 1000000c 0b 001000 00000 11000 00000 00000 011000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x2021806
Loading instruction to memory: 10000010 0b 000000 10000 00010 00011 00000 000110
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3022006
Loading instruction to memory: 10000014 0b 000000 11000 00010 00100 00000 000110
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x641020
Loading instruction to memory: 10000018 0b 000000 00011 00100 00010 00000 100000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c024567
Fetched 268435456 0b 001111 00000 00010 01000 10101 100111
Decoding: op -> LUI
Instruction decoded.
LUI 1164378112
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20100010
Fetched 268435460 0b 001000 00000 10000 00000 00000 010000
Decoding: op -> ADDI
Instruction decoded.
ADD 16 = 0 + 16
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x20180018
Fetched 268435464 0b 001000 00000 11000 00000 00000 011000
Decoding: op -> ADDI
Instruction decoded.
ADD 24 = 0 + 24
0: 0x0  0x0  0x45670000  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x2021806
Fetched 268435468 0b 000000 10000 00010 00011 00000 000110
Decoding: op, func -> SRLV
Instruction decoded.
SRL 00000000000000000100010101100111 = 01000101011001110000000000000000 >> 16
0: 0x0  0x0  0x45670000  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3022006
Fetched 268435472 0b 000000 11000 00010 00100 00000 000110
Decoding: op, func -> SRLV
Instruction decoded.
SRL 00000000000000000000000001000101 = 01000101011001110000000000000000 >> 24
0: 0x0  0x0  0x45670000  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x641020
Fetched 268435476 0b 000000 00011 00100 00010 00000 100000
Decoding: op, func -> ADD
Instruction decoded.
ADD 17836 = 17767 + 69
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x45ac  0x4567  0x45  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x10  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x18  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 172
Hello, Starting the simulator
Opening file tests/bin/srlv2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20034567
Loading instruction to memory: 10000004 0b 001000 00000 00011 01000 10101 100111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x200a000a
Loading instruction to memory: 10000008 0b 001000 00000 01010 00000 00000 001010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x1431006
Loading instruction to memory: 1000000c 0b 000000 01010 00011 00010 00000 000110
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20034567
Fetched 268435456 0b 001000 00000 00011 01000 10101 100111
Decoding: op -> ADDI
Instruction decoded.
ADD 17767 = 0 + 17767
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x200a000a
Fetched 268435460 0b 001000 00000 01010 00000 00000 001010
Decoding: op -> ADDI
Instruction decoded.
ADD 10 = 0 + 10
0: 0x0  0x0  0x0  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x1431006
Fetched 268435464 0b 000000 01010 00011 00010 00000 000110
Decoding: op, func -> SRLV
Instruction decoded.
SRL 00000000000000000000000000010001 = 00000000000000000100010101100111 >> 10
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x11  0x4567  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0xa  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 17
Hello, Starting the simulator
Opening file tests/bin/srlv3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001ffac
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11110 101100
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20040004
Loading instruction to memory: 10000008 0b 001000 00000 00100 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x811006
Loading instruction to memory: 1000000c 0b 000000 00100 00001 00010 00000 000110
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x1c400002
Loading instruction to memory: 10000010 0b 000111 00010 00000 00000 00000 000010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000018 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001ffac
Fetched 268435456 0b 001000 00000 00001 11111 11110 101100
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967212 = 0 + -84
0: 0x0  0xffffffac  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20040004
Fetched 268435460 0b 001000 00000 00100 00000 00000 000100
Decoding: op -> ADDI
Instruction decoded.
ADD 4 = 0 + 4
0: 0x0  0xffffffac  0x0  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x811006
Fetched 268435464 0b 000000 00100 00001 00010 00000 000110
Decoding: op, func -> SRLV
Instruction decoded.
SRL 00001111111111111111111111111010 = 11111111111111111111111110101100 >> 4
0: 0x0  0xffffffac  0xffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x1c400002
Fetched 268435468 0b 000111 00010 00000 00000 00000 000010
Decoding: op -> BGTZ
Instruction decoded.
JB taken 268435472 -> 268435472 + 00000000000000000000000000001000 = 268435480
0: 0x0  0xffffffac  0xffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x0
Fetched 268435472 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0xffffffac  0xffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0xffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffffac  0xffffffa  0x0  0x4  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 250
Hello, Starting the simulator
Opening file tests/bin/srlv4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037fff
Loading instruction to memory: 10000004 0b 001000 00000 00011 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20010001
Loading instruction to memory: 10000008 0b 001000 00000 00001 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x230806
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00001 00000 000110
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x23102a
Loading instruction to memory: 10000010 0b 000000 00001 00011 00010 00000 101010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037fff
Fetched 268435456 0b 001000 00000 00011 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20010001
Fetched 268435460 0b 001000 00000 00001 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x1  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x230806
Fetched 268435464 0b 000000 00001 00011 00001 00000 000110
Decoding: op, func -> SRLV
Instruction decoded.
SRL 00000000000000000011111111111111 = 00000000000000000111111111111111 >> 1
0: 0x0  0x3fff  0x0  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x23102a
Fetched 268435468 0b 000000 00001 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 16383 < 32767
0: 0x0  0x3fff  0x1  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3fff  0x1  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x3fff  0x1  0x7fff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/srlv5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20027fff
Loading instruction to memory: 10000004 0b 001000 00000 00010 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20806
Loading instruction to memory: 10000008 0b 000000 00000 00010 00001 00000 000110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x10220002
Loading instruction to memory: 1000000c 0b 000100 00001 00010 00000 00000 000010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x0
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x2002ffff
Loading instruction to memory: 10000014 0b 001000 00000 00010 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20027fff
Fetched 268435456 0b 001000 00000 00010 01111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 32767 = 0 + 32767
0: 0x0  0x0  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20806
Fetched 268435460 0b 000000 00000 00010 00001 00000 000110
Decoding: op, func -> SRLV
Instruction decoded.
SRL 00000000000000000111111111111111 = 00000000000000000111111111111111 >> 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x10220002
Fetched 268435464 0b 000100 00001 00010 00000 00000 000010
Decoding: op -> BEQ
Instruction decoded.
JB taken 268435468 -> 268435468 + 00000000000000000000000000001000 = 268435476
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x0
Fetched 268435468 0b 000000 00000 00000 00000 00000 000000
Decoding: op, func -> SLL
Instruction decoded.
SLL 00000000000000000000000000000000 = 00000000000000000000000000000000 << 0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fff  0x7fff  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/srlv6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20037ff1
Loading instruction to memory: 10000004 0b 001000 00000 00011 01111 11111 110001
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2001ff00
Loading instruction to memory: 10000008 0b 001000 00000 00001 11111 11100 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231006
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 000110
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20037ff1
Fetched 268435456 0b 001000 00000 00011 01111 11111 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 32753 = 0 + 32753
0: 0x0  0x0  0x0  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2001ff00
Fetched 268435460 0b 001000 00000 00001 11111 11100 000000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967040 = 0 + -256
0: 0x0  0xffffff00  0x0  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231006
Fetched 268435464 0b 000000 00001 00011 00010 00000 000110
Decoding: op, func -> SRLV
Instruction decoded.
SRL 00000000000000000111111111110001 = 00000000000000000111111111110001 >> 4294967040
0: 0x0  0xffffff00  0x7ff1  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffff00  0x7ff1  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xffffff00  0x7ff1  0x7ff1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 241
Hello, Starting the simulator
Opening file tests/bin/sub10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x11822
Loading instruction to memory: 10000008 0b 000000 00000 00001 00011 00000 100010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x60102a
Loading instruction to memory: 1000000c 0b 000000 00011 00000 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x11822
Fetched 268435460 0b 000000 00000 00001 00011 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB -2147483648 = 0 - -2147483648
Substract overflow. 
Arithmetic exception occured. Terminating with code -10
Hello, Starting the simulator
Opening file tests/bin/sub11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c01f045
Loading instruction to memory: 10000004 0b 001111 00000 00001 11110 00001 000101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x11822
Loading instruction to memory: 10000008 0b 000000 00000 00001 00011 00000 100010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3102a
Loading instruction to memory: 1000000c 0b 000000 00000 00011 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c01f045
Fetched 268435456 0b 001111 00000 00001 11110 00001 000101
Decoding: op -> LUI
Instruction decoded.
LUI 4031053824
0: 0x0  0xf0450000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x11822
Fetched 268435460 0b 000000 00000 00001 00011 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 263913472 = 0 - -263913472
0: 0x0  0xf0450000  0x0  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3102a
Fetched 268435464 0b 000000 00000 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 0 < 263913472
0: 0x0  0xf0450000  0x1  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf0450000  0x1  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf0450000  0x1  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sub1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010008
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030002
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010008
Fetched 268435456 0b 001000 00000 00001 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0x8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030002
Fetched 268435460 0b 001000 00000 00011 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0x8  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 6 = 8 - 2
0: 0x0  0x8  0x6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0x6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0x6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 6
Hello, Starting the simulator
Opening file tests/bin/sub2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fff8
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2003fffe
Loading instruction to memory: 10000008 0b 001000 00000 00011 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fff8
Fetched 268435456 0b 001000 00000 00001 11111 11111 111000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967288 = 0 + -8
0: 0x0  0xfffffff8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2003fffe
Fetched 268435460 0b 001000 00000 00011 11111 11111 111110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967294 = 0 + -2
0: 0x0  0xfffffff8  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB -6 = -8 - -2
0: 0x0  0xfffffff8  0xfffffffa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffffa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffffa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 250
Hello, Starting the simulator
Opening file tests/bin/sub3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010007
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 000111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030009
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 001001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010007
Fetched 268435456 0b 001000 00000 00001 00000 00000 000111
Decoding: op -> ADDI
Instruction decoded.
ADD 7 = 0 + 7
0: 0x0  0x7  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030009
Fetched 268435460 0b 001000 00000 00011 00000 00000 001001
Decoding: op -> ADDI
Instruction decoded.
ADD 9 = 0 + 9
0: 0x0  0x7  0x0  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB -2 = 7 - 9
0: 0x0  0x7  0xfffffffe  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7  0xfffffffe  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7  0xfffffffe  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 254
Hello, Starting the simulator
Opening file tests/bin/sub4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fff8
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2003fff7
Loading instruction to memory: 10000008 0b 001000 00000 00011 11111 11111 110111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fff8
Fetched 268435456 0b 001000 00000 00001 11111 11111 111000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967288 = 0 + -8
0: 0x0  0xfffffff8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2003fff7
Fetched 268435460 0b 001000 00000 00011 11111 11111 110111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967287 = 0 + -9
0: 0x0  0xfffffff8  0x0  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 1 = -8 - -9
0: 0x0  0xfffffff8  0x1  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0x1  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0x1  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sub5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20010008
Loading instruction to memory: 10000004 0b 001000 00000 00001 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2003fffe
Loading instruction to memory: 10000008 0b 001000 00000 00011 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20010008
Fetched 268435456 0b 001000 00000 00001 00000 00000 001000
Decoding: op -> ADDI
Instruction decoded.
ADD 8 = 0 + 8
0: 0x0  0x8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2003fffe
Fetched 268435460 0b 001000 00000 00011 11111 11111 111110
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967294 = 0 + -2
0: 0x0  0x8  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 10 = 8 - -2
0: 0x0  0x8  0xa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0xa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0xa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 10
Hello, Starting the simulator
Opening file tests/bin/sub6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030001
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030001
Fetched 268435460 0b 001000 00000 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x80000000  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 2147483647 = -2147483648 - 1
Substract overflow. 
Arithmetic exception occured. Terminating with code -10
Hello, Starting the simulator
Opening file tests/bin/sub7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2001fff8
Loading instruction to memory: 10000004 0b 001000 00000 00001 11111 11111 111000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030002
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2001fff8
Fetched 268435456 0b 001000 00000 00001 11111 11111 111000
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967288 = 0 + -8
0: 0x0  0xfffffff8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030002
Fetched 268435460 0b 001000 00000 00011 00000 00000 000010
Decoding: op -> ADDI
Instruction decoded.
ADD 2 = 0 + 2
0: 0x0  0xfffffff8  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB -10 = -8 - 2
0: 0x0  0xfffffff8  0xfffffff6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffff6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffff6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 246
Hello, Starting the simulator
Opening file tests/bin/sub8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030001
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231022
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030001
Fetched 268435460 0b 001001 00000 00011 00000 00000 000001
Decoding: op -> ADDUI
Instruction decoded.
ADDU 1 = 0 + 1
0: 0x0  0x80000000  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231022
Fetched 268435464 0b 000000 00001 00011 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 2147483647 = -2147483648 - 1
Substract overflow. 
Arithmetic exception occured. Terminating with code -10
Hello, Starting the simulator
Opening file tests/bin/sub9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x11822
Loading instruction to memory: 1000000c 0b 000000 00000 00001 00011 00000 100010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x60102a
Loading instruction to memory: 10000010 0b 000000 00011 00000 00010 00000 101010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x11822
Fetched 268435464 0b 000000 00000 00001 00011 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB -2147483647 = 0 - 2147483647
0: 0x0  0x7fffffff  0x0  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x60102a
Fetched 268435468 0b 000000 00011 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = -2147483647 < 0
0: 0x0  0x7fffffff  0x1  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x1  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x1  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/subu10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c01f045
Loading instruction to memory: 10000004 0b 001111 00000 00001 11110 00001 000101
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x11823
Loading instruction to memory: 10000008 0b 000000 00000 00001 00011 00000 100011
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x3102a
Loading instruction to memory: 1000000c 0b 000000 00000 00011 00010 00000 101010
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c01f045
Fetched 268435456 0b 001111 00000 00001 11110 00001 000101
Decoding: op -> LUI
Instruction decoded.
LUI 4031053824
0: 0x0  0xf0450000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x11823
Fetched 268435460 0b 000000 00000 00001 00011 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 263913472 = 0 - -263913472
0: 0x0  0xf0450000  0x0  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x3102a
Fetched 268435464 0b 000000 00000 00011 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = 0 < 263913472
0: 0x0  0xf0450000  0x1  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf0450000  0x1  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xf0450000  0x1  0xfbb0000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/subu1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24010008
Loading instruction to memory: 10000004 0b 001001 00000 00001 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030002
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24010008
Fetched 268435456 0b 001001 00000 00001 00000 00000 001000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 8 = 0 + 8
0: 0x0  0x8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030002
Fetched 268435460 0b 001001 00000 00011 00000 00000 000010
Decoding: op -> ADDUI
Instruction decoded.
ADDU 2 = 0 + 2
0: 0x0  0x8  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 6 = 8 - 2
0: 0x0  0x8  0x6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0x6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0x6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 6
Hello, Starting the simulator
Opening file tests/bin/subu2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2401fff8
Loading instruction to memory: 10000004 0b 001001 00000 00001 11111 11111 111000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2403fffe
Loading instruction to memory: 10000008 0b 001001 00000 00011 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2401fff8
Fetched 268435456 0b 001001 00000 00001 11111 11111 111000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967288 = 0 + 4294967288
0: 0x0  0xfffffff8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2403fffe
Fetched 268435460 0b 001001 00000 00011 11111 11111 111110
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967294 = 0 + 4294967294
0: 0x0  0xfffffff8  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU -6 = -8 - -2
0: 0x0  0xfffffff8  0xfffffffa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffffa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffffa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 250
Hello, Starting the simulator
Opening file tests/bin/subu3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24010007
Loading instruction to memory: 10000004 0b 001001 00000 00001 00000 00000 000111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030009
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 001001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24010007
Fetched 268435456 0b 001001 00000 00001 00000 00000 000111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 7 = 0 + 7
0: 0x0  0x7  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030009
Fetched 268435460 0b 001001 00000 00011 00000 00000 001001
Decoding: op -> ADDUI
Instruction decoded.
ADDU 9 = 0 + 9
0: 0x0  0x7  0x0  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU -2 = 7 - 9
0: 0x0  0x7  0xfffffffe  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7  0xfffffffe  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7  0xfffffffe  0x9  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 254
Hello, Starting the simulator
Opening file tests/bin/subu4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2401fff8
Loading instruction to memory: 10000004 0b 001001 00000 00001 11111 11111 111000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2403fff7
Loading instruction to memory: 10000008 0b 001001 00000 00011 11111 11111 110111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2401fff8
Fetched 268435456 0b 001001 00000 00001 11111 11111 111000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967288 = 0 + 4294967288
0: 0x0  0xfffffff8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2403fff7
Fetched 268435460 0b 001001 00000 00011 11111 11111 110111
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967287 = 0 + 4294967287
0: 0x0  0xfffffff8  0x0  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 1 = -8 - -9
0: 0x0  0xfffffff8  0x1  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0x1  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0x1  0xfffffff7  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/subu5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x24010008
Loading instruction to memory: 10000004 0b 001001 00000 00001 00000 00000 001000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2403fffe
Loading instruction to memory: 10000008 0b 001001 00000 00011 11111 11111 111110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x24010008
Fetched 268435456 0b 001001 00000 00001 00000 00000 001000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 8 = 0 + 8
0: 0x0  0x8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2403fffe
Fetched 268435460 0b 001001 00000 00011 11111 11111 111110
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967294 = 0 + 4294967294
0: 0x0  0x8  0x0  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 10 = 8 - -2
0: 0x0  0x8  0xa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0xa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x8  0xa  0xfffffffe  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 10
Hello, Starting the simulator
Opening file tests/bin/subu6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20030001
Loading instruction to memory: 10000008 0b 001000 00000 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3c047fff
Loading instruction to memory: 10000010 0b 001111 00000 00100 01111 11111 111111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3484ffff
Loading instruction to memory: 10000014 0b 001101 00100 00100 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x821022
Loading instruction to memory: 10000018 0b 000000 00100 00010 00010 00000 100010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20030001
Fetched 268435460 0b 001000 00000 00011 00000 00000 000001
Decoding: op -> ADDI
Instruction decoded.
ADD 1 = 0 + 1
0: 0x0  0x80000000  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 2147483647 = -2147483648 - 1
0: 0x0  0x80000000  0x7fffffff  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3c047fff
Fetched 268435468 0b 001111 00000 00100 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x80000000  0x7fffffff  0x1  0x7fff0000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3484ffff
Fetched 268435472 0b 001101 00100 00100 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x80000000  0x7fffffff  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x821022
Fetched 268435476 0b 000000 00100 00010 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 0 = 2147483647 - 2147483647
0: 0x0  0x80000000  0x0  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x0  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x0  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/subu7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2401fff8
Loading instruction to memory: 10000004 0b 001001 00000 00001 11111 11111 111000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030002
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 000010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2401fff8
Fetched 268435456 0b 001001 00000 00001 11111 11111 111000
Decoding: op -> ADDUI
Instruction decoded.
ADDU 4294967288 = 0 + 4294967288
0: 0x0  0xfffffff8  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030002
Fetched 268435460 0b 001001 00000 00011 00000 00000 000010
Decoding: op -> ADDUI
Instruction decoded.
ADDU 2 = 0 + 2
0: 0x0  0xfffffff8  0x0  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU -10 = -8 - 2
0: 0x0  0xfffffff8  0xfffffff6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffff6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0xfffffff8  0xfffffff6  0x2  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 246
Hello, Starting the simulator
Opening file tests/bin/subu8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c018000
Loading instruction to memory: 10000004 0b 001111 00000 00001 10000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x24030001
Loading instruction to memory: 10000008 0b 001001 00000 00011 00000 00000 000001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x231023
Loading instruction to memory: 1000000c 0b 000000 00001 00011 00010 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x3c047fff
Loading instruction to memory: 10000010 0b 001111 00000 00100 01111 11111 111111
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x3484ffff
Loading instruction to memory: 10000014 0b 001101 00100 00100 11111 11111 111111
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x821022
Loading instruction to memory: 10000018 0b 000000 00100 00010 00010 00000 100010
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000001c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000020 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000020
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c018000
Fetched 268435456 0b 001111 00000 00001 10000 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 2147483648
0: 0x0  0x80000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x24030001
Fetched 268435460 0b 001001 00000 00011 00000 00000 000001
Decoding: op -> ADDUI
Instruction decoded.
ADDU 1 = 0 + 1
0: 0x0  0x80000000  0x0  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x231023
Fetched 268435464 0b 000000 00001 00011 00010 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU 2147483647 = -2147483648 - 1
0: 0x0  0x80000000  0x7fffffff  0x1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x3c047fff
Fetched 268435468 0b 001111 00000 00100 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x80000000  0x7fffffff  0x1  0x7fff0000  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x3484ffff
Fetched 268435472 0b 001101 00100 00100 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x80000000  0x7fffffff  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x821022
Fetched 268435476 0b 000000 00100 00010 00010 00000 100010
Decoding: op, func -> SUB
Instruction decoded.
SUB 0 = 2147483647 - 2147483647
0: 0x0  0x80000000  0x0  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x0  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 6
=============================================================================
Reading @0x1000001c from segment @ offset 0x10000000  0x8
Fetched 268435484 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x80000000  0x0  0x1  0x7fffffff  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/subu9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c017fff
Loading instruction to memory: 10000004 0b 001111 00000 00001 01111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3421ffff
Loading instruction to memory: 10000008 0b 001101 00001 00001 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x11823
Loading instruction to memory: 1000000c 0b 000000 00000 00001 00011 00000 100011
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x60102a
Loading instruction to memory: 10000010 0b 000000 00011 00000 00010 00000 101010
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c017fff
Fetched 268435456 0b 001111 00000 00001 01111 11111 111111
Decoding: op -> LUI
Instruction decoded.
LUI 2147418112
0: 0x0  0x7fff0000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3421ffff
Fetched 268435460 0b 001101 00001 00001 11111 11111 111111
Decoding: op -> ORI
Instruction decoded.
OR 0x7fffffff = 0x7fff0000 | 0xffff
0: 0x0  0x7fffffff  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x11823
Fetched 268435464 0b 000000 00000 00001 00011 00000 100011
Decoding: op, func -> SUBU
Instruction decoded.
SUBU -2147483647 = 0 - 2147483647
0: 0x0  0x7fffffff  0x0  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x60102a
Fetched 268435468 0b 000000 00011 00000 00010 00000 101010
Decoding: op, func -> SLT
Instruction decoded.
SLT 1 = -2147483647 < 0
0: 0x0  0x7fffffff  0x1  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x1  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x7fffffff  0x1  0x80000001  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 1
Hello, Starting the simulator
Opening file tests/bin/sw10.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 10000004 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000008 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000000c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0xac230000
Fetched 268435456 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x0 from segment @ offset 0x0  0x0
Storing 4 @0: 0Writing @0x0 to   segment @ offset 0x0  0x0
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sw11.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20631234
Loading instruction to memory: 10000008 0b 001000 00011 00011 00010 01000 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000010 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20631234
Fetched 268435460 0b 001000 00011 00011 00010 01000 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 4660 = 0 + 4660
0: 0x0  0x20000000  0x0  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: 1234Writing @0x20000000 to   segment @ offset 0x20000000  0x1234
 as 1234
0: 0x0  0x20000000  0x0  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8c220000
Fetched 268435468 0b 100011 00001 00010 00000 00000 000000
Decoding: op -> LW
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0x1234
Loading 4 @536870912: 1234 as 1234
0: 0x0  0x20000000  0x1234  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x1234  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0x1234  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 52
Hello, Starting the simulator
Opening file tests/bin/sw12.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20631234
Loading instruction to memory: 10000008 0b 001000 00011 00011 00010 01000 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac23fffc
Loading instruction to memory: 1000000c 0b 101011 00001 00011 11111 11111 111100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000010 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20631234
Fetched 268435460 0b 001000 00011 00011 00010 01000 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 4660 = 0 + 4660
0: 0x0  0x20000000  0x0  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac23fffc
Fetched 268435464 0b 101011 00001 00011 11111 11111 111100
Decoding: op -> SW
Instruction decoded.
MasterReading @0x1ffffffc from segment @ offset 0x10000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sw13.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20631234
Loading instruction to memory: 10000008 0b 001000 00011 00011 00010 01000 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac23fffc
Loading instruction to memory: 1000000c 0b 101011 00001 00011 11111 11111 111100
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c22fffc
Loading instruction to memory: 10000010 0b 100011 00001 00010 11111 11111 111100
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20631234
Fetched 268435460 0b 001000 00011 00011 00010 01000 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 4660 = 0 + 4660
0: 0x0  0x24000000  0x0  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac23fffc
Fetched 268435464 0b 101011 00001 00011 11111 11111 111100
Decoding: op -> SW
Instruction decoded.
MasterReading @0x23fffffc from segment @ offset 0x20000000  0x0
Storing 4 @603979772: 1234Writing @0x23fffffc to   segment @ offset 0x20000000  0x1234
 as 1234
0: 0x0  0x24000000  0x0  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8c22fffc
Fetched 268435468 0b 100011 00001 00010 11111 11111 111100
Decoding: op -> LW
Instruction decoded.
Reading @0x23fffffc from segment @ offset 0x20000000  0x1234
Loading 4 @603979772: 1234 as 1234
0: 0x0  0x24000000  0x1234  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x1234  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x24000000  0x1234  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 52
Hello, Starting the simulator
Opening file tests/bin/sw14.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20631234
Loading instruction to memory: 10000008 0b 001000 00011 00011 00010 01000 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8c220000
Loading instruction to memory: 10000010 0b 100011 00001 00010 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20631234
Fetched 268435460 0b 001000 00011 00011 00010 01000 110100
Decoding: op -> ADDI
Instruction decoded.
ADD 4660 = 0 + 4660
0: 0x0  0x24000000  0x0  0x1234  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sw1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210000
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 1000000c 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 10000010 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x80220001
Loading instruction to memory: 10000014 0b 100000 00001 00010 00000 00000 000001
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210000
Fetched 268435460 0b 001101 00001 00001 00000 00000 000000
Decoding: op -> ORI
Instruction decoded.
OR 0x20000000 = 0x20000000 | 0x0
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435464 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x20000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac230000
Fetched 268435468 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: fffff0f1Writing @0x20000000 to   segment @ offset 0x20000000  0xfffff0f1
 as fffff0f1
0: 0x0  0x20000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x80220001
Fetched 268435472 0b 100000 00001 00010 00000 00000 000001
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0xfffff0f1
Loading 1 @536870913: ff0000 as ffffffff
0: 0x0  0x20000000  0xffffffff  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xffffffff  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xffffffff  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 255
Hello, Starting the simulator
Opening file tests/bin/sw2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210000
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 1000000c 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 10000010 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x80220002
Loading instruction to memory: 10000014 0b 100000 00001 00010 00000 00000 000010
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210000
Fetched 268435460 0b 001101 00001 00001 00000 00000 000000
Decoding: op -> ORI
Instruction decoded.
OR 0x20000000 = 0x20000000 | 0x0
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435464 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x20000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac230000
Fetched 268435468 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: fffff0f1Writing @0x20000000 to   segment @ offset 0x20000000  0xfffff0f1
 as fffff0f1
0: 0x0  0x20000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x80220002
Fetched 268435472 0b 100000 00001 00010 00000 00000 000010
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0xfffff0f1
Loading 1 @536870914: f000 as fffffff0
0: 0x0  0x20000000  0xfffffff0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xfffffff0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xfffffff0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 240
Hello, Starting the simulator
Opening file tests/bin/sw3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210000
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 1000000c 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 10000010 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x80220003
Loading instruction to memory: 10000014 0b 100000 00001 00010 00000 00000 000011
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210000
Fetched 268435460 0b 001101 00001 00001 00000 00000 000000
Decoding: op -> ORI
Instruction decoded.
OR 0x20000000 = 0x20000000 | 0x0
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435464 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x20000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac230000
Fetched 268435468 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x20000000 from segment @ offset 0x20000000  0x0
Storing 4 @536870912: fffff0f1Writing @0x20000000 to   segment @ offset 0x20000000  0xfffff0f1
 as fffff0f1
0: 0x0  0x20000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x80220003
Fetched 268435472 0b 100000 00001 00010 00000 00000 000011
Decoding: op -> LB
Instruction decoded.
Reading @0x20000000 from segment @ offset 0x20000000  0xfffff0f1
Loading 1 @536870915: f1 as fffffff1
0: 0x0  0x20000000  0xfffffff1  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xfffffff1  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 5
=============================================================================
Reading @0x10000018 from segment @ offset 0x10000000  0x8
Fetched 268435480 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x20000000  0xfffffff1  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 241
Hello, Starting the simulator
Opening file tests/bin/sw4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210000
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 1000000c 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac230001
Loading instruction to memory: 10000010 0b 101011 00001 00011 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x80220003
Loading instruction to memory: 10000014 0b 100000 00001 00010 00000 00000 000011
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000018 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000001c 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 1000001c
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012000
Fetched 268435456 0b 001111 00000 00001 00100 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 536870912
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210000
Fetched 268435460 0b 001101 00001 00001 00000 00000 000000
Decoding: op -> ORI
Instruction decoded.
OR 0x20000000 = 0x20000000 | 0x0
0: 0x0  0x20000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435464 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x20000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac230001
Fetched 268435468 0b 101011 00001 00011 00000 00000 000001
Decoding: op -> SW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sw5.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c012400
Loading instruction to memory: 10000004 0b 001111 00000 00001 00100 10000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 10000008 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x80220003
Loading instruction to memory: 10000010 0b 100000 00001 00010 00000 00000 000011
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c012400
Fetched 268435456 0b 001111 00000 00001 00100 10000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 603979776
0: 0x0  0x24000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435460 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x24000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230000
Fetched 268435464 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x24000000 from segment @ offset 0x20000000 Out of range memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sw6.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210004
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 1000000c 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 10000010 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210004
Fetched 268435460 0b 001101 00001 00001 00000 00000 000100
Decoding: op -> ORI
Instruction decoded.
OR 0x30000004 = 0x30000000 | 0x4
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435464 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x30000004  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac230000
Fetched 268435468 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x30000004 from segment @ offset 0x30000004  0x0
Storing 4 @805306372: fffff0f1Writing @0x30000004 to   segment @ offset 0x30000004  0xfffff0f1
 as fffff0f1
0: 0x0  0x30000004  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000004  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 4
=============================================================================
Reading @0x10000014 from segment @ offset 0x10000000  0x8
Fetched 268435476 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x30000004  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 0
Hello, Starting the simulator
Opening file tests/bin/sw7.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210004
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 1000000c 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac230001
Loading instruction to memory: 10000010 0b 101011 00001 00011 00000 00000 000001
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210004
Fetched 268435460 0b 001101 00001 00001 00000 00000 000100
Decoding: op -> ORI
Instruction decoded.
OR 0x30000004 = 0x30000000 | 0x4
0: 0x0  0x30000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435464 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x30000004  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac230001
Fetched 268435468 0b 101011 00001 00011 00000 00000 000001
Decoding: op -> SW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sw8.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c013000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00110 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210000
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x2063f0f1
Loading instruction to memory: 1000000c 0b 001000 00011 00011 11110 00011 110001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0xac230000
Loading instruction to memory: 10000010 0b 101011 00001 00011 00000 00000 000000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000014 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000018 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000018
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c013000
Fetched 268435456 0b 001111 00000 00001 00110 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 805306368
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210000
Fetched 268435460 0b 001101 00001 00001 00000 00000 000000
Decoding: op -> ORI
Instruction decoded.
OR 0x30000000 = 0x30000000 | 0x0
0: 0x0  0x30000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x2063f0f1
Fetched 268435464 0b 001000 00011 00011 11110 00011 110001
Decoding: op -> ADDI
Instruction decoded.
ADD 4294963441 = 0 + -3855
0: 0x0  0x30000000  0x0  0xfffff0f1  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0xac230000
Fetched 268435468 0b 101011 00001 00011 00000 00000 000000
Decoding: op -> SW
Instruction decoded.
MasterReading @0x30000000 from segment @ offset 0x30000000 Getting char from input: 61
 0x61
Storing 4 @805306368: fffff0f1Writing @0x30000000 to   segment @ offset 0x30000000  0xfffff0f1
Writing to read only memory. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/sw9.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c011000
Loading instruction to memory: 10000004 0b 001111 00000 00001 00010 00000 000000
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x34210004
Loading instruction to memory: 10000008 0b 001101 00001 00001 00000 00000 000100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0xac230001
Loading instruction to memory: 1000000c 0b 101011 00001 00011 00000 00000 000001
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c011000
Fetched 268435456 0b 001111 00000 00001 00010 00000 000000
Decoding: op -> LUI
Instruction decoded.
LUI 268435456
0: 0x0  0x10000000  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x34210004
Fetched 268435460 0b 001101 00001 00001 00000 00000 000100
Decoding: op -> ORI
Instruction decoded.
OR 0x10000004 = 0x10000000 | 0x4
0: 0x0  0x10000004  0x0  0x0  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0xac230001
Fetched 268435464 0b 101011 00001 00011 00000 00000 000001
Decoding: op -> SW
Instruction decoded.
Requesting unaligned memory acces. 
Memory exception occured. Terminating with code -11
Hello, Starting the simulator
Opening file tests/bin/xor1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x2043ffff
Loading instruction to memory: 10000004 0b 001000 00010 00011 11111 11111 111111
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20043452
Loading instruction to memory: 10000008 0b 001000 00000 00100 00110 10001 010010
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x641026
Loading instruction to memory: 1000000c 0b 000000 00011 00100 00010 00000 100110
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x2043ffff
Fetched 268435456 0b 001000 00010 00011 11111 11111 111111
Decoding: op -> ADDI
Instruction decoded.
ADD 4294967295 = 0 + -1
0: 0x0  0x0  0x0  0xffffffff  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20043452
Fetched 268435460 0b 001000 00000 00100 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x641026
Fetched 268435464 0b 000000 00011 00100 00010 00000 100110
Decoding: op, func -> XOR
Instruction decoded.
XOR 0xffffcbad = 0xffffffff ^ 0x3452
0: 0x0  0x0  0xffffcbad  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffcbad  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xffffcbad  0xffffffff  0x3452  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 173
Hello, Starting the simulator
Opening file tests/bin/xor2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x601026
Loading instruction to memory: 10000008 0b 000000 00011 00000 00010 00000 100110
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x601026
Fetched 268435460 0b 000000 00011 00000 00010 00000 100110
Decoding: op, func -> XOR
Instruction decoded.
XOR 0x3452 = 0x3452 ^ 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 82
Hello, Starting the simulator
Opening file tests/bin/xor3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x20043875
Loading instruction to memory: 10000008 0b 001000 00000 00100 00111 00001 110101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x641026
Loading instruction to memory: 1000000c 0b 000000 00011 00100 00010 00000 100110
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x10000010 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000014 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000014
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x20043875
Fetched 268435460 0b 001000 00000 00100 00111 00001 110101
Decoding: op -> ADDI
Instruction decoded.
ADD 14453 = 0 + 14453
0: 0x0  0x0  0x0  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x641026
Fetched 268435464 0b 000000 00011 00100 00010 00000 100110
Decoding: op, func -> XOR
Instruction decoded.
XOR 0xc27 = 0x3452 ^ 0x3875
0: 0x0  0x0  0xc27  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xc27  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 3
=============================================================================
Reading @0x10000010 from segment @ offset 0x10000000  0x8
Fetched 268435472 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xc27  0x3452  0x3875  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 39
Hello, Starting the simulator
Opening file tests/bin/xori1.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x3862ffff
Loading instruction to memory: 10000008 0b 001110 00011 00010 11111 11111 111111
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x3862ffff
Fetched 268435460 0b 001110 00011 00010 11111 11111 111111
Decoding: op -> XORI
Instruction decoded.
XOR 0xcbad = 0x3452 ^ 0xffff
0: 0x0  0x0  0xcbad  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xcbad  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xcbad  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 173
Hello, Starting the simulator
Opening file tests/bin/xori2.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x38620000
Loading instruction to memory: 10000008 0b 001110 00011 00010 00000 00000 000000
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x38620000
Fetched 268435460 0b 001110 00011 00010 00000 00000 000000
Decoding: op -> XORI
Instruction decoded.
XOR 0x3452 = 0x3452 ^ 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x3452  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 82
Hello, Starting the simulator
Opening file tests/bin/xori3.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x20033452
Loading instruction to memory: 10000004 0b 001000 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x38623875
Loading instruction to memory: 10000008 0b 001110 00011 00010 00111 00001 110101
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x20033452
Fetched 268435456 0b 001000 00000 00011 00110 10001 010010
Decoding: op -> ADDI
Instruction decoded.
ADD 13394 = 0 + 13394
0: 0x0  0x0  0x0  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x38623875
Fetched 268435460 0b 001110 00011 00010 00111 00001 110101
Decoding: op -> XORI
Instruction decoded.
XOR 0xc27 = 0x3452 ^ 0x3875
0: 0x0  0x0  0xc27  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xc27  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0xc27  0x3452  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 39
Hello, Starting the simulator
Opening file tests/bin/xori4.bin
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Building memory using MIPSMemoryFactory.
Scaffolding memory.
Scaffolding of memory done.
MasterWriting @0x10000000 to   segment @ offset 0x10000000  0x3c033452
Loading instruction to memory: 10000004 0b 001111 00000 00011 00110 10001 010010
MasterWriting @0x10000004 to   segment @ offset 0x10000000  0x38623874
Loading instruction to memory: 10000008 0b 001110 00011 00010 00111 00001 110100
MasterWriting @0x10000008 to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 1000000c 0b 000000 00000 00000 00000 00000 001000
MasterWriting @0x1000000c to   segment @ offset 0x10000000  0x8
Loading instruction to memory: 10000010 0b 000000 00000 00000 00000 00000 001000
Memory building done.
Initializing 32 registers with values 0
Initializing hi and lo registers to 0
Initializing processor with instructions in range10000000 10000010
=============================================================================
Reading @0x10000000 from segment @ offset 0x10000000  0x3c033452
Fetched 268435456 0b 001111 00000 00011 00110 10001 010010
Decoding: op -> LUI
Instruction decoded.
LUI 877789184
0: 0x0  0x0  0x0  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 0
=============================================================================
Reading @0x10000004 from segment @ offset 0x10000000  0x38623874
Fetched 268435460 0b 001110 00011 00010 00111 00001 110100
Decoding: op -> XORI
Instruction decoded.
XOR 0x34523874 = 0x34520000 ^ 0x3874
0: 0x0  0x0  0x34523874  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 1
=============================================================================
Reading @0x10000008 from segment @ offset 0x10000000  0x8
Fetched 268435464 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x34523874  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Cycle: 2
=============================================================================
Reading @0x1000000c from segment @ offset 0x10000000  0x8
Fetched 268435468 0b 000000 00000 00000 00000 00000 001000
Decoding: op, func -> JR
Instruction decoded.
JB taken  -> 0x0
0: 0x0  0x0  0x34523874  0x34520000  0x0  0x0  0x0  0x0  
8: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
16: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
24: 0x0  0x0  0x0  0x0  0x0  0x0  0x0  0x0  
Exiting with code: 116
