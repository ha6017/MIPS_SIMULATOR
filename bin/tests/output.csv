Test ID, Instruction name, Expected Output, Author, Additional Information
add1, add, Fail, Carla, no problem +ve
add2, add, Fail, Carla, no problem -ve
addu, addu, Fail, Carla, no problem
beq1, beq, Fail, Carla, should branch rt = rs
beq2, beq, Fail, Carla, should not branch rt != rs
beq3, beq, Fail, Carla, should branch rt = rs (negative)
beq4, beq, Fail, Carla, out of range PC
beq5, beq, Fail, Carla, correct negative branch PC
beq6, beq, Fail, Carla, don’t branch second
bgez1, bgez, Fail, Carla, should branch positive rt
bgez2, bgez, Fail, Carla, shouldn’t branch negative rt
bgez3, bgez, Fail, Carla, should branch rt zero
bgez4, bgez, Fail, Carla, out of range PC
bgez5, bgez, Fail, Carla, out of range PC
bgez6, bgez, Fail, Carla, correct negative offset
bgezal1, bgezal, Fail, Carla, should branch positive rt
bgezal2, bgezal, Fail, Carla, shouldn’t branch negative rt
bgezal3, bgezal, Fail, Carla, should branch rt zero
bgezal4, bgezal, Fail, Carla, out of range PC
bgezal5, bgezal, Fail, Carla, take both branches +ve and -ve
bgezal6, bgezal, Fail, Carla, don’t take second branch
bgezal7, bgezal, Fail, Carla, linker
bltz1, bltz, Fail, Carla, should branch negative rt
bltz2, bltz, Fail, Carla, shouldn’t branch positive rt
bltz3, bltz, Fail, Carla, should not branch rt zero
bltz4, bltz, Fail, Carla, out of range PC
bltz5, bltz, Fail, Carla, take both branches
bltz6, bltz, Fail, Carla, don’t take second branch
bltzal1, bltzal, Fail, Carla, should branch -ve rt
bltzal2, bltzal, Fail, Carla, shouldn’t branch +ve rt
bltzal3, bltzal, Fail, Carla, should not branch rt zero
bltzal4, bltzal, Fail, Carla, out of range PC
bltzal5, bltzal, Fail, Carla, take both branches +ve and -ve
bltzal6, bltzal, Fail, Carla, don’t take second branch
bltzal7, bltzal, Fail, Carla, linker
jr1, jr, Fail, Carla, jump to address in $4
